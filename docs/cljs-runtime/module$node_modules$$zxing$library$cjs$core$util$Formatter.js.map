{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$util$Formatter.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/util/Formatter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$util$Formatter\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Java Formatter class polyfill that works in the JS way.\n */\nvar Formatter = /** @class */ (function () {\n    function Formatter() {\n        this.buffer = '';\n    }\n    /**\n     *\n     * @see https://stackoverflow.com/a/13439711/4367683\n     *\n     * @param str\n     * @param arr\n     */\n    Formatter.form = function (str, arr) {\n        var i = -1;\n        function callback(exp, p0, p1, p2, p3, p4) {\n            if (exp === '%%')\n                return '%';\n            if (arr[++i] === undefined)\n                return undefined;\n            exp = p2 ? parseInt(p2.substr(1)) : undefined;\n            var base = p3 ? parseInt(p3.substr(1)) : undefined;\n            var val;\n            switch (p4) {\n                case 's':\n                    val = arr[i];\n                    break;\n                case 'c':\n                    val = arr[i][0];\n                    break;\n                case 'f':\n                    val = parseFloat(arr[i]).toFixed(exp);\n                    break;\n                case 'p':\n                    val = parseFloat(arr[i]).toPrecision(exp);\n                    break;\n                case 'e':\n                    val = parseFloat(arr[i]).toExponential(exp);\n                    break;\n                case 'x':\n                    val = parseInt(arr[i]).toString(base ? base : 16);\n                    break;\n                case 'd':\n                    val = parseFloat(parseInt(arr[i], base ? base : 10).toPrecision(exp)).toFixed(0);\n                    break;\n            }\n            val = typeof val === 'object' ? JSON.stringify(val) : (+val).toString(base);\n            var size = parseInt(p1); /* padding size */\n            var ch = p1 && (p1[0] + '') === '0' ? '0' : ' '; /* isnull? */\n            while (val.length < size)\n                val = p0 !== undefined ? val + ch : ch + val; /* isminus? */\n            return val;\n        }\n        var regex = /%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;\n        return str.replace(regex, callback);\n    };\n    /**\n     *\n     * @param append The new string to append.\n     * @param args Argumets values to be formated.\n     */\n    Formatter.prototype.format = function (append) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.buffer += Formatter.form(append, args);\n    };\n    /**\n     * Returns the Formatter string value.\n     */\n    Formatter.prototype.toString = function () {\n        return this.buffer;\n    };\n    return Formatter;\n}());\nexports.default = Formatter;\n//# sourceMappingURL=Formatter.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Formatter","buffer","form","Formatter.form","str","arr","i","replace","regex","callback","exp","p0","p1","p2","p3","p4","undefined","parseInt","substr","base","val","parseFloat","toFixed","toPrecision","toExponential","toString","JSON","stringify","size","ch","length","prototype","format","Formatter.prototype.format","append","args","_i","arguments","Formatter.prototype.toString","default"]
}
