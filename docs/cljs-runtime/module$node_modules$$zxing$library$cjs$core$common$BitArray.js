shadow$provide.module$node_modules$$zxing$library$cjs$core$common$BitArray=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var IllegalArgumentException_1=require("module$node_modules$$zxing$library$cjs$core$IllegalArgumentException"),Arrays_1=require("module$node_modules$$zxing$library$cjs$core$util$Arrays"),Integer_1=require("module$node_modules$$zxing$library$cjs$core$util$Integer"),System_1=require("module$node_modules$$zxing$library$cjs$core$util$System");
global=function(){function BitArray(size,bits){void 0===size?(this.size=0,this.bits=new Int32Array(1)):(this.size=size,this.bits=void 0===bits||null===bits?BitArray.makeArray(size):bits)}BitArray.prototype.getSize=function(){return this.size};BitArray.prototype.getSizeInBytes=function(){return Math.floor((this.size+7)/8)};BitArray.prototype.ensureCapacity=function(size){size>32*this.bits.length&&(size=BitArray.makeArray(size),System_1.default.arraycopy(this.bits,0,size,0,this.bits.length),this.bits=
size)};BitArray.prototype.get=function(i){return 0!==(this.bits[Math.floor(i/32)]&1<<(i&31))};BitArray.prototype.set=function(i){this.bits[Math.floor(i/32)]|=1<<(i&31)};BitArray.prototype.flip=function(i){this.bits[Math.floor(i/32)]^=1<<(i&31)};BitArray.prototype.getNextSet=function(from){var size=this.size;if(from>=size)return size;var bits=this.bits,bitsOffset=Math.floor(from/32),currentBits=bits[bitsOffset];currentBits&=~((1<<(from&31))-1);for(from=bits.length;0===currentBits;){if(++bitsOffset===
from)return size;currentBits=bits[bitsOffset]}bits=32*bitsOffset+Integer_1.default.numberOfTrailingZeros(currentBits);return bits>size?size:bits};BitArray.prototype.getNextUnset=function(from){var size=this.size;if(from>=size)return size;var bits=this.bits,bitsOffset=Math.floor(from/32),currentBits=~bits[bitsOffset];currentBits&=~((1<<(from&31))-1);for(from=bits.length;0===currentBits;){if(++bitsOffset===from)return size;currentBits=~bits[bitsOffset]}bits=32*bitsOffset+Integer_1.default.numberOfTrailingZeros(currentBits);
return bits>size?size:bits};BitArray.prototype.setBulk=function(i,newBits){this.bits[Math.floor(i/32)]=newBits};BitArray.prototype.setRange=function(start,end){if(end<start||0>start||end>this.size)throw new IllegalArgumentException_1.default;if(end!==start){end--;for(var firstInt=Math.floor(start/32),lastInt=Math.floor(end/32),bits=this.bits,i=firstInt;i<=lastInt;i++)bits[i]|=(2<<(i<lastInt?31:end&31))-(1<<(i>firstInt?0:start&31))}};BitArray.prototype.clear=function(){for(var max=this.bits.length,
bits=this.bits,i=0;i<max;i++)bits[i]=0};BitArray.prototype.isRange=function(start,end,value){if(end<start||0>start||end>this.size)throw new IllegalArgumentException_1.default;if(end===start)return!0;end--;for(var firstInt=Math.floor(start/32),lastInt=Math.floor(end/32),bits=this.bits,i=firstInt;i<=lastInt;i++){var mask=(2<<(i<lastInt?31:end&31))-(1<<(i>firstInt?0:start&31))&4294967295;if((bits[i]&mask)!==(value?mask:0))return!1}return!0};BitArray.prototype.appendBit=function(bit){this.ensureCapacity(this.size+
1);bit&&(this.bits[Math.floor(this.size/32)]|=1<<(this.size&31));this.size++};BitArray.prototype.appendBits=function(value,numBits){if(0>numBits||32<numBits)throw new IllegalArgumentException_1.default("Num bits must be between 0 and 32");for(this.ensureCapacity(this.size+numBits);0<numBits;numBits--)this.appendBit(1===(value>>numBits-1&1))};BitArray.prototype.appendBitArray=function(other){var otherSize=other.size;this.ensureCapacity(this.size+otherSize);for(var i=0;i<otherSize;i++)this.appendBit(other.get(i))};
BitArray.prototype.xor=function(other){if(this.size!==other.size)throw new IllegalArgumentException_1.default("Sizes don't match");for(var bits=this.bits,i=0,length_1=bits.length;i<length_1;i++)bits[i]^=other.bits[i]};BitArray.prototype.toBytes=function(bitOffset,array,offset,numBytes){for(var i=0;i<numBytes;i++){for(var theByte=0,j=0;8>j;j++)this.get(bitOffset)&&(theByte|=1<<7-j),bitOffset++;array[offset+i]=theByte}};BitArray.prototype.getBitArray=function(){return this.bits};BitArray.prototype.reverse=
function(){for(var newBits=new Int32Array(this.bits.length),len=Math.floor((this.size-1)/32),oldBitsLen=len+1,bits=this.bits,i=0;i<oldBitsLen;i++){var x=bits[i];x=x>>1&1431655765|(x&1431655765)<<1;x=x>>2&858993459|(x&858993459)<<2;x=x>>4&252645135|(x&252645135)<<4;x=x>>8&16711935|(x&16711935)<<8;x=x>>16&65535|(x&65535)<<16;newBits[len-i]=x}if(this.size!==32*oldBitsLen){len=32*oldBitsLen-this.size;bits=newBits[0]>>>len;for(i=1;i<oldBitsLen;i++)x=newBits[i],bits|=x<<32-len,newBits[i-1]=bits,bits=x>>>
len;newBits[oldBitsLen-1]=bits}this.bits=newBits};BitArray.makeArray=function(size){return new Int32Array(Math.floor((size+31)/32))};BitArray.prototype.equals=function(o){return o instanceof BitArray?this.size===o.size&&Arrays_1.default.equals(this.bits,o.bits):!1};BitArray.prototype.hashCode=function(){return 31*this.size+Arrays_1.default.hashCode(this.bits)};BitArray.prototype.toString=function(){for(var result="",i=0,size=this.size;i<size;i++)0===(i&7)&&(result+=" "),result+=this.get(i)?"X":".";
return result};BitArray.prototype.clone=function(){return new BitArray(this.size,this.bits.slice())};return BitArray}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$common$BitArray.js.map
