shadow$provide.module$node_modules$$zxing$library$cjs$core$aztec$encoder$Encoder=function(global,require,module,exports){var __values=this&&this.__values||function(o){var s="function"===typeof Symbol&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&"number"===typeof o.length)return{next:function(){o&&i>=o.length&&(o=void 0);return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");};Object.defineProperty(exports,"__esModule",{value:!0});
var BitArray_1=require("module$node_modules$$zxing$library$cjs$core$common$BitArray"),IllegalArgumentException_1=require("module$node_modules$$zxing$library$cjs$core$IllegalArgumentException"),StringUtils_1=require("module$node_modules$$zxing$library$cjs$core$common$StringUtils"),BitMatrix_1=require("module$node_modules$$zxing$library$cjs$core$common$BitMatrix"),AztecCode_1=require("module$node_modules$$zxing$library$cjs$core$aztec$encoder$AztecCode"),ReedSolomonEncoder_1=require("module$node_modules$$zxing$library$cjs$core$common$reedsolomon$ReedSolomonEncoder"),
GenericGF_1=require("module$node_modules$$zxing$library$cjs$core$common$reedsolomon$GenericGF"),HighLevelEncoder_1=require("module$node_modules$$zxing$library$cjs$core$aztec$encoder$HighLevelEncoder"),Integer_1=require("module$node_modules$$zxing$library$cjs$core$util$Integer");global=function(){function Encoder(){}Encoder.encodeBytes=function(data){return Encoder.encode(data,Encoder.DEFAULT_EC_PERCENT,Encoder.DEFAULT_AZTEC_LAYERS)};Encoder.encode=function(data,minECCPercent,userSpecifiedLayers){var bits=
(new HighLevelEncoder_1.default(data)).encode(),eccBits=Integer_1.default.truncDivision(bits.getSize()*minECCPercent,100)+11,totalSizeBits=bits.getSize()+eccBits;if(userSpecifiedLayers!==Encoder.DEFAULT_AZTEC_LAYERS){minECCPercent=0>userSpecifiedLayers;data=Math.abs(userSpecifiedLayers);if(data>(minECCPercent?Encoder.MAX_NB_BITS_COMPACT:Encoder.MAX_NB_BITS))throw new IllegalArgumentException_1.default(StringUtils_1.default.format("Illegal value %s for layers",userSpecifiedLayers));var totalBitsInLayer=
Encoder.totalBitsInLayer(data,minECCPercent);var wordSize=Encoder.WORD_SIZE[data];var usableBitsInLayers=totalBitsInLayer-totalBitsInLayer%wordSize;var stuffedBits=Encoder.stuffBits(bits,wordSize);if(stuffedBits.getSize()+eccBits>usableBitsInLayers)throw new IllegalArgumentException_1.default("Data to large for user specified layer");if(minECCPercent&&stuffedBits.getSize()>64*wordSize)throw new IllegalArgumentException_1.default("Data to large for user specified layer");}else for(wordSize=0,stuffedBits=
null,userSpecifiedLayers=0;;userSpecifiedLayers++){if(userSpecifiedLayers>Encoder.MAX_NB_BITS)throw new IllegalArgumentException_1.default("Data too large for an Aztec code");data=(minECCPercent=3>=userSpecifiedLayers)?userSpecifiedLayers+1:userSpecifiedLayers;totalBitsInLayer=Encoder.totalBitsInLayer(data,minECCPercent);if(!(totalSizeBits>totalBitsInLayer)){if(null==stuffedBits||wordSize!==Encoder.WORD_SIZE[data])wordSize=Encoder.WORD_SIZE[data],stuffedBits=Encoder.stuffBits(bits,wordSize);usableBitsInLayers=
totalBitsInLayer-totalBitsInLayer%wordSize;if(!(minECCPercent&&stuffedBits.getSize()>64*wordSize)&&stuffedBits.getSize()+eccBits<=usableBitsInLayers)break}}bits=Encoder.generateCheckWords(stuffedBits,totalBitsInLayer,wordSize);eccBits=stuffedBits.getSize()/wordSize;wordSize=Encoder.generateModeMessage(minECCPercent,data,eccBits);stuffedBits=(minECCPercent?11:14)+4*data;totalBitsInLayer=new Int32Array(stuffedBits);if(minECCPercent)for(totalSizeBits=stuffedBits,userSpecifiedLayers=0;userSpecifiedLayers<
totalBitsInLayer.length;userSpecifiedLayers++)totalBitsInLayer[userSpecifiedLayers]=userSpecifiedLayers;else{totalSizeBits=stuffedBits+1+2*Integer_1.default.truncDivision(Integer_1.default.truncDivision(stuffedBits,2)-1,15);usableBitsInLayers=Integer_1.default.truncDivision(stuffedBits,2);var center=Integer_1.default.truncDivision(totalSizeBits,2);for(userSpecifiedLayers=0;userSpecifiedLayers<usableBitsInLayers;userSpecifiedLayers++){var newOffset=userSpecifiedLayers+Integer_1.default.truncDivision(userSpecifiedLayers,
15);totalBitsInLayer[usableBitsInLayers-userSpecifiedLayers-1]=center-newOffset-1;totalBitsInLayer[usableBitsInLayers+userSpecifiedLayers]=center+newOffset+1}}usableBitsInLayers=new BitMatrix_1.default(totalSizeBits);for(center=userSpecifiedLayers=0;userSpecifiedLayers<data;userSpecifiedLayers++){newOffset=4*(data-userSpecifiedLayers)+(minECCPercent?9:12);for(var j=0;j<newOffset;j++)for(var columnOffset=2*j,k=0;2>k;k++)bits.get(center+columnOffset+k)&&usableBitsInLayers.set(totalBitsInLayer[2*userSpecifiedLayers+
k],totalBitsInLayer[2*userSpecifiedLayers+j]),bits.get(center+2*newOffset+columnOffset+k)&&usableBitsInLayers.set(totalBitsInLayer[2*userSpecifiedLayers+j],totalBitsInLayer[stuffedBits-1-2*userSpecifiedLayers-k]),bits.get(center+4*newOffset+columnOffset+k)&&usableBitsInLayers.set(totalBitsInLayer[stuffedBits-1-2*userSpecifiedLayers-k],totalBitsInLayer[stuffedBits-1-2*userSpecifiedLayers-j]),bits.get(center+6*newOffset+columnOffset+k)&&usableBitsInLayers.set(totalBitsInLayer[stuffedBits-1-2*userSpecifiedLayers-
j],totalBitsInLayer[2*userSpecifiedLayers+k]);center+=8*newOffset}Encoder.drawModeMessage(usableBitsInLayers,minECCPercent,totalSizeBits,wordSize);if(minECCPercent)Encoder.drawBullsEye(usableBitsInLayers,Integer_1.default.truncDivision(totalSizeBits,2),5);else for(Encoder.drawBullsEye(usableBitsInLayers,Integer_1.default.truncDivision(totalSizeBits,2),7),j=userSpecifiedLayers=0;userSpecifiedLayers<Integer_1.default.truncDivision(stuffedBits,2)-1;userSpecifiedLayers+=15,j+=16)for(k=Integer_1.default.truncDivision(totalSizeBits,
2)&1;k<totalSizeBits;k+=2)usableBitsInLayers.set(Integer_1.default.truncDivision(totalSizeBits,2)-j,k),usableBitsInLayers.set(Integer_1.default.truncDivision(totalSizeBits,2)+j,k),usableBitsInLayers.set(k,Integer_1.default.truncDivision(totalSizeBits,2)-j),usableBitsInLayers.set(k,Integer_1.default.truncDivision(totalSizeBits,2)+j);userSpecifiedLayers=new AztecCode_1.default;userSpecifiedLayers.setCompact(minECCPercent);userSpecifiedLayers.setSize(totalSizeBits);userSpecifiedLayers.setLayers(data);
userSpecifiedLayers.setCodeWords(eccBits);userSpecifiedLayers.setMatrix(usableBitsInLayers);return userSpecifiedLayers};Encoder.drawBullsEye=function(matrix,center,size){for(var i=0;i<size;i+=2)for(var j=center-i;j<=center+i;j++)matrix.set(j,center-i),matrix.set(j,center+i),matrix.set(center-i,j),matrix.set(center+i,j);matrix.set(center-size,center-size);matrix.set(center-size+1,center-size);matrix.set(center-size,center-size+1);matrix.set(center+size,center-size);matrix.set(center+size,center-size+
1);matrix.set(center+size,center+size-1)};Encoder.generateModeMessage=function(compact,layers,messageSizeInWords){var modeMessage=new BitArray_1.default;compact?(modeMessage.appendBits(layers-1,2),modeMessage.appendBits(messageSizeInWords-1,6),modeMessage=Encoder.generateCheckWords(modeMessage,28,4)):(modeMessage.appendBits(layers-1,5),modeMessage.appendBits(messageSizeInWords-1,11),modeMessage=Encoder.generateCheckWords(modeMessage,40,4));return modeMessage};Encoder.drawModeMessage=function(matrix,
compact,matrixSize,modeMessage){matrixSize=Integer_1.default.truncDivision(matrixSize,2);if(compact)for(compact=0;7>compact;compact++){var offset=matrixSize-3+compact;modeMessage.get(compact)&&matrix.set(offset,matrixSize-5);modeMessage.get(compact+7)&&matrix.set(matrixSize+5,offset);modeMessage.get(20-compact)&&matrix.set(offset,matrixSize+5);modeMessage.get(27-compact)&&matrix.set(matrixSize-5,offset)}else for(compact=0;10>compact;compact++)offset=matrixSize-5+compact+Integer_1.default.truncDivision(compact,
5),modeMessage.get(compact)&&matrix.set(offset,matrixSize-7),modeMessage.get(compact+10)&&matrix.set(matrixSize+7,offset),modeMessage.get(29-compact)&&matrix.set(offset,matrixSize+7),modeMessage.get(39-compact)&&matrix.set(matrixSize-7,offset)};Encoder.generateCheckWords=function(bitArray,totalBits,wordSize){var _a,messageSizeInWords=bitArray.getSize()/wordSize,rs=new ReedSolomonEncoder_1.default(Encoder.getGF(wordSize)),totalWords=Integer_1.default.truncDivision(totalBits,wordSize);bitArray=Encoder.bitsToWords(bitArray,
wordSize,totalWords);rs.encode(bitArray,totalWords-messageSizeInWords);totalBits%=wordSize;messageSizeInWords=new BitArray_1.default;messageSizeInWords.appendBits(0,totalBits);try{for(var _b=__values(Array.from(bitArray)),_c=_b.next();!_c.done;_c=_b.next())messageSizeInWords.appendBits(_c.value,wordSize)}catch(e_1_1){var e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&_a.call(_b)}finally{if(e_1)throw e_1.error;}}return messageSizeInWords};Encoder.bitsToWords=function(stuffedBits,wordSize,
totalWords){totalWords=new Int32Array(totalWords);var n;var i=0;for(n=stuffedBits.getSize()/wordSize;i<n;i++){for(var value=0,j=0;j<wordSize;j++)value|=stuffedBits.get(i*wordSize+j)?1<<wordSize-j-1:0;totalWords[i]=value}return totalWords};Encoder.getGF=function(wordSize){switch(wordSize){case 4:return GenericGF_1.default.AZTEC_PARAM;case 6:return GenericGF_1.default.AZTEC_DATA_6;case 8:return GenericGF_1.default.AZTEC_DATA_8;case 10:return GenericGF_1.default.AZTEC_DATA_10;case 12:return GenericGF_1.default.AZTEC_DATA_12;
default:throw new IllegalArgumentException_1.default("Unsupported word size "+wordSize);}};Encoder.stuffBits=function(bits,wordSize){for(var out=new BitArray_1.default,n=bits.getSize(),mask=(1<<wordSize)-2,i=0;i<n;i+=wordSize){for(var word=0,j=0;j<wordSize;j++)if(i+j>=n||bits.get(i+j))word|=1<<wordSize-1-j;(word&mask)===mask?(out.appendBits(word&mask,wordSize),i--):0===(word&mask)?(out.appendBits(word|1,wordSize),i--):out.appendBits(word,wordSize)}return out};Encoder.totalBitsInLayer=function(layers,
compact){return((compact?88:112)+16*layers)*layers};Encoder.DEFAULT_EC_PERCENT=33;Encoder.DEFAULT_AZTEC_LAYERS=0;Encoder.MAX_NB_BITS=32;Encoder.MAX_NB_BITS_COMPACT=4;Encoder.WORD_SIZE=Int32Array.from([4,6,6,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12]);return Encoder}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$aztec$encoder$Encoder.js.map
