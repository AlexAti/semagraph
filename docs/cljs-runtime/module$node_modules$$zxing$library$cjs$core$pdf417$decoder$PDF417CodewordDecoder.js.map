{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$PDF417CodewordDecoder.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/pdf417/decoder/PDF417CodewordDecoder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$PDF417CodewordDecoder\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n* Copyright 2013 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder;\n// import com.google.zxing.common.detector.MathUtils;\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n// import com.google.zxing.pdf417.PDF417Common;\nvar PDF417Common_1 = require(\"../PDF417Common\");\nvar Float_1 = require(\"../../util/Float\");\n/**\n * @author Guenther Grau\n * @author creatale GmbH (christoph.schulz@creatale.de)\n */\nvar PDF417CodewordDecoder = /** @class */ (function () {\n    function PDF417CodewordDecoder() {\n    }\n    /* @note\n     * this action have to be performed before first use of class\n     * - static constructor\n     * working with 32bit float (based from Java logic)\n    */\n    PDF417CodewordDecoder.initialize = function () {\n        // Pre-computes the symbol ratio table.\n        for ( /*int*/var i = 0; i < PDF417Common_1.default.SYMBOL_TABLE.length; i++) {\n            var currentSymbol = PDF417Common_1.default.SYMBOL_TABLE[i];\n            var currentBit = currentSymbol & 0x1;\n            for ( /*int*/var j = 0; j < PDF417Common_1.default.BARS_IN_MODULE; j++) {\n                var size = 0.0;\n                while ((currentSymbol & 0x1) === currentBit) {\n                    size += 1.0;\n                    currentSymbol >>= 1;\n                }\n                currentBit = currentSymbol & 0x1;\n                if (!PDF417CodewordDecoder.RATIOS_TABLE[i]) {\n                    PDF417CodewordDecoder.RATIOS_TABLE[i] = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n                }\n                PDF417CodewordDecoder.RATIOS_TABLE[i][PDF417Common_1.default.BARS_IN_MODULE - j - 1] = Math.fround(size / PDF417Common_1.default.MODULES_IN_CODEWORD);\n            }\n        }\n        this.bSymbolTableReady = true;\n    };\n    PDF417CodewordDecoder.getDecodedValue = function (moduleBitCount) {\n        var decodedValue = PDF417CodewordDecoder.getDecodedCodewordValue(PDF417CodewordDecoder.sampleBitCounts(moduleBitCount));\n        if (decodedValue !== -1) {\n            return decodedValue;\n        }\n        return PDF417CodewordDecoder.getClosestDecodedValue(moduleBitCount);\n    };\n    PDF417CodewordDecoder.sampleBitCounts = function (moduleBitCount) {\n        var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n        var result = new Int32Array(PDF417Common_1.default.BARS_IN_MODULE);\n        var bitCountIndex = 0;\n        var sumPreviousBits = 0;\n        for ( /*int*/var i = 0; i < PDF417Common_1.default.MODULES_IN_CODEWORD; i++) {\n            var sampleIndex = bitCountSum / (2 * PDF417Common_1.default.MODULES_IN_CODEWORD) +\n                (i * bitCountSum) / PDF417Common_1.default.MODULES_IN_CODEWORD;\n            if (sumPreviousBits + moduleBitCount[bitCountIndex] <= sampleIndex) {\n                sumPreviousBits += moduleBitCount[bitCountIndex];\n                bitCountIndex++;\n            }\n            result[bitCountIndex]++;\n        }\n        return result;\n    };\n    PDF417CodewordDecoder.getDecodedCodewordValue = function (moduleBitCount) {\n        var decodedValue = PDF417CodewordDecoder.getBitValue(moduleBitCount);\n        return PDF417Common_1.default.getCodeword(decodedValue) === -1 ? -1 : decodedValue;\n    };\n    PDF417CodewordDecoder.getBitValue = function (moduleBitCount) {\n        var result = /*long*/ 0;\n        for (var /*int*/ i = 0; i < moduleBitCount.length; i++) {\n            for ( /*int*/var bit = 0; bit < moduleBitCount[i]; bit++) {\n                result = (result << 1) | (i % 2 === 0 ? 1 : 0);\n            }\n        }\n        return Math.trunc(result);\n    };\n    // working with 32bit float (as in Java)\n    PDF417CodewordDecoder.getClosestDecodedValue = function (moduleBitCount) {\n        var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n        var bitCountRatios = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n        if (bitCountSum > 1) {\n            for (var /*int*/ i = 0; i < bitCountRatios.length; i++) {\n                bitCountRatios[i] = Math.fround(moduleBitCount[i] / bitCountSum);\n            }\n        }\n        var bestMatchError = Float_1.default.MAX_VALUE;\n        var bestMatch = -1;\n        if (!this.bSymbolTableReady) {\n            PDF417CodewordDecoder.initialize();\n        }\n        for ( /*int*/var j = 0; j < PDF417CodewordDecoder.RATIOS_TABLE.length; j++) {\n            var error = 0.0;\n            var ratioTableRow = PDF417CodewordDecoder.RATIOS_TABLE[j];\n            for ( /*int*/var k = 0; k < PDF417Common_1.default.BARS_IN_MODULE; k++) {\n                var diff = Math.fround(ratioTableRow[k] - bitCountRatios[k]);\n                error += Math.fround(diff * diff);\n                if (error >= bestMatchError) {\n                    break;\n                }\n            }\n            if (error < bestMatchError) {\n                bestMatchError = error;\n                bestMatch = PDF417Common_1.default.SYMBOL_TABLE[j];\n            }\n        }\n        return bestMatch;\n    };\n    // flag that the table is ready for use\n    PDF417CodewordDecoder.bSymbolTableReady = false;\n    PDF417CodewordDecoder.RATIOS_TABLE = new Array(PDF417Common_1.default.SYMBOL_TABLE.length).map(function (x) { return x = new Array(PDF417Common_1.default.BARS_IN_MODULE); });\n    return PDF417CodewordDecoder;\n}());\nexports.default = PDF417CodewordDecoder;\n//# sourceMappingURL=PDF417CodewordDecoder.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","MathUtils_1","PDF417Common_1","Float_1","PDF417CodewordDecoder","initialize","PDF417CodewordDecoder.initialize","i","default","SYMBOL_TABLE","length","currentSymbol","currentBit","j","BARS_IN_MODULE","size","RATIOS_TABLE","Array","Math","fround","MODULES_IN_CODEWORD","bSymbolTableReady","getDecodedValue","PDF417CodewordDecoder.getDecodedValue","moduleBitCount","decodedValue","getDecodedCodewordValue","sampleBitCounts","getClosestDecodedValue","PDF417CodewordDecoder.sampleBitCounts","bitCountSum","sum","result","Int32Array","bitCountIndex","sumPreviousBits","PDF417CodewordDecoder.getDecodedCodewordValue","getBitValue","getCodeword","PDF417CodewordDecoder.getBitValue","bit","trunc","PDF417CodewordDecoder.getClosestDecodedValue","bitCountRatios","bestMatchError","MAX_VALUE","bestMatch","error","ratioTableRow","k","diff","map","x"]
}
