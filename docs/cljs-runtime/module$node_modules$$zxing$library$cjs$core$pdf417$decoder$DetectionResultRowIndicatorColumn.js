shadow$provide.module$node_modules$$zxing$library$cjs$core$pdf417$decoder$DetectionResultRowIndicatorColumn=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=
d}extendStatics(d,b);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),__values=this&&this.__values||function(o){var s="function"===typeof Symbol&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&"number"===typeof o.length)return{next:function(){o&&i>=o.length&&(o=void 0);return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");};Object.defineProperty(exports,"__esModule",{value:!0});var PDF417Common_1=
require("module$node_modules$$zxing$library$cjs$core$pdf417$PDF417Common"),BarcodeMetadata_1=require("module$node_modules$$zxing$library$cjs$core$pdf417$decoder$BarcodeMetadata");global=require("module$node_modules$$zxing$library$cjs$core$pdf417$decoder$DetectionResultColumn");var BarcodeValue_1=require("module$node_modules$$zxing$library$cjs$core$pdf417$decoder$BarcodeValue");require=function(_super){function DetectionResultRowIndicatorColumn(boundingBox,isLeft){boundingBox=_super.call(this,boundingBox)||
this;boundingBox._isLeft=isLeft;return boundingBox}__extends(DetectionResultRowIndicatorColumn,_super);DetectionResultRowIndicatorColumn.prototype.setRowNumbers=function(){var _a;try{for(var _b=__values(this.getCodewords()),_c=_b.next();!_c.done;_c=_b.next()){var codeword=_c.value;null!=codeword&&codeword.setRowNumberAsRowIndicatorColumn()}}catch(e_1_1){var e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&_a.call(_b)}finally{if(e_1)throw e_1.error;}}};DetectionResultRowIndicatorColumn.prototype.adjustCompleteIndicatorColumnRowNumbers=
function(barcodeMetadata){var codewords=this.getCodewords();this.setRowNumbers();this.removeIncorrectCodewords(codewords,barcodeMetadata);var boundingBox=this.getBoundingBox(),top=this._isLeft?boundingBox.getTopLeft():boundingBox.getTopRight();boundingBox=this._isLeft?boundingBox.getBottomLeft():boundingBox.getBottomRight();var firstRow=this.imageRowToCodewordIndex(Math.trunc(top.getY()));top=this.imageRowToCodewordIndex(Math.trunc(boundingBox.getY()));boundingBox=-1;for(var maxRowHeight=1,currentRowHeight=
0;firstRow<top;firstRow++)if(null!=codewords[firstRow]){var codeword=codewords[firstRow],rowDifference=codeword.getRowNumber()-boundingBox;if(0===rowDifference)currentRowHeight++;else if(1===rowDifference)maxRowHeight=Math.max(maxRowHeight,currentRowHeight),currentRowHeight=1,boundingBox=codeword.getRowNumber();else if(0>rowDifference||codeword.getRowNumber()>=barcodeMetadata.getRowCount()||rowDifference>firstRow)codewords[firstRow]=null;else{rowDifference=2<maxRowHeight?(maxRowHeight-2)*rowDifference:
rowDifference;for(var closePreviousCodewordFound=rowDifference>=firstRow,i=1;i<=rowDifference&&!closePreviousCodewordFound;i++)closePreviousCodewordFound=null!=codewords[firstRow-i];closePreviousCodewordFound?codewords[firstRow]=null:(boundingBox=codeword.getRowNumber(),currentRowHeight=1)}}};DetectionResultRowIndicatorColumn.prototype.getRowHeights=function(){var _a,barcodeMetadata=this.getBarcodeMetadata();if(null==barcodeMetadata)return null;this.adjustIncompleteIndicatorColumnRowNumbers(barcodeMetadata);
barcodeMetadata=new Int32Array(barcodeMetadata.getRowCount());try{for(var _b=__values(this.getCodewords()),_c=_b.next();!_c.done;_c=_b.next()){var codeword=_c.value;if(null!=codeword){var rowNumber=codeword.getRowNumber();rowNumber>=barcodeMetadata.length||barcodeMetadata[rowNumber]++}}}catch(e_2_1){var e_2={error:e_2_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&_a.call(_b)}finally{if(e_2)throw e_2.error;}}return barcodeMetadata};DetectionResultRowIndicatorColumn.prototype.adjustIncompleteIndicatorColumnRowNumbers=
function(barcodeMetadata){var boundingBox=this.getBoundingBox(),top=this._isLeft?boundingBox.getTopLeft():boundingBox.getTopRight();boundingBox=this._isLeft?boundingBox.getBottomLeft():boundingBox.getBottomRight();var firstRow=this.imageRowToCodewordIndex(Math.trunc(top.getY()));top=this.imageRowToCodewordIndex(Math.trunc(boundingBox.getY()));boundingBox=this.getCodewords();for(var barcodeRow=-1,currentRowHeight=0;firstRow<top;firstRow++)if(null!=boundingBox[firstRow]){var codeword=boundingBox[firstRow];
codeword.setRowNumberAsRowIndicatorColumn();var rowDifference=codeword.getRowNumber()-barcodeRow;0===rowDifference?currentRowHeight++:1===rowDifference?(currentRowHeight=1,barcodeRow=codeword.getRowNumber()):codeword.getRowNumber()>=barcodeMetadata.getRowCount()?boundingBox[firstRow]=null:(barcodeRow=codeword.getRowNumber(),currentRowHeight=1)}};DetectionResultRowIndicatorColumn.prototype.getBarcodeMetadata=function(){var _a,codewords=this.getCodewords(),barcodeColumnCount=new BarcodeValue_1.default,
barcodeRowCountUpperPart=new BarcodeValue_1.default,barcodeRowCountLowerPart=new BarcodeValue_1.default,barcodeECLevel=new BarcodeValue_1.default;try{for(var codewords_1=__values(codewords),codewords_1_1=codewords_1.next();!codewords_1_1.done;codewords_1_1=codewords_1.next()){var codeword=codewords_1_1.value;if(null!=codeword){codeword.setRowNumberAsRowIndicatorColumn();var rowIndicatorValue=codeword.getValue()%30,codewordRowNumber=codeword.getRowNumber();this._isLeft||(codewordRowNumber+=2);switch(codewordRowNumber%
3){case 0:barcodeRowCountUpperPart.setValue(3*rowIndicatorValue+1);break;case 1:barcodeECLevel.setValue(rowIndicatorValue/3);barcodeRowCountLowerPart.setValue(rowIndicatorValue%3);break;case 2:barcodeColumnCount.setValue(rowIndicatorValue+1)}}}}catch(e_3_1){var e_3={error:e_3_1}}finally{try{codewords_1_1&&!codewords_1_1.done&&(_a=codewords_1.return)&&_a.call(codewords_1)}finally{if(e_3)throw e_3.error;}}if(0===barcodeColumnCount.getValue().length||0===barcodeRowCountUpperPart.getValue().length||0===
barcodeRowCountLowerPart.getValue().length||0===barcodeECLevel.getValue().length||1>barcodeColumnCount.getValue()[0]||barcodeRowCountUpperPart.getValue()[0]+barcodeRowCountLowerPart.getValue()[0]<PDF417Common_1.default.MIN_ROWS_IN_BARCODE||barcodeRowCountUpperPart.getValue()[0]+barcodeRowCountLowerPart.getValue()[0]>PDF417Common_1.default.MAX_ROWS_IN_BARCODE)return null;e_3=new BarcodeMetadata_1.default(barcodeColumnCount.getValue()[0],barcodeRowCountUpperPart.getValue()[0],barcodeRowCountLowerPart.getValue()[0],
barcodeECLevel.getValue()[0]);this.removeIncorrectCodewords(codewords,e_3);return e_3};DetectionResultRowIndicatorColumn.prototype.removeIncorrectCodewords=function(codewords,barcodeMetadata){for(var codewordRow=0;codewordRow<codewords.length;codewordRow++){var codeword=codewords[codewordRow];if(null!=codewords[codewordRow]){var rowIndicatorValue=codeword.getValue()%30;codeword=codeword.getRowNumber();if(codeword>barcodeMetadata.getRowCount())codewords[codewordRow]=null;else switch(this._isLeft||
(codeword+=2),codeword%3){case 0:3*rowIndicatorValue+1!==barcodeMetadata.getRowCountUpperPart()&&(codewords[codewordRow]=null);break;case 1:if(Math.trunc(rowIndicatorValue/3)!==barcodeMetadata.getErrorCorrectionLevel()||rowIndicatorValue%3!==barcodeMetadata.getRowCountLowerPart())codewords[codewordRow]=null;break;case 2:rowIndicatorValue+1!==barcodeMetadata.getColumnCount()&&(codewords[codewordRow]=null)}}}};DetectionResultRowIndicatorColumn.prototype.isLeft=function(){return this._isLeft};DetectionResultRowIndicatorColumn.prototype.toString=
function(){return"IsLeft: "+this._isLeft+"\n"+_super.prototype.toString.call(this)};return DetectionResultRowIndicatorColumn}(global.default);exports.default=require}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$pdf417$decoder$DetectionResultRowIndicatorColumn.js.map
