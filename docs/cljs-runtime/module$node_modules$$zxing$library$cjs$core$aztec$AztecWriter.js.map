{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$aztec$AztecWriter.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/aztec/AztecWriter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$aztec$AztecWriter\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n* Copyright 2013 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.aztec;\n// import com.google.zxing.BarcodeFormat;\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n// import com.google.zxing.EncodeHintType;\nvar EncodeHintType_1 = require(\"../EncodeHintType\");\n// import com.google.zxing.aztec.encoder.Encoder;\nvar Encoder_1 = require(\"./encoder/Encoder\");\n// import com.google.zxing.common.BitMatrix;\nvar BitMatrix_1 = require(\"../common/BitMatrix\");\n// import java.nio.charset.Charset;\nvar Charset_1 = require(\"../util/Charset\");\n// import java.nio.charset.StandardCharsets;\nvar StandardCharsets_1 = require(\"../util/StandardCharsets\");\n// import java.util.Map;\nvar Integer_1 = require(\"../util/Integer\");\nvar IllegalStateException_1 = require(\"../IllegalStateException\");\nvar IllegalArgumentException_1 = require(\"../IllegalArgumentException\");\nvar StringUtils_1 = require(\"../common/StringUtils\");\n/**\n * Renders an Aztec code as a {@link BitMatrix}.\n */\nvar AztecWriter = /** @class */ (function () {\n    function AztecWriter() {\n    }\n    // @Override\n    AztecWriter.prototype.encode = function (contents, format, width, height) {\n        return this.encodeWithHints(contents, format, width, height, null);\n    };\n    // @Override\n    AztecWriter.prototype.encodeWithHints = function (contents, format, width, height, hints) {\n        var charset = StandardCharsets_1.default.ISO_8859_1;\n        var eccPercent = Encoder_1.default.DEFAULT_EC_PERCENT;\n        var layers = Encoder_1.default.DEFAULT_AZTEC_LAYERS;\n        if (hints != null) {\n            if (hints.has(EncodeHintType_1.default.CHARACTER_SET)) {\n                charset = Charset_1.default.forName(hints.get(EncodeHintType_1.default.CHARACTER_SET).toString());\n            }\n            if (hints.has(EncodeHintType_1.default.ERROR_CORRECTION)) {\n                eccPercent = Integer_1.default.parseInt(hints.get(EncodeHintType_1.default.ERROR_CORRECTION).toString());\n            }\n            if (hints.has(EncodeHintType_1.default.AZTEC_LAYERS)) {\n                layers = Integer_1.default.parseInt(hints.get(EncodeHintType_1.default.AZTEC_LAYERS).toString());\n            }\n        }\n        return AztecWriter.encodeLayers(contents, format, width, height, charset, eccPercent, layers);\n    };\n    AztecWriter.encodeLayers = function (contents, format, width, height, charset, eccPercent, layers) {\n        if (format !== BarcodeFormat_1.default.AZTEC) {\n            throw new IllegalArgumentException_1.default('Can only encode AZTEC, but got ' + format);\n        }\n        var aztec = Encoder_1.default.encode(StringUtils_1.default.getBytes(contents, charset), eccPercent, layers);\n        return AztecWriter.renderResult(aztec, width, height);\n    };\n    AztecWriter.renderResult = function (code, width, height) {\n        var input = code.getMatrix();\n        if (input == null) {\n            throw new IllegalStateException_1.default();\n        }\n        var inputWidth = input.getWidth();\n        var inputHeight = input.getHeight();\n        var outputWidth = Math.max(width, inputWidth);\n        var outputHeight = Math.max(height, inputHeight);\n        var multiple = Math.min(outputWidth / inputWidth, outputHeight / inputHeight);\n        var leftPadding = (outputWidth - (inputWidth * multiple)) / 2;\n        var topPadding = (outputHeight - (inputHeight * multiple)) / 2;\n        var output = new BitMatrix_1.default(outputWidth, outputHeight);\n        for (var inputY /*int*/ = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n            // Write the contents of this row of the barcode\n            for (var inputX /*int*/ = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                if (input.get(inputX, inputY)) {\n                    output.setRegion(outputX, outputY, multiple, multiple);\n                }\n            }\n        }\n        return output;\n    };\n    return AztecWriter;\n}());\nexports.default = AztecWriter;\n//# sourceMappingURL=AztecWriter.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","BarcodeFormat_1","EncodeHintType_1","Encoder_1","BitMatrix_1","Charset_1","StandardCharsets_1","Integer_1","IllegalStateException_1","IllegalArgumentException_1","StringUtils_1","AztecWriter","prototype","encode","AztecWriter.prototype.encode","contents","format","width","height","encodeWithHints","AztecWriter.prototype.encodeWithHints","hints","charset","default","ISO_8859_1","eccPercent","DEFAULT_EC_PERCENT","layers","DEFAULT_AZTEC_LAYERS","has","CHARACTER_SET","forName","get","toString","ERROR_CORRECTION","parseInt","AZTEC_LAYERS","encodeLayers","AztecWriter.encodeLayers","AZTEC","aztec","getBytes","renderResult","AztecWriter.renderResult","code","input","getMatrix","inputWidth","getWidth","inputHeight","getHeight","outputWidth","Math","max","outputHeight","multiple","min","leftPadding","topPadding","output","inputY","outputY","inputX","outputX","setRegion"]
}
