shadow$provide.module$node_modules$$zxing$library$cjs$core$qrcode$encoder$Encoder=function(global,require,module,exports){var __values=this&&this.__values||function(o){var s="function"===typeof Symbol&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&"number"===typeof o.length)return{next:function(){o&&i>=o.length&&(o=void 0);return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");};Object.defineProperty(exports,"__esModule",{value:!0});
var EncodeHintType_1=require("module$node_modules$$zxing$library$cjs$core$EncodeHintType"),BitArray_1=require("module$node_modules$$zxing$library$cjs$core$common$BitArray"),CharacterSetECI_1=require("module$node_modules$$zxing$library$cjs$core$common$CharacterSetECI"),GenericGF_1=require("module$node_modules$$zxing$library$cjs$core$common$reedsolomon$GenericGF"),ReedSolomonEncoder_1=require("module$node_modules$$zxing$library$cjs$core$common$reedsolomon$ReedSolomonEncoder"),Mode_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$decoder$Mode"),
Version_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$decoder$Version"),MaskUtil_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$encoder$MaskUtil"),ByteMatrix_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$encoder$ByteMatrix"),QRCode_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$encoder$QRCode"),MatrixUtil_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$encoder$MatrixUtil"),StringEncoding_1=require("module$node_modules$$zxing$library$cjs$core$util$StringEncoding"),
BlockPair_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$encoder$BlockPair"),WriterException_1=require("module$node_modules$$zxing$library$cjs$core$WriterException");global=function(){function Encoder(){}Encoder.calculateMaskPenalty=function(matrix){return MaskUtil_1.default.applyMaskPenaltyRule1(matrix)+MaskUtil_1.default.applyMaskPenaltyRule2(matrix)+MaskUtil_1.default.applyMaskPenaltyRule3(matrix)+MaskUtil_1.default.applyMaskPenaltyRule4(matrix)};Encoder.encode=function(content,
ecLevel,hints){void 0===hints&&(hints=null);var encoding=Encoder.DEFAULT_BYTE_MODE_ENCODING,hasEncodingHint=null!==hints&&void 0!==hints.get(EncodeHintType_1.default.CHARACTER_SET);hasEncodingHint&&(encoding=hints.get(EncodeHintType_1.default.CHARACTER_SET).toString());var mode=this.chooseMode(content,encoding),headerBits=new BitArray_1.default;mode!==Mode_1.default.BYTE||!hasEncodingHint&&Encoder.DEFAULT_BYTE_MODE_ENCODING===encoding||(hasEncodingHint=CharacterSetECI_1.default.getCharacterSetECIByName(encoding),
void 0!==hasEncodingHint&&this.appendECI(hasEncodingHint,headerBits));this.appendModeInfo(mode,headerBits);hasEncodingHint=new BitArray_1.default;this.appendBytes(content,mode,hasEncodingHint,encoding);if(null!==hints&&void 0!==hints.get(EncodeHintType_1.default.QR_VERSION)){if(hints=Number.parseInt(hints.get(EncodeHintType_1.default.QR_VERSION).toString(),10),hints=Version_1.default.getVersionForNumber(hints),encoding=this.calculateBitsNeeded(mode,headerBits,hasEncodingHint,hints),!this.willFit(encoding,
hints,ecLevel))throw new WriterException_1.default("Data too big for requested version");}else hints=this.recommendVersion(ecLevel,mode,headerBits,hasEncodingHint);encoding=new BitArray_1.default;encoding.appendBitArray(headerBits);content=mode===Mode_1.default.BYTE?hasEncodingHint.getSizeInBytes():content.length;this.appendLengthInfo(content,hints,mode,encoding);encoding.appendBitArray(hasEncodingHint);content=hints.getECBlocksForLevel(ecLevel);headerBits=hints.getTotalCodewords()-content.getTotalECCodewords();
this.terminateBits(headerBits,encoding);content=this.interleaveWithECBytes(encoding,hints.getTotalCodewords(),headerBits,content.getNumBlocks());headerBits=new QRCode_1.default;headerBits.setECLevel(ecLevel);headerBits.setMode(mode);headerBits.setVersion(hints);mode=hints.getDimensionForVersion();mode=new ByteMatrix_1.default(mode,mode);hasEncodingHint=this.chooseMaskPattern(content,ecLevel,hints,mode);headerBits.setMaskPattern(hasEncodingHint);MatrixUtil_1.default.buildMatrix(content,ecLevel,hints,
hasEncodingHint,mode);headerBits.setMatrix(mode);return headerBits};Encoder.recommendVersion=function(ecLevel,mode,headerBits,dataBits){var provisionalBitsNeeded=this.calculateBitsNeeded(mode,headerBits,dataBits,Version_1.default.getVersionForNumber(1));provisionalBitsNeeded=this.chooseVersion(provisionalBitsNeeded,ecLevel);mode=this.calculateBitsNeeded(mode,headerBits,dataBits,provisionalBitsNeeded);return this.chooseVersion(mode,ecLevel)};Encoder.calculateBitsNeeded=function(mode,headerBits,dataBits,
version){return headerBits.getSize()+mode.getCharacterCountBits(version)+dataBits.getSize()};Encoder.getAlphanumericCode=function(code){return code<Encoder.ALPHANUMERIC_TABLE.length?Encoder.ALPHANUMERIC_TABLE[code]:-1};Encoder.chooseMode=function(content,encoding){void 0===encoding&&(encoding=null);if(CharacterSetECI_1.default.SJIS.getName()===encoding&&this.isOnlyDoubleByteKanji(content))return Mode_1.default.KANJI;for(var hasAlphanumeric=encoding=!1,i=0,length_1=content.length;i<length_1;++i){var c=
content.charAt(i);if(Encoder.isDigit(c))encoding=!0;else if(-1!==this.getAlphanumericCode(c.charCodeAt(0)))hasAlphanumeric=!0;else return Mode_1.default.BYTE}return hasAlphanumeric?Mode_1.default.ALPHANUMERIC:encoding?Mode_1.default.NUMERIC:Mode_1.default.BYTE};Encoder.isOnlyDoubleByteKanji=function(content){try{var bytes=StringEncoding_1.default.encode(content,CharacterSetECI_1.default.SJIS)}catch(ignored){return!1}content=bytes.length;if(0!==content%2)return!1;for(var i=0;i<content;i+=2){var byte1=
bytes[i]&255;if((129>byte1||159<byte1)&&(224>byte1||235<byte1))return!1}return!0};Encoder.chooseMaskPattern=function(bits,ecLevel,version,matrix){for(var minPenalty=Number.MAX_SAFE_INTEGER,bestMaskPattern=-1,maskPattern=0;maskPattern<QRCode_1.default.NUM_MASK_PATTERNS;maskPattern++){MatrixUtil_1.default.buildMatrix(bits,ecLevel,version,maskPattern,matrix);var penalty=this.calculateMaskPenalty(matrix);penalty<minPenalty&&(minPenalty=penalty,bestMaskPattern=maskPattern)}return bestMaskPattern};Encoder.chooseVersion=
function(numInputBits,ecLevel){for(var versionNum=1;40>=versionNum;versionNum++){var version=Version_1.default.getVersionForNumber(versionNum);if(Encoder.willFit(numInputBits,version,ecLevel))return version}throw new WriterException_1.default("Data too big");};Encoder.willFit=function(numInputBits,version,ecLevel){var numBytes=version.getTotalCodewords();version=version.getECBlocksForLevel(ecLevel).getTotalECCodewords();return numBytes-version>=(numInputBits+7)/8};Encoder.terminateBits=function(numDataBytes,
bits){var capacity=8*numDataBytes;if(bits.getSize()>capacity)throw new WriterException_1.default("data bits cannot fit in the QR Code"+bits.getSize()+" \x3e "+capacity);for(var i=0;4>i&&bits.getSize()<capacity;++i)bits.appendBit(!1);i=bits.getSize()&7;if(0<i)for(;8>i;i++)bits.appendBit(!1);numDataBytes-=bits.getSizeInBytes();for(i=0;i<numDataBytes;++i)bits.appendBits(0===(i&1)?236:17,8);if(bits.getSize()!==capacity)throw new WriterException_1.default("Bits size does not equal capacity");};Encoder.getNumDataBytesAndNumECBytesForBlockID=
function(numTotalBytes,numDataBytes,numRSBlocks,blockID,numDataBytesInBlock,numECBytesInBlock){if(blockID>=numRSBlocks)throw new WriterException_1.default("Block ID too large");var numRsBlocksInGroup2=numTotalBytes%numRSBlocks,numRsBlocksInGroup1=numRSBlocks-numRsBlocksInGroup2,numTotalBytesInGroup1=Math.floor(numTotalBytes/numRSBlocks);numDataBytes=Math.floor(numDataBytes/numRSBlocks);var numDataBytesInGroup2=numDataBytes+1,numEcBytesInGroup1=numTotalBytesInGroup1-numDataBytes;numTotalBytesInGroup1=
numTotalBytesInGroup1+1-numDataBytesInGroup2;if(numEcBytesInGroup1!==numTotalBytesInGroup1)throw new WriterException_1.default("EC bytes mismatch");if(numRSBlocks!==numRsBlocksInGroup1+numRsBlocksInGroup2)throw new WriterException_1.default("RS blocks mismatch");if(numTotalBytes!==(numDataBytes+numEcBytesInGroup1)*numRsBlocksInGroup1+(numDataBytesInGroup2+numTotalBytesInGroup1)*numRsBlocksInGroup2)throw new WriterException_1.default("Total bytes mismatch");blockID<numRsBlocksInGroup1?(numDataBytesInBlock[0]=
numDataBytes,numECBytesInBlock[0]=numEcBytesInGroup1):(numDataBytesInBlock[0]=numDataBytesInGroup2,numECBytesInBlock[0]=numTotalBytesInGroup1)};Encoder.interleaveWithECBytes=function(bits,numTotalBytes,numDataBytes,numRSBlocks){var e_1,_a,e_2,_b;if(bits.getSizeInBytes()!==numDataBytes)throw new WriterException_1.default("Number of bits and data bytes does not match");for(var dataBytesOffset=0,maxNumDataBytes=0,maxNumEcBytes=0,blocks=[],i=0;i<numRSBlocks;++i){var numDataBytesInBlock=new Int32Array(1),
numEcBytesInBlock=new Int32Array(1);Encoder.getNumDataBytesAndNumECBytesForBlockID(numTotalBytes,numDataBytes,numRSBlocks,i,numDataBytesInBlock,numEcBytesInBlock);var size=numDataBytesInBlock[0],dataBytes=new Uint8Array(size);bits.toBytes(8*dataBytesOffset,dataBytes,0,size);numEcBytesInBlock=Encoder.generateECBytes(dataBytes,numEcBytesInBlock[0]);blocks.push(new BlockPair_1.default(dataBytes,numEcBytesInBlock));maxNumDataBytes=Math.max(maxNumDataBytes,size);maxNumEcBytes=Math.max(maxNumEcBytes,numEcBytesInBlock.length);
dataBytesOffset+=numDataBytesInBlock[0]}if(numDataBytes!==dataBytesOffset)throw new WriterException_1.default("Data bytes does not match offset");bits=new BitArray_1.default;for(i=0;i<maxNumDataBytes;++i)try{for(var blocks_1=(e_1=void 0,__values(blocks)),blocks_1_1=blocks_1.next();!blocks_1_1.done;blocks_1_1=blocks_1.next()){var block=blocks_1_1.value;dataBytes=block.getDataBytes();i<dataBytes.length&&bits.appendBits(dataBytes[i],8)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{blocks_1_1&&!blocks_1_1.done&&
(_a=blocks_1.return)&&_a.call(blocks_1)}finally{if(e_1)throw e_1.error;}}for(i=0;i<maxNumEcBytes;++i)try{for(var blocks_2=(e_2=void 0,__values(blocks)),blocks_2_1=blocks_2.next();!blocks_2_1.done;blocks_2_1=blocks_2.next())block=blocks_2_1.value,numEcBytesInBlock=block.getErrorCorrectionBytes(),i<numEcBytesInBlock.length&&bits.appendBits(numEcBytesInBlock[i],8)}catch(e_2_1){e_2={error:e_2_1}}finally{try{blocks_2_1&&!blocks_2_1.done&&(_b=blocks_2.return)&&_b.call(blocks_2)}finally{if(e_2)throw e_2.error;
}}if(numTotalBytes!==bits.getSizeInBytes())throw new WriterException_1.default("Interleaving error: "+numTotalBytes+" and "+bits.getSizeInBytes()+" differ.");return bits};Encoder.generateECBytes=function(dataBytes,numEcBytesInBlock){for(var numDataBytes=dataBytes.length,toEncode=new Int32Array(numDataBytes+numEcBytesInBlock),i=0;i<numDataBytes;i++)toEncode[i]=dataBytes[i]&255;(new ReedSolomonEncoder_1.default(GenericGF_1.default.QR_CODE_FIELD_256)).encode(toEncode,numEcBytesInBlock);dataBytes=new Uint8Array(numEcBytesInBlock);
for(i=0;i<numEcBytesInBlock;i++)dataBytes[i]=toEncode[numDataBytes+i];return dataBytes};Encoder.appendModeInfo=function(mode,bits){bits.appendBits(mode.getBits(),4)};Encoder.appendLengthInfo=function(numLetters,version,mode,bits){version=mode.getCharacterCountBits(version);if(numLetters>=1<<version)throw new WriterException_1.default(numLetters+" is bigger than "+((1<<version)-1));bits.appendBits(numLetters,version)};Encoder.appendBytes=function(content,mode,bits,encoding){switch(mode){case Mode_1.default.NUMERIC:Encoder.appendNumericBytes(content,
bits);break;case Mode_1.default.ALPHANUMERIC:Encoder.appendAlphanumericBytes(content,bits);break;case Mode_1.default.BYTE:Encoder.append8BitBytes(content,bits,encoding);break;case Mode_1.default.KANJI:Encoder.appendKanjiBytes(content,bits);break;default:throw new WriterException_1.default("Invalid mode: "+mode);}};Encoder.getDigit=function(singleCharacter){return singleCharacter.charCodeAt(0)-48};Encoder.isDigit=function(singleCharacter){singleCharacter=Encoder.getDigit(singleCharacter);return 0<=
singleCharacter&&9>=singleCharacter};Encoder.appendNumericBytes=function(content,bits){for(var length=content.length,i=0;i<length;){var num1=Encoder.getDigit(content.charAt(i));if(i+2<length){var num2=Encoder.getDigit(content.charAt(i+1)),num3=Encoder.getDigit(content.charAt(i+2));bits.appendBits(100*num1+10*num2+num3,10);i+=3}else i+1<length?(num2=Encoder.getDigit(content.charAt(i+1)),bits.appendBits(10*num1+num2,7),i+=2):(bits.appendBits(num1,4),i++)}};Encoder.appendAlphanumericBytes=function(content,
bits){for(var length=content.length,i=0;i<length;){var code1=Encoder.getAlphanumericCode(content.charCodeAt(i));if(-1===code1)throw new WriterException_1.default;if(i+1<length){var code2=Encoder.getAlphanumericCode(content.charCodeAt(i+1));if(-1===code2)throw new WriterException_1.default;bits.appendBits(45*code1+code2,11);i+=2}else bits.appendBits(code1,6),i++}};Encoder.append8BitBytes=function(content,bits,encoding){try{var bytes=StringEncoding_1.default.encode(content,encoding)}catch(uee){throw new WriterException_1.default(uee);
}content=0;for(encoding=bytes.length;content!==encoding;content++)bits.appendBits(bytes[content],8)};Encoder.appendKanjiBytes=function(content,bits){try{var bytes=StringEncoding_1.default.encode(content,CharacterSetECI_1.default.SJIS)}catch(uee){throw new WriterException_1.default(uee);}content=bytes.length;for(var i=0;i<content;i+=2){var code=(bytes[i]&255)<<8&4294967295|bytes[i+1]&255,subtracted=-1;33088<=code&&40956>=code?subtracted=code-33088:57408<=code&&60351>=code&&(subtracted=code-49472);
if(-1===subtracted)throw new WriterException_1.default("Invalid byte sequence");bits.appendBits(192*(subtracted>>8)+(subtracted&255),13)}};Encoder.appendECI=function(eci,bits){bits.appendBits(Mode_1.default.ECI.getBits(),4);bits.appendBits(eci.getValue(),8)};Encoder.ALPHANUMERIC_TABLE=Int32Array.from([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,36,-1,-1,-1,37,38,-1,-1,-1,-1,39,40,-1,41,42,43,0,1,2,3,4,5,6,7,8,9,44,-1,-1,-1,-1,-1,-1,10,11,12,13,14,
15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,-1,-1,-1,-1,-1]);Encoder.DEFAULT_BYTE_MODE_ENCODING=CharacterSetECI_1.default.UTF8.getName();return Encoder}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$qrcode$encoder$Encoder.js.map
