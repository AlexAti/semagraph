{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$qrcode$detector$AlignmentPattern.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/qrcode/detector/AlignmentPattern.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$qrcode$detector$AlignmentPattern\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*namespace com.google.zxing.qrcode.detector {*/\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n/**\n * <p>Encapsulates an alignment pattern, which are the smaller square patterns found in\n * all but the simplest QR Codes.</p>\n *\n * @author Sean Owen\n */\nvar AlignmentPattern = /** @class */ (function (_super) {\n    __extends(AlignmentPattern, _super);\n    function AlignmentPattern(posX /*float*/, posY /*float*/, estimatedModuleSize /*float*/) {\n        var _this = _super.call(this, posX, posY) || this;\n        _this.estimatedModuleSize = estimatedModuleSize;\n        return _this;\n    }\n    /**\n     * <p>Determines if this alignment pattern \"about equals\" an alignment pattern at the stated\n     * position and size -- meaning, it is at nearly the same center with nearly the same size.</p>\n     */\n    AlignmentPattern.prototype.aboutEquals = function (moduleSize /*float*/, i /*float*/, j /*float*/) {\n        if (Math.abs(i - this.getY()) <= moduleSize && Math.abs(j - this.getX()) <= moduleSize) {\n            var moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n            return moduleSizeDiff <= 1.0 || moduleSizeDiff <= this.estimatedModuleSize;\n        }\n        return false;\n    };\n    /**\n     * Combines this object's current estimate of a finder pattern position and module size\n     * with a new estimate. It returns a new {@code FinderPattern} containing an average of the two.\n     */\n    AlignmentPattern.prototype.combineEstimate = function (i /*float*/, j /*float*/, newModuleSize /*float*/) {\n        var combinedX = (this.getX() + j) / 2.0;\n        var combinedY = (this.getY() + i) / 2.0;\n        var combinedModuleSize = (this.estimatedModuleSize + newModuleSize) / 2.0;\n        return new AlignmentPattern(combinedX, combinedY, combinedModuleSize);\n    };\n    return AlignmentPattern;\n}(ResultPoint_1.default));\nexports.default = AlignmentPattern;\n//# sourceMappingURL=AlignmentPattern.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","AlignmentPattern","_super","posX","posY","estimatedModuleSize","_this","call","aboutEquals","AlignmentPattern.prototype.aboutEquals","moduleSize","i","j","Math","abs","getY","getX","moduleSizeDiff","combineEstimate","AlignmentPattern.prototype.combineEstimate","newModuleSize","combinedX","combinedY","ResultPoint_1","default"]
}
