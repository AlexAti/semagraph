{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$datamatrix$detector$Detector.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/datamatrix/detector/Detector.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$datamatrix$detector$Detector\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WhiteRectangleDetector_1 = require(\"../../common/detector/WhiteRectangleDetector\");\nvar DetectorResult_1 = require(\"../../common/DetectorResult\");\nvar GridSamplerInstance_1 = require(\"../../common/GridSamplerInstance\");\nvar NotFoundException_1 = require(\"../../NotFoundException\");\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * <p>Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code\n * is rotated or skewed, or partially obscured.</p>\n *\n * @author Sean Owen\n */\nvar Detector = /** @class */ (function () {\n    function Detector(image) {\n        this.image = image;\n        this.rectangleDetector = new WhiteRectangleDetector_1.default(this.image);\n    }\n    /**\n     * <p>Detects a Data Matrix Code in an image.</p>\n     *\n     * @return {@link DetectorResult} encapsulating results of detecting a Data Matrix Code\n     * @throws NotFoundException if no Data Matrix Code can be found\n     */\n    Detector.prototype.detect = function () {\n        var cornerPoints = this.rectangleDetector.detect();\n        var points = this.detectSolid1(cornerPoints);\n        points = this.detectSolid2(points);\n        points[3] = this.correctTopRight(points);\n        if (!points[3]) {\n            throw new NotFoundException_1.default();\n        }\n        points = this.shiftToModuleCenter(points);\n        var topLeft = points[0];\n        var bottomLeft = points[1];\n        var bottomRight = points[2];\n        var topRight = points[3];\n        var dimensionTop = this.transitionsBetween(topLeft, topRight) + 1;\n        var dimensionRight = this.transitionsBetween(bottomRight, topRight) + 1;\n        if ((dimensionTop & 0x01) === 1) {\n            dimensionTop += 1;\n        }\n        if ((dimensionRight & 0x01) === 1) {\n            dimensionRight += 1;\n        }\n        if (4 * dimensionTop < 7 * dimensionRight && 4 * dimensionRight < 7 * dimensionTop) {\n            // The matrix is square\n            dimensionTop = dimensionRight = Math.max(dimensionTop, dimensionRight);\n        }\n        var bits = Detector.sampleGrid(this.image, topLeft, bottomLeft, bottomRight, topRight, dimensionTop, dimensionRight);\n        return new DetectorResult_1.default(bits, [topLeft, bottomLeft, bottomRight, topRight]);\n    };\n    Detector.shiftPoint = function (point, to, div) {\n        var x = (to.getX() - point.getX()) / (div + 1);\n        var y = (to.getY() - point.getY()) / (div + 1);\n        return new ResultPoint_1.default(point.getX() + x, point.getY() + y);\n    };\n    Detector.moveAway = function (point, fromX, fromY) {\n        var x = point.getX();\n        var y = point.getY();\n        if (x < fromX) {\n            x -= 1;\n        }\n        else {\n            x += 1;\n        }\n        if (y < fromY) {\n            y -= 1;\n        }\n        else {\n            y += 1;\n        }\n        return new ResultPoint_1.default(x, y);\n    };\n    /**\n     * Detect a solid side which has minimum transition.\n     */\n    Detector.prototype.detectSolid1 = function (cornerPoints) {\n        // 0  2\n        // 1  3\n        var pointA = cornerPoints[0];\n        var pointB = cornerPoints[1];\n        var pointC = cornerPoints[3];\n        var pointD = cornerPoints[2];\n        var trAB = this.transitionsBetween(pointA, pointB);\n        var trBC = this.transitionsBetween(pointB, pointC);\n        var trCD = this.transitionsBetween(pointC, pointD);\n        var trDA = this.transitionsBetween(pointD, pointA);\n        // 0..3\n        // :  :\n        // 1--2\n        var min = trAB;\n        var points = [pointD, pointA, pointB, pointC];\n        if (min > trBC) {\n            min = trBC;\n            points[0] = pointA;\n            points[1] = pointB;\n            points[2] = pointC;\n            points[3] = pointD;\n        }\n        if (min > trCD) {\n            min = trCD;\n            points[0] = pointB;\n            points[1] = pointC;\n            points[2] = pointD;\n            points[3] = pointA;\n        }\n        if (min > trDA) {\n            points[0] = pointC;\n            points[1] = pointD;\n            points[2] = pointA;\n            points[3] = pointB;\n        }\n        return points;\n    };\n    /**\n     * Detect a second solid side next to first solid side.\n     */\n    Detector.prototype.detectSolid2 = function (points) {\n        // A..D\n        // :  :\n        // B--C\n        var pointA = points[0];\n        var pointB = points[1];\n        var pointC = points[2];\n        var pointD = points[3];\n        // Transition detection on the edge is not stable.\n        // To safely detect, shift the points to the module center.\n        var tr = this.transitionsBetween(pointA, pointD);\n        var pointBs = Detector.shiftPoint(pointB, pointC, (tr + 1) * 4);\n        var pointCs = Detector.shiftPoint(pointC, pointB, (tr + 1) * 4);\n        var trBA = this.transitionsBetween(pointBs, pointA);\n        var trCD = this.transitionsBetween(pointCs, pointD);\n        // 0..3\n        // |  :\n        // 1--2\n        if (trBA < trCD) {\n            // solid sides: A-B-C\n            points[0] = pointA;\n            points[1] = pointB;\n            points[2] = pointC;\n            points[3] = pointD;\n        }\n        else {\n            // solid sides: B-C-D\n            points[0] = pointB;\n            points[1] = pointC;\n            points[2] = pointD;\n            points[3] = pointA;\n        }\n        return points;\n    };\n    /**\n     * Calculates the corner position of the white top right module.\n     */\n    Detector.prototype.correctTopRight = function (points) {\n        // A..D\n        // |  :\n        // B--C\n        var pointA = points[0];\n        var pointB = points[1];\n        var pointC = points[2];\n        var pointD = points[3];\n        // shift points for safe transition detection.\n        var trTop = this.transitionsBetween(pointA, pointD);\n        var trRight = this.transitionsBetween(pointB, pointD);\n        var pointAs = Detector.shiftPoint(pointA, pointB, (trRight + 1) * 4);\n        var pointCs = Detector.shiftPoint(pointC, pointB, (trTop + 1) * 4);\n        trTop = this.transitionsBetween(pointAs, pointD);\n        trRight = this.transitionsBetween(pointCs, pointD);\n        var candidate1 = new ResultPoint_1.default(pointD.getX() + (pointC.getX() - pointB.getX()) / (trTop + 1), pointD.getY() + (pointC.getY() - pointB.getY()) / (trTop + 1));\n        var candidate2 = new ResultPoint_1.default(pointD.getX() + (pointA.getX() - pointB.getX()) / (trRight + 1), pointD.getY() + (pointA.getY() - pointB.getY()) / (trRight + 1));\n        if (!this.isValid(candidate1)) {\n            if (this.isValid(candidate2)) {\n                return candidate2;\n            }\n            return null;\n        }\n        if (!this.isValid(candidate2)) {\n            return candidate1;\n        }\n        var sumc1 = this.transitionsBetween(pointAs, candidate1) + this.transitionsBetween(pointCs, candidate1);\n        var sumc2 = this.transitionsBetween(pointAs, candidate2) + this.transitionsBetween(pointCs, candidate2);\n        if (sumc1 > sumc2) {\n            return candidate1;\n        }\n        else {\n            return candidate2;\n        }\n    };\n    /**\n     * Shift the edge points to the module center.\n     */\n    Detector.prototype.shiftToModuleCenter = function (points) {\n        // A..D\n        // |  :\n        // B--C\n        var pointA = points[0];\n        var pointB = points[1];\n        var pointC = points[2];\n        var pointD = points[3];\n        // calculate pseudo dimensions\n        var dimH = this.transitionsBetween(pointA, pointD) + 1;\n        var dimV = this.transitionsBetween(pointC, pointD) + 1;\n        // shift points for safe dimension detection\n        var pointAs = Detector.shiftPoint(pointA, pointB, dimV * 4);\n        var pointCs = Detector.shiftPoint(pointC, pointB, dimH * 4);\n        //  calculate more precise dimensions\n        dimH = this.transitionsBetween(pointAs, pointD) + 1;\n        dimV = this.transitionsBetween(pointCs, pointD) + 1;\n        if ((dimH & 0x01) === 1) {\n            dimH += 1;\n        }\n        if ((dimV & 0x01) === 1) {\n            dimV += 1;\n        }\n        // WhiteRectangleDetector returns points inside of the rectangle.\n        // I want points on the edges.\n        var centerX = (pointA.getX() + pointB.getX() + pointC.getX() + pointD.getX()) / 4;\n        var centerY = (pointA.getY() + pointB.getY() + pointC.getY() + pointD.getY()) / 4;\n        pointA = Detector.moveAway(pointA, centerX, centerY);\n        pointB = Detector.moveAway(pointB, centerX, centerY);\n        pointC = Detector.moveAway(pointC, centerX, centerY);\n        pointD = Detector.moveAway(pointD, centerX, centerY);\n        var pointBs;\n        var pointDs;\n        // shift points to the center of each modules\n        pointAs = Detector.shiftPoint(pointA, pointB, dimV * 4);\n        pointAs = Detector.shiftPoint(pointAs, pointD, dimH * 4);\n        pointBs = Detector.shiftPoint(pointB, pointA, dimV * 4);\n        pointBs = Detector.shiftPoint(pointBs, pointC, dimH * 4);\n        pointCs = Detector.shiftPoint(pointC, pointD, dimV * 4);\n        pointCs = Detector.shiftPoint(pointCs, pointB, dimH * 4);\n        pointDs = Detector.shiftPoint(pointD, pointC, dimV * 4);\n        pointDs = Detector.shiftPoint(pointDs, pointA, dimH * 4);\n        return [pointAs, pointBs, pointCs, pointDs];\n    };\n    Detector.prototype.isValid = function (p) {\n        return p.getX() >= 0 && p.getX() < this.image.getWidth() && p.getY() > 0 && p.getY() < this.image.getHeight();\n    };\n    Detector.sampleGrid = function (image, topLeft, bottomLeft, bottomRight, topRight, dimensionX, dimensionY) {\n        var sampler = GridSamplerInstance_1.default.getInstance();\n        return sampler.sampleGrid(image, dimensionX, dimensionY, 0.5, 0.5, dimensionX - 0.5, 0.5, dimensionX - 0.5, dimensionY - 0.5, 0.5, dimensionY - 0.5, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n    };\n    /**\n     * Counts the number of black/white transitions between two points, using something like Bresenham's algorithm.\n     */\n    Detector.prototype.transitionsBetween = function (from, to) {\n        // See QR Code Detector, sizeOfBlackWhiteBlackRun()\n        var fromX = Math.trunc(from.getX());\n        var fromY = Math.trunc(from.getY());\n        var toX = Math.trunc(to.getX());\n        var toY = Math.trunc(to.getY());\n        var steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n        if (steep) {\n            var temp = fromX;\n            fromX = fromY;\n            fromY = temp;\n            temp = toX;\n            toX = toY;\n            toY = temp;\n        }\n        var dx = Math.abs(toX - fromX);\n        var dy = Math.abs(toY - fromY);\n        var error = -dx / 2;\n        var ystep = fromY < toY ? 1 : -1;\n        var xstep = fromX < toX ? 1 : -1;\n        var transitions = 0;\n        var inBlack = this.image.get(steep ? fromY : fromX, steep ? fromX : fromY);\n        for (var x = fromX, y = fromY; x !== toX; x += xstep) {\n            var isBlack = this.image.get(steep ? y : x, steep ? x : y);\n            if (isBlack !== inBlack) {\n                transitions++;\n                inBlack = isBlack;\n            }\n            error += dy;\n            if (error > 0) {\n                if (y === toY) {\n                    break;\n                }\n                y += ystep;\n                error -= dx;\n            }\n        }\n        return transitions;\n    };\n    return Detector;\n}());\nexports.default = Detector;\n//# sourceMappingURL=Detector.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WhiteRectangleDetector_1","DetectorResult_1","GridSamplerInstance_1","NotFoundException_1","ResultPoint_1","Detector","image","rectangleDetector","default","prototype","detect","Detector.prototype.detect","cornerPoints","points","detectSolid1","detectSolid2","correctTopRight","shiftToModuleCenter","topLeft","bottomLeft","bottomRight","topRight","dimensionTop","transitionsBetween","dimensionRight","Math","max","bits","sampleGrid","shiftPoint","Detector.shiftPoint","point","to","div","x","getX","y","getY","moveAway","Detector.moveAway","fromX","fromY","Detector.prototype.detectSolid1","pointA","pointB","pointC","pointD","trAB","trBC","trCD","trDA","min","Detector.prototype.detectSolid2","tr","pointBs","pointCs","trBA","Detector.prototype.correctTopRight","trTop","trRight","pointAs","candidate1","candidate2","isValid","sumc1","sumc2","Detector.prototype.shiftToModuleCenter","dimH","dimV","centerX","centerY","pointDs","Detector.prototype.isValid","p","getWidth","getHeight","Detector.sampleGrid","dimensionX","dimensionY","getInstance","sampler","Detector.prototype.transitionsBetween","from","trunc","toX","toY","steep","abs","temp","dx","dy","error","ystep","xstep","transitions","inBlack","get","isBlack"]
}
