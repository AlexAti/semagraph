{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$browser$BrowserMultiFormatReader.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEpI,IAAIC,UAAa,IAAbA,EAAqB,IAAKA,CAAAA,SAA1BA,EAAyC,QAAS,EAAG,CACrD,IAAIC,cAAgBA,QAAS,CAACC,UAAD,CAAIC,UAAJ,CAAO,CAChCF,aAAA,CAAgBG,MAAOC,CAAAA,cAAvB,EACK,CAAEC,UAAW,EAAb,CADL,UACkCC,MADlC,EAC2C,QAAS,CAACL,CAAD,CAAIC,CAAJ,CAAO,CAAED,CAAEI,CAAAA,SAAF,CAAcH,CAAhB,CAD3D,EAEI,QAAS,CAACD,CAAD,CAAIC,CAAJ,CAAO,CAAE,IAAKK,IAAIA,CAAT,GAAcL,EAAd,CAAqBA,CAAEM,CAAAA,cAAF,CAAiBD,CAAjB,CAAJ,GAAyBN,CAAA,CAAEM,CAAF,CAAzB,CAAgCL,CAAA,CAAEK,CAAF,CAAhC,CAAnB,CACpB,OAAOP,cAAA,CAAcC,UAAd,CAAiBC,UAAjB,CAJyB,CAMpC,OAAO,SAAS,CAACD,CAAD,CAAIC,CAAJ,CAAO,CAEnBO,QAASA,GAAE,EAAG,CAAE,IAAKC,CAAAA,WAAL,CAAmBT,CAArB,CADdD,aAAA,CAAcC,CAAd;AAAiBC,CAAjB,CAEAD,EAAEU,CAAAA,SAAF,CAAoB,IAAN,GAAAT,CAAA,CAAaC,MAAOS,CAAAA,MAAP,CAAcV,CAAd,CAAb,EAAiCO,EAAGE,CAAAA,SAAH,CAAeT,CAAES,CAAAA,SAAjB,CAA4B,IAAIF,EAAjE,CAHK,CAP8B,CAAb,EAa5CN,OAAOU,CAAAA,cAAP,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAAEgB,MAAO,CAAA,CAAT,CAA7C,CACAhB,QAAQiB,CAAAA,wBAAR,CAAmC,IAAK,EACpCC,OAAAA,CAAsBpB,OAAA,CAAQ,kEAAR,CAC1B,KAAIqB,oBAAsBrB,OAAA,CAAQ,+DAAR,CACtBmB,QAAAA,CAA0C,QAAS,CAACG,MAAD,CAAS,CAE5DH,QAASA,yBAAwB,CAACI,KAAD,CAAQC,sBAAR,CAAgC,CAC/C,IAAK,EAAnB,GAAID,KAAJ,GAAwBA,KAAxB,CAAgC,IAAhC,CAC+B,KAAK,EAApC,GAAIC,sBAAJ;CAAyCA,sBAAzC,CAAkE,GAAlE,CAEA,KAAIC,OAAS,IAAIJ,mBAAoBK,CAAAA,OACrCD,OAAOE,CAAAA,QAAP,CAAgBJ,KAAhB,CAEA,OADQD,OAAOM,CAAAA,IAAP,CAAY,IAAZ,CAAkBH,MAAlB,CAA0BD,sBAA1B,CACR,EAD6D,IANA,CADjErB,SAAA,CAAUgB,wBAAV,CAAoCG,MAApC,CAcAH,yBAAyBJ,CAAAA,SAAUc,CAAAA,YAAnC,CAAkDC,QAAS,CAACC,YAAD,CAAe,CACtE,MAAO,KAAKN,CAAAA,MAAOO,CAAAA,eAAZ,CAA4BD,YAA5B,CAD+D,CAG1E,OAAOZ,yBAlBqD,CAAlB,CAmB5CC,MAAoBa,CAAAA,iBAnBwB,CAoB9C/B,QAAQiB,CAAAA,wBAAR,CAAmCA,OAvCiG;",
"sources":["node_modules/@zxing/library/cjs/browser/BrowserMultiFormatReader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$browser$BrowserMultiFormatReader\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserMultiFormatReader = void 0;\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\nvar MultiFormatReader_1 = require(\"../core/MultiFormatReader\");\nvar BrowserMultiFormatReader = /** @class */ (function (_super) {\n    __extends(BrowserMultiFormatReader, _super);\n    function BrowserMultiFormatReader(hints, timeBetweenScansMillis) {\n        if (hints === void 0) { hints = null; }\n        if (timeBetweenScansMillis === void 0) { timeBetweenScansMillis = 500; }\n        var _this = this;\n        var reader = new MultiFormatReader_1.default();\n        reader.setHints(hints);\n        _this = _super.call(this, reader, timeBetweenScansMillis) || this;\n        return _this;\n    }\n    /**\n     * Overwrite decodeBitmap to call decodeWithState, which will pay\n     * attention to the hints set in the constructor function\n     */\n    BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n        return this.reader.decodeWithState(binaryBitmap);\n    };\n    return BrowserMultiFormatReader;\n}(BrowserCodeReader_1.BrowserCodeReader));\nexports.BrowserMultiFormatReader = BrowserMultiFormatReader;\n//# sourceMappingURL=BrowserMultiFormatReader.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","BrowserMultiFormatReader","BrowserCodeReader_1","MultiFormatReader_1","_super","hints","timeBetweenScansMillis","reader","default","setHints","call","decodeBitmap","BrowserMultiFormatReader.prototype.decodeBitmap","binaryBitmap","decodeWithState","BrowserCodeReader"]
}
