shadow$provide.module$node_modules$$zxing$library$cjs$core$oned$Code128Reader=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=
null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var BarcodeFormat_1=require("module$node_modules$$zxing$library$cjs$core$BarcodeFormat"),ChecksumException_1=require("module$node_modules$$zxing$library$cjs$core$ChecksumException"),DecodeHintType_1=require("module$node_modules$$zxing$library$cjs$core$DecodeHintType"),FormatException_1=require("module$node_modules$$zxing$library$cjs$core$FormatException"),NotFoundException_1=require("module$node_modules$$zxing$library$cjs$core$NotFoundException"),
Result_1=require("module$node_modules$$zxing$library$cjs$core$Result"),ResultPoint_1=require("module$node_modules$$zxing$library$cjs$core$ResultPoint"),OneDReader_1=require("module$node_modules$$zxing$library$cjs$core$oned$OneDReader");global=function(_super){function Code128Reader(){return null!==_super&&_super.apply(this,arguments)||this}__extends(Code128Reader,_super);Code128Reader.findStartPattern=function(row){for(var width=row.getSize(),rowOffset=row.getNextSet(0),counterPosition=0,counters=
Int32Array.from([0,0,0,0,0,0]),patternStart=rowOffset,isWhite=!1;rowOffset<width;rowOffset++)if(row.get(rowOffset)!==isWhite)counters[counterPosition]++;else{if(5===counterPosition){for(var bestVariance=Code128Reader.MAX_AVG_VARIANCE,bestMatch=-1,startCode=Code128Reader.CODE_START_A;startCode<=Code128Reader.CODE_START_C;startCode++){var variance=OneDReader_1.default.patternMatchVariance(counters,Code128Reader.CODE_PATTERNS[startCode],Code128Reader.MAX_INDIVIDUAL_VARIANCE);variance<bestVariance&&(bestVariance=
variance,bestMatch=startCode)}if(0<=bestMatch&&row.isRange(Math.max(0,patternStart-(rowOffset-patternStart)/2),patternStart,!1))return Int32Array.from([patternStart,rowOffset,bestMatch]);patternStart+=counters[0]+counters[1];counters=counters.slice(2,counters.length-1);counters[counterPosition-1]=0;counters[counterPosition]=0;counterPosition--}else counterPosition++;counters[counterPosition]=1;isWhite=!isWhite}throw new NotFoundException_1.default;};Code128Reader.decodeCode=function(row,counters,
rowOffset){OneDReader_1.default.recordPattern(row,rowOffset,counters);row=Code128Reader.MAX_AVG_VARIANCE;rowOffset=-1;for(var d=0;d<Code128Reader.CODE_PATTERNS.length;d++){var variance=this.patternMatchVariance(counters,Code128Reader.CODE_PATTERNS[d],Code128Reader.MAX_INDIVIDUAL_VARIANCE);variance<row&&(row=variance,rowOffset=d)}if(0<=rowOffset)return rowOffset;throw new NotFoundException_1.default;};Code128Reader.prototype.decodeRow=function(rowNumber,row,hints){var convertFNC1=hints&&!0===hints.get(DecodeHintType_1.default.ASSUME_GS1),
startPatternInfo=Code128Reader.findStartPattern(row),startCode=startPatternInfo[2],currentRawCodesIndex=0,rawCodes=new Uint8Array(20);rawCodes[currentRawCodesIndex++]=startCode;switch(startCode){case Code128Reader.CODE_START_A:var codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_START_B:codeSet=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_START_C:codeSet=Code128Reader.CODE_CODE_C;break;default:throw new FormatException_1.default;}var done=!1,isNextShifted=!1;hints="";var lastStart=
startPatternInfo[0],nextStart=startPatternInfo[1],counters=Int32Array.from([0,0,0,0,0,0]),lastCode=0,code=0,checksumTotal=startCode,multiplier=0;startCode=!0;for(var upperMode=!1,shiftUpperMode=!1;!done;){var unshift=isNextShifted;isNextShifted=!1;lastCode=code;code=Code128Reader.decodeCode(row,counters,nextStart);rawCodes[currentRawCodesIndex++]=code;code!==Code128Reader.CODE_STOP&&(startCode=!0);code!==Code128Reader.CODE_STOP&&(multiplier++,checksumTotal+=multiplier*code);lastStart=nextStart;nextStart+=
counters.reduce(function(previous,current){return previous+current},0);switch(code){case Code128Reader.CODE_START_A:case Code128Reader.CODE_START_B:case Code128Reader.CODE_START_C:throw new FormatException_1.default;}switch(codeSet){case Code128Reader.CODE_CODE_A:if(64>code)hints=shiftUpperMode===upperMode?hints+String.fromCharCode(32+code):hints+String.fromCharCode(32+code+128),shiftUpperMode=!1;else if(96>code)hints=shiftUpperMode===upperMode?hints+String.fromCharCode(code-64):hints+String.fromCharCode(code+
64),shiftUpperMode=!1;else switch(code!==Code128Reader.CODE_STOP&&(startCode=!1),code){case Code128Reader.CODE_FNC_1:convertFNC1&&(hints=0===hints.length?hints+"]C1":hints+String.fromCharCode(29));break;case Code128Reader.CODE_FNC_4_A:!upperMode&&shiftUpperMode?(upperMode=!0,shiftUpperMode=!1):shiftUpperMode=upperMode&&shiftUpperMode?upperMode=!1:!0;break;case Code128Reader.CODE_SHIFT:isNextShifted=!0;codeSet=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_CODE_B:codeSet=Code128Reader.CODE_CODE_B;
break;case Code128Reader.CODE_CODE_C:codeSet=Code128Reader.CODE_CODE_C;break;case Code128Reader.CODE_STOP:done=!0}break;case Code128Reader.CODE_CODE_B:if(96>code)hints=shiftUpperMode===upperMode?hints+String.fromCharCode(32+code):hints+String.fromCharCode(32+code+128),shiftUpperMode=!1;else switch(code!==Code128Reader.CODE_STOP&&(startCode=!1),code){case Code128Reader.CODE_FNC_1:convertFNC1&&(hints=0===hints.length?hints+"]C1":hints+String.fromCharCode(29));break;case Code128Reader.CODE_FNC_4_B:!upperMode&&
shiftUpperMode?(upperMode=!0,shiftUpperMode=!1):shiftUpperMode=upperMode&&shiftUpperMode?upperMode=!1:!0;break;case Code128Reader.CODE_SHIFT:isNextShifted=!0;codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_A:codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_C:codeSet=Code128Reader.CODE_CODE_C;break;case Code128Reader.CODE_STOP:done=!0}break;case Code128Reader.CODE_CODE_C:if(100>code)10>code&&(hints+="0"),hints+=code;else switch(code!==Code128Reader.CODE_STOP&&
(startCode=!1),code){case Code128Reader.CODE_FNC_1:convertFNC1&&(hints=0===hints.length?hints+"]C1":hints+String.fromCharCode(29));break;case Code128Reader.CODE_CODE_A:codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_B:codeSet=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_STOP:done=!0}}unshift&&(codeSet=codeSet===Code128Reader.CODE_CODE_A?Code128Reader.CODE_CODE_B:Code128Reader.CODE_CODE_A)}convertFNC1=nextStart-lastStart;nextStart=row.getNextUnset(nextStart);if(!row.isRange(nextStart,
Math.min(row.getSize(),nextStart+(nextStart-lastStart)/2),!1))throw new NotFoundException_1.default;if((checksumTotal-multiplier*lastCode)%103!==lastCode)throw new ChecksumException_1.default;row=hints.length;if(0===row)throw new NotFoundException_1.default;0<row&&startCode&&(hints=codeSet===Code128Reader.CODE_CODE_C?hints.substring(0,row-2):hints.substring(0,row-1));row=(startPatternInfo[1]+startPatternInfo[0])/2;startPatternInfo=lastStart+convertFNC1/2;codeSet=rawCodes.length;lastStart=new Uint8Array(codeSet);
for(nextStart=0;nextStart<codeSet;nextStart++)lastStart[nextStart]=rawCodes[nextStart];rowNumber=[new ResultPoint_1.default(row,rowNumber),new ResultPoint_1.default(startPatternInfo,rowNumber)];return new Result_1.default(hints,lastStart,0,rowNumber,BarcodeFormat_1.default.CODE_128,(new Date).getTime())};Code128Reader.CODE_PATTERNS=[Int32Array.from([2,1,2,2,2,2]),Int32Array.from([2,2,2,1,2,2]),Int32Array.from([2,2,2,2,2,1]),Int32Array.from([1,2,1,2,2,3]),Int32Array.from([1,2,1,3,2,2]),Int32Array.from([1,
3,1,2,2,2]),Int32Array.from([1,2,2,2,1,3]),Int32Array.from([1,2,2,3,1,2]),Int32Array.from([1,3,2,2,1,2]),Int32Array.from([2,2,1,2,1,3]),Int32Array.from([2,2,1,3,1,2]),Int32Array.from([2,3,1,2,1,2]),Int32Array.from([1,1,2,2,3,2]),Int32Array.from([1,2,2,1,3,2]),Int32Array.from([1,2,2,2,3,1]),Int32Array.from([1,1,3,2,2,2]),Int32Array.from([1,2,3,1,2,2]),Int32Array.from([1,2,3,2,2,1]),Int32Array.from([2,2,3,2,1,1]),Int32Array.from([2,2,1,1,3,2]),Int32Array.from([2,2,1,2,3,1]),Int32Array.from([2,1,3,2,
1,2]),Int32Array.from([2,2,3,1,1,2]),Int32Array.from([3,1,2,1,3,1]),Int32Array.from([3,1,1,2,2,2]),Int32Array.from([3,2,1,1,2,2]),Int32Array.from([3,2,1,2,2,1]),Int32Array.from([3,1,2,2,1,2]),Int32Array.from([3,2,2,1,1,2]),Int32Array.from([3,2,2,2,1,1]),Int32Array.from([2,1,2,1,2,3]),Int32Array.from([2,1,2,3,2,1]),Int32Array.from([2,3,2,1,2,1]),Int32Array.from([1,1,1,3,2,3]),Int32Array.from([1,3,1,1,2,3]),Int32Array.from([1,3,1,3,2,1]),Int32Array.from([1,1,2,3,1,3]),Int32Array.from([1,3,2,1,1,3]),
Int32Array.from([1,3,2,3,1,1]),Int32Array.from([2,1,1,3,1,3]),Int32Array.from([2,3,1,1,1,3]),Int32Array.from([2,3,1,3,1,1]),Int32Array.from([1,1,2,1,3,3]),Int32Array.from([1,1,2,3,3,1]),Int32Array.from([1,3,2,1,3,1]),Int32Array.from([1,1,3,1,2,3]),Int32Array.from([1,1,3,3,2,1]),Int32Array.from([1,3,3,1,2,1]),Int32Array.from([3,1,3,1,2,1]),Int32Array.from([2,1,1,3,3,1]),Int32Array.from([2,3,1,1,3,1]),Int32Array.from([2,1,3,1,1,3]),Int32Array.from([2,1,3,3,1,1]),Int32Array.from([2,1,3,1,3,1]),Int32Array.from([3,
1,1,1,2,3]),Int32Array.from([3,1,1,3,2,1]),Int32Array.from([3,3,1,1,2,1]),Int32Array.from([3,1,2,1,1,3]),Int32Array.from([3,1,2,3,1,1]),Int32Array.from([3,3,2,1,1,1]),Int32Array.from([3,1,4,1,1,1]),Int32Array.from([2,2,1,4,1,1]),Int32Array.from([4,3,1,1,1,1]),Int32Array.from([1,1,1,2,2,4]),Int32Array.from([1,1,1,4,2,2]),Int32Array.from([1,2,1,1,2,4]),Int32Array.from([1,2,1,4,2,1]),Int32Array.from([1,4,1,1,2,2]),Int32Array.from([1,4,1,2,2,1]),Int32Array.from([1,1,2,2,1,4]),Int32Array.from([1,1,2,4,
1,2]),Int32Array.from([1,2,2,1,1,4]),Int32Array.from([1,2,2,4,1,1]),Int32Array.from([1,4,2,1,1,2]),Int32Array.from([1,4,2,2,1,1]),Int32Array.from([2,4,1,2,1,1]),Int32Array.from([2,2,1,1,1,4]),Int32Array.from([4,1,3,1,1,1]),Int32Array.from([2,4,1,1,1,2]),Int32Array.from([1,3,4,1,1,1]),Int32Array.from([1,1,1,2,4,2]),Int32Array.from([1,2,1,1,4,2]),Int32Array.from([1,2,1,2,4,1]),Int32Array.from([1,1,4,2,1,2]),Int32Array.from([1,2,4,1,1,2]),Int32Array.from([1,2,4,2,1,1]),Int32Array.from([4,1,1,2,1,2]),
Int32Array.from([4,2,1,1,1,2]),Int32Array.from([4,2,1,2,1,1]),Int32Array.from([2,1,2,1,4,1]),Int32Array.from([2,1,4,1,2,1]),Int32Array.from([4,1,2,1,2,1]),Int32Array.from([1,1,1,1,4,3]),Int32Array.from([1,1,1,3,4,1]),Int32Array.from([1,3,1,1,4,1]),Int32Array.from([1,1,4,1,1,3]),Int32Array.from([1,1,4,3,1,1]),Int32Array.from([4,1,1,1,1,3]),Int32Array.from([4,1,1,3,1,1]),Int32Array.from([1,1,3,1,4,1]),Int32Array.from([1,1,4,1,3,1]),Int32Array.from([3,1,1,1,4,1]),Int32Array.from([4,1,1,1,3,1]),Int32Array.from([2,
1,1,4,1,2]),Int32Array.from([2,1,1,2,1,4]),Int32Array.from([2,1,1,2,3,2]),Int32Array.from([2,3,3,1,1,1,2])];Code128Reader.MAX_AVG_VARIANCE=.25;Code128Reader.MAX_INDIVIDUAL_VARIANCE=.7;Code128Reader.CODE_SHIFT=98;Code128Reader.CODE_CODE_C=99;Code128Reader.CODE_CODE_B=100;Code128Reader.CODE_CODE_A=101;Code128Reader.CODE_FNC_1=102;Code128Reader.CODE_FNC_2=97;Code128Reader.CODE_FNC_3=96;Code128Reader.CODE_FNC_4_A=101;Code128Reader.CODE_FNC_4_B=100;Code128Reader.CODE_START_A=103;Code128Reader.CODE_START_B=
104;Code128Reader.CODE_START_C=105;Code128Reader.CODE_STOP=106;return Code128Reader}(OneDReader_1.default);exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$oned$Code128Reader.js.map
