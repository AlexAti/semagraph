{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$common$reedsolomon$GenericGF.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/common/reedsolomon/GenericGF.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$common$reedsolomon$GenericGF\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*namespace com.google.zxing.common.reedsolomon {*/\nvar GenericGFPoly_1 = require(\"./GenericGFPoly\");\nvar AbstractGenericGF_1 = require(\"./AbstractGenericGF\");\nvar Integer_1 = require(\"../../util/Integer\");\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\nvar ArithmeticException_1 = require(\"../../ArithmeticException\");\n/**\n * <p>This class contains utility methods for performing mathematical operations over\n * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\n *\n * <p>Throughout this package, elements of the GF are represented as an {@code int}\n * for convenience and speed (but at the cost of memory).\n * </p>\n *\n * @author Sean Owen\n * @author David Olivier\n */\nvar GenericGF = /** @class */ (function (_super) {\n    __extends(GenericGF, _super);\n    /**\n     * Create a representation of GF(size) using the given primitive polynomial.\n     *\n     * @param primitive irreducible polynomial whose coefficients are represented by\n     *  the bits of an int, where the least-significant bit represents the constant\n     *  coefficient\n     * @param size the size of the field\n     * @param b the factor b in the generator polynomial can be 0- or 1-based\n     *  (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))).\n     *  In most cases it should be 1, but for QR code it is 0.\n     */\n    function GenericGF(primitive /*int*/, size /*int*/, generatorBase /*int*/) {\n        var _this = _super.call(this) || this;\n        _this.primitive = primitive;\n        _this.size = size;\n        _this.generatorBase = generatorBase;\n        var expTable = new Int32Array(size);\n        var x = 1;\n        for (var i = 0; i < size; i++) {\n            expTable[i] = x;\n            x *= 2; // we're assuming the generator alpha is 2\n            if (x >= size) {\n                x ^= primitive;\n                x &= size - 1;\n            }\n        }\n        _this.expTable = expTable;\n        var logTable = new Int32Array(size);\n        for (var i = 0; i < size - 1; i++) {\n            logTable[expTable[i]] = i;\n        }\n        _this.logTable = logTable;\n        // logTable[0] == 0 but this should never be used\n        _this.zero = new GenericGFPoly_1.default(_this, Int32Array.from([0]));\n        _this.one = new GenericGFPoly_1.default(_this, Int32Array.from([1]));\n        return _this;\n    }\n    GenericGF.prototype.getZero = function () {\n        return this.zero;\n    };\n    GenericGF.prototype.getOne = function () {\n        return this.one;\n    };\n    /**\n     * @return the monomial representing coefficient * x^degree\n     */\n    GenericGF.prototype.buildMonomial = function (degree /*int*/, coefficient /*int*/) {\n        if (degree < 0) {\n            throw new IllegalArgumentException_1.default();\n        }\n        if (coefficient === 0) {\n            return this.zero;\n        }\n        var coefficients = new Int32Array(degree + 1);\n        coefficients[0] = coefficient;\n        return new GenericGFPoly_1.default(this, coefficients);\n    };\n    /**\n     * @return multiplicative inverse of a\n     */\n    GenericGF.prototype.inverse = function (a /*int*/) {\n        if (a === 0) {\n            throw new ArithmeticException_1.default();\n        }\n        return this.expTable[this.size - this.logTable[a] - 1];\n    };\n    /**\n     * @return product of a and b in GF(size)\n     */\n    GenericGF.prototype.multiply = function (a /*int*/, b /*int*/) {\n        if (a === 0 || b === 0) {\n            return 0;\n        }\n        return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n    };\n    GenericGF.prototype.getSize = function () {\n        return this.size;\n    };\n    GenericGF.prototype.getGeneratorBase = function () {\n        return this.generatorBase;\n    };\n    /*@Override*/\n    GenericGF.prototype.toString = function () {\n        return ('GF(0x' + Integer_1.default.toHexString(this.primitive) + ',' + this.size + ')');\n    };\n    GenericGF.prototype.equals = function (o) {\n        return o === this;\n    };\n    GenericGF.AZTEC_DATA_12 = new GenericGF(0x1069, 4096, 1); // x^12 + x^6 + x^5 + x^3 + 1\n    GenericGF.AZTEC_DATA_10 = new GenericGF(0x409, 1024, 1); // x^10 + x^3 + 1\n    GenericGF.AZTEC_DATA_6 = new GenericGF(0x43, 64, 1); // x^6 + x + 1\n    GenericGF.AZTEC_PARAM = new GenericGF(0x13, 16, 1); // x^4 + x + 1\n    GenericGF.QR_CODE_FIELD_256 = new GenericGF(0x011d, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n    GenericGF.DATA_MATRIX_FIELD_256 = new GenericGF(0x012d, 256, 1); // x^8 + x^5 + x^3 + x^2 + 1\n    GenericGF.AZTEC_DATA_8 = GenericGF.DATA_MATRIX_FIELD_256;\n    GenericGF.MAXICODE_FIELD_64 = GenericGF.AZTEC_DATA_6;\n    return GenericGF;\n}(AbstractGenericGF_1.default));\nexports.default = GenericGF;\n//# sourceMappingURL=GenericGF.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","GenericGFPoly_1","AbstractGenericGF_1","Integer_1","IllegalArgumentException_1","ArithmeticException_1","GenericGF","_super","primitive","size","generatorBase","_this","call","expTable","Int32Array","x","i","logTable","zero","default","from","one","getZero","GenericGF.prototype.getZero","getOne","GenericGF.prototype.getOne","buildMonomial","GenericGF.prototype.buildMonomial","degree","coefficient","coefficients","inverse","GenericGF.prototype.inverse","a","multiply","GenericGF.prototype.multiply","getSize","GenericGF.prototype.getSize","getGeneratorBase","GenericGF.prototype.getGeneratorBase","toString","GenericGF.prototype.toString","toHexString","equals","GenericGF.prototype.equals","o","AZTEC_DATA_12","AZTEC_DATA_10","AZTEC_DATA_6","AZTEC_PARAM","QR_CODE_FIELD_256","DATA_MATRIX_FIELD_256","AZTEC_DATA_8","MAXICODE_FIELD_64"]
}
