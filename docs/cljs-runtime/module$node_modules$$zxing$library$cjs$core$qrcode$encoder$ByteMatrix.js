shadow$provide.module$node_modules$$zxing$library$cjs$core$qrcode$encoder$ByteMatrix=function(global,require,module,exports){var __values=this&&this.__values||function(o){var s="function"===typeof Symbol&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&"number"===typeof o.length)return{next:function(){o&&i>=o.length&&(o=void 0);return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");};Object.defineProperty(exports,"__esModule",
{value:!0});var Arrays_1=require("module$node_modules$$zxing$library$cjs$core$util$Arrays"),StringBuilder_1=require("module$node_modules$$zxing$library$cjs$core$util$StringBuilder");global=function(){function ByteMatrix(width,height){this.width=width;this.height=height;for(var bytes=Array(height),i=0;i!==height;i++)bytes[i]=new Uint8Array(width);this.bytes=bytes}ByteMatrix.prototype.getHeight=function(){return this.height};ByteMatrix.prototype.getWidth=function(){return this.width};ByteMatrix.prototype.get=
function(x,y){return this.bytes[y][x]};ByteMatrix.prototype.getArray=function(){return this.bytes};ByteMatrix.prototype.setNumber=function(x,y,value){this.bytes[y][x]=value};ByteMatrix.prototype.setBoolean=function(x,y,value){this.bytes[y][x]=value?1:0};ByteMatrix.prototype.clear=function(value){var _a;try{for(var _b=__values(this.bytes),_c=_b.next();!_c.done;_c=_b.next())Arrays_1.default.fill(_c.value,value)}catch(e_1_1){var e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&_a.call(_b)}finally{if(e_1)throw e_1.error;
}}};ByteMatrix.prototype.equals=function(o){if(!(o instanceof ByteMatrix)||this.width!==o.width||this.height!==o.height)return!1;for(var y=0,height=this.height;y<height;++y)for(var bytesY=this.bytes[y],otherBytesY=o.bytes[y],x=0,width=this.width;x<width;++x)if(bytesY[x]!==otherBytesY[x])return!1;return!0};ByteMatrix.prototype.toString=function(){for(var result=new StringBuilder_1.default,y=0,height=this.height;y<height;++y){for(var bytesY=this.bytes[y],x=0,width=this.width;x<width;++x)switch(bytesY[x]){case 0:result.append(" 0");
break;case 1:result.append(" 1");break;default:result.append("  ")}result.append("\n")}return result.toString()};return ByteMatrix}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$qrcode$encoder$ByteMatrix.js.map
