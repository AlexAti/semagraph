{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$oned$rss$expanded$RSSExpandedReader.js",
"lineCount":37,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/oned/rss/expanded/RSSExpandedReader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$oned$rss$expanded$RSSExpandedReader\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BarcodeFormat_1 = require(\"../../../BarcodeFormat\");\nvar MathUtils_1 = require(\"../../../common/detector/MathUtils\");\n// import FormatException from '../../../FormatException';\nvar NotFoundException_1 = require(\"../../../NotFoundException\");\nvar Result_1 = require(\"../../../Result\");\nvar System_1 = require(\"../../../util/System\");\nvar AbstractRSSReader_1 = require(\"../../rss/AbstractRSSReader\");\nvar DataCharacter_1 = require(\"../../rss/DataCharacter\");\nvar FinderPattern_1 = require(\"../../rss/FinderPattern\");\nvar RSSUtils_1 = require(\"../../rss/RSSUtils\");\nvar BitArrayBuilder_1 = require(\"./BitArrayBuilder\");\nvar AbstractExpandedDecoderComplement_1 = require(\"./decoders/AbstractExpandedDecoderComplement\");\nvar ExpandedPair_1 = require(\"./ExpandedPair\");\nvar ExpandedRow_1 = require(\"./ExpandedRow\");\n// import java.util.ArrayList;\n// import java.util.Iterator;\n// import java.util.List;\n// import java.util.Map;\n// import java.util.Collections;\n/** @experimental */\nvar RSSExpandedReader = /** @class */ (function (_super) {\n    __extends(RSSExpandedReader, _super);\n    function RSSExpandedReader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pairs = new Array(RSSExpandedReader.MAX_PAIRS);\n        _this.rows = new Array();\n        _this.startEnd = [2];\n        return _this;\n    }\n    RSSExpandedReader.prototype.decodeRow = function (rowNumber, row, hints) {\n        // Rows can start with even pattern in case in prev rows there where odd number of patters.\n        // So lets try twice\n        // this.pairs.clear();\n        this.pairs.length = 0;\n        this.startFromEven = false;\n        try {\n            return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n        }\n        catch (e) {\n            // OK\n            // console.log(e);\n        }\n        this.pairs.length = 0;\n        this.startFromEven = true;\n        return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n    };\n    RSSExpandedReader.prototype.reset = function () {\n        this.pairs.length = 0;\n        this.rows.length = 0;\n    };\n    // Not private for testing\n    RSSExpandedReader.prototype.decodeRow2pairs = function (rowNumber, row) {\n        var done = false;\n        while (!done) {\n            try {\n                this.pairs.push(this.retrieveNextPair(row, this.pairs, rowNumber));\n            }\n            catch (error) {\n                if (error instanceof NotFoundException_1.default) {\n                    if (!this.pairs.length) {\n                        throw new NotFoundException_1.default();\n                    }\n                    // exit this loop when retrieveNextPair() fails and throws\n                    done = true;\n                }\n            }\n        }\n        // TODO: verify sequence of finder patterns as in checkPairSequence()\n        if (this.checkChecksum()) {\n            return this.pairs;\n        }\n        var tryStackedDecode;\n        if (this.rows.length) {\n            tryStackedDecode = true;\n        }\n        else {\n            tryStackedDecode = false;\n        }\n        // let tryStackedDecode = !this.rows.isEmpty();\n        this.storeRow(rowNumber, false); // TODO: deal with reversed rows\n        if (tryStackedDecode) {\n            // When the image is 180-rotated, then rows are sorted in wrong direction.\n            // Try twice with both the directions.\n            var ps = this.checkRowsBoolean(false);\n            if (ps != null) {\n                return ps;\n            }\n            ps = this.checkRowsBoolean(true);\n            if (ps != null) {\n                return ps;\n            }\n        }\n        throw new NotFoundException_1.default();\n    };\n    // Need to Verify\n    RSSExpandedReader.prototype.checkRowsBoolean = function (reverse) {\n        // Limit number of rows we are checking\n        // We use recursive algorithm with pure complexity and don't want it to take forever\n        // Stacked barcode can have up to 11 rows, so 25 seems reasonable enough\n        if (this.rows.length > 25) {\n            this.rows.length = 0; // We will never have a chance to get result, so clear it\n            return null;\n        }\n        this.pairs.length = 0;\n        if (reverse) {\n            this.rows = this.rows.reverse();\n            // Collections.reverse(this.rows);\n        }\n        var ps = null;\n        try {\n            ps = this.checkRows(new Array(), 0);\n        }\n        catch (e) {\n            // OK\n            console.log(e);\n        }\n        if (reverse) {\n            this.rows = this.rows.reverse();\n            // Collections.reverse(this.rows);\n        }\n        return ps;\n    };\n    // Try to construct a valid rows sequence\n    // Recursion is used to implement backtracking\n    RSSExpandedReader.prototype.checkRows = function (collectedRows, currentRow) {\n        var e_1, _a;\n        for (var i = currentRow; i < this.rows.length; i++) {\n            var row = this.rows[i];\n            this.pairs.length = 0;\n            try {\n                for (var collectedRows_1 = (e_1 = void 0, __values(collectedRows)), collectedRows_1_1 = collectedRows_1.next(); !collectedRows_1_1.done; collectedRows_1_1 = collectedRows_1.next()) {\n                    var collectedRow = collectedRows_1_1.value;\n                    this.pairs.push(collectedRow.getPairs());\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (collectedRows_1_1 && !collectedRows_1_1.done && (_a = collectedRows_1.return)) _a.call(collectedRows_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.pairs.push(row.getPairs());\n            if (!RSSExpandedReader.isValidSequence(this.pairs)) {\n                continue;\n            }\n            if (this.checkChecksum()) {\n                return this.pairs;\n            }\n            var rs = new Array(collectedRows);\n            rs.push(row);\n            try {\n                // Recursion: try to add more rows\n                return this.checkRows(rs, i + 1);\n            }\n            catch (e) {\n                // We failed, try the next candidate\n                console.log(e);\n            }\n        }\n        throw new NotFoundException_1.default();\n    };\n    // Whether the pairs form a valid find pattern sequence,\n    // either complete or a prefix\n    RSSExpandedReader.isValidSequence = function (pairs) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(RSSExpandedReader.FINDER_PATTERN_SEQUENCES), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var sequence = _c.value;\n                if (pairs.length > sequence.length) {\n                    continue;\n                }\n                var stop_1 = true;\n                for (var j = 0; j < pairs.length; j++) {\n                    if (pairs[j].getFinderPattern().getValue() != sequence[j]) {\n                        stop_1 = false;\n                        break;\n                    }\n                }\n                if (stop_1) {\n                    return true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return false;\n    };\n    RSSExpandedReader.prototype.storeRow = function (rowNumber, wasReversed) {\n        // Discard if duplicate above or below; otherwise insert in order by row number.\n        var insertPos = 0;\n        var prevIsSame = false;\n        var nextIsSame = false;\n        while (insertPos < this.rows.length) {\n            var erow = this.rows[insertPos];\n            if (erow.getRowNumber() > rowNumber) {\n                nextIsSame = erow.isEquivalent(this.pairs);\n                break;\n            }\n            prevIsSame = erow.isEquivalent(this.pairs);\n            insertPos++;\n        }\n        if (nextIsSame || prevIsSame) {\n            return;\n        }\n        // When the row was partially decoded (e.g. 2 pairs found instead of 3),\n        // it will prevent us from detecting the barcode.\n        // Try to merge partial rows\n        // Check whether the row is part of an allready detected row\n        if (RSSExpandedReader.isPartialRow(this.pairs, this.rows)) {\n            return;\n        }\n        this.rows.push(insertPos, new ExpandedRow_1.default(this.pairs, rowNumber, wasReversed));\n        this.removePartialRows(this.pairs, this.rows);\n    };\n    // Remove all the rows that contains only specified pairs\n    RSSExpandedReader.prototype.removePartialRows = function (pairs, rows) {\n        var e_3, _a, e_4, _b, e_5, _c;\n        try {\n            // for (Iterator<ExpandedRow> iterator = rows.iterator(); iterator.hasNext();) {\n            //   ExpandedRow r = iterator.next();\n            //   if (r.getPairs().size() == pairs.size()) {\n            //     continue;\n            //   }\n            //   boolean allFound = true;\n            //   for (ExpandedPair p : r.getPairs()) {\n            //     boolean found = false;\n            //     for (ExpandedPair pp : pairs) {\n            //       if (p.equals(pp)) {\n            //         found = true;\n            //         break;\n            //       }\n            //     }\n            //     if (!found) {\n            //       allFound = false;\n            //       break;\n            //     }\n            //   }\n            //   if (allFound) {\n            //     // 'pairs' contains all the pairs from the row 'r'\n            //     iterator.remove();\n            //   }\n            // }\n            for (var rows_1 = __values(rows), rows_1_1 = rows_1.next(); !rows_1_1.done; rows_1_1 = rows_1.next()) {\n                var row = rows_1_1.value;\n                if (row.getPairs().length === pairs.length) {\n                    continue;\n                }\n                var allFound = true;\n                try {\n                    for (var _d = (e_4 = void 0, __values(row.getPairs())), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var p = _e.value;\n                        var found = false;\n                        try {\n                            for (var pairs_1 = (e_5 = void 0, __values(pairs)), pairs_1_1 = pairs_1.next(); !pairs_1_1.done; pairs_1_1 = pairs_1.next()) {\n                                var pp = pairs_1_1.value;\n                                if (ExpandedPair_1.default.equals(p, pp)) {\n                                    found = true;\n                                    break;\n                                }\n                            }\n                        }\n                        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                        finally {\n                            try {\n                                if (pairs_1_1 && !pairs_1_1.done && (_c = pairs_1.return)) _c.call(pairs_1);\n                            }\n                            finally { if (e_5) throw e_5.error; }\n                        }\n                        if (!found) {\n                            allFound = false;\n                        }\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (rows_1_1 && !rows_1_1.done && (_a = rows_1.return)) _a.call(rows_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    // Returns true when one of the rows already contains all the pairs\n    RSSExpandedReader.isPartialRow = function (pairs, rows) {\n        var e_6, _a, e_7, _b, e_8, _c;\n        try {\n            for (var rows_2 = __values(rows), rows_2_1 = rows_2.next(); !rows_2_1.done; rows_2_1 = rows_2.next()) {\n                var r = rows_2_1.value;\n                var allFound = true;\n                try {\n                    for (var pairs_2 = (e_7 = void 0, __values(pairs)), pairs_2_1 = pairs_2.next(); !pairs_2_1.done; pairs_2_1 = pairs_2.next()) {\n                        var p = pairs_2_1.value;\n                        var found = false;\n                        try {\n                            for (var _d = (e_8 = void 0, __values(r.getPairs())), _e = _d.next(); !_e.done; _e = _d.next()) {\n                                var pp = _e.value;\n                                if (p.equals(pp)) {\n                                    found = true;\n                                    break;\n                                }\n                            }\n                        }\n                        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n                        finally {\n                            try {\n                                if (_e && !_e.done && (_c = _d.return)) _c.call(_d);\n                            }\n                            finally { if (e_8) throw e_8.error; }\n                        }\n                        if (!found) {\n                            allFound = false;\n                            break;\n                        }\n                    }\n                }\n                catch (e_7_1) { e_7 = { error: e_7_1 }; }\n                finally {\n                    try {\n                        if (pairs_2_1 && !pairs_2_1.done && (_b = pairs_2.return)) _b.call(pairs_2);\n                    }\n                    finally { if (e_7) throw e_7.error; }\n                }\n                if (allFound) {\n                    // the row 'r' contain all the pairs from 'pairs'\n                    return true;\n                }\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (rows_2_1 && !rows_2_1.done && (_a = rows_2.return)) _a.call(rows_2);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n        return false;\n    };\n    // Only used for unit testing\n    RSSExpandedReader.prototype.getRows = function () {\n        return this.rows;\n    };\n    // Not private for unit testing\n    RSSExpandedReader.constructResult = function (pairs) {\n        var binary = BitArrayBuilder_1.default.buildBitArray(pairs);\n        var decoder = AbstractExpandedDecoderComplement_1.createDecoder(binary);\n        var resultingString = decoder.parseInformation();\n        var firstPoints = pairs[0].getFinderPattern().getResultPoints();\n        var lastPoints = pairs[pairs.length - 1].getFinderPattern().getResultPoints();\n        var points = [firstPoints[0], firstPoints[1], lastPoints[0], lastPoints[1]];\n        return new Result_1.default(resultingString, null, null, points, BarcodeFormat_1.default.RSS_EXPANDED, null);\n    };\n    RSSExpandedReader.prototype.checkChecksum = function () {\n        var firstPair = this.pairs.get(0);\n        var checkCharacter = firstPair.getLeftChar();\n        var firstCharacter = firstPair.getRightChar();\n        if (firstCharacter == null) {\n            return false;\n        }\n        var checksum = firstCharacter.getChecksumPortion();\n        var s = 2;\n        for (var i = 1; i < this.pairs.size(); ++i) {\n            var currentPair = this.pairs.get(i);\n            checksum += currentPair.getLeftChar().getChecksumPortion();\n            s++;\n            var currentRightChar = currentPair.getRightChar();\n            if (currentRightChar != null) {\n                checksum += currentRightChar.getChecksumPortion();\n                s++;\n            }\n        }\n        checksum %= 211;\n        var checkCharacterValue = 211 * (s - 4) + checksum;\n        return checkCharacterValue == checkCharacter.getValue();\n    };\n    RSSExpandedReader.getNextSecondBar = function (row, initialPos) {\n        var currentPos;\n        if (row.get(initialPos)) {\n            currentPos = row.getNextUnset(initialPos);\n            currentPos = row.getNextSet(currentPos);\n        }\n        else {\n            currentPos = row.getNextSet(initialPos);\n            currentPos = row.getNextUnset(currentPos);\n        }\n        return currentPos;\n    };\n    // not private for testing\n    RSSExpandedReader.prototype.retrieveNextPair = function (row, previousPairs, rowNumber) {\n        var isOddPattern = previousPairs.length % 2 == 0;\n        if (this.startFromEven) {\n            isOddPattern = !isOddPattern;\n        }\n        var pattern;\n        var keepFinding = true;\n        var forcedOffset = -1;\n        do {\n            this.findNextPair(row, previousPairs, forcedOffset);\n            pattern = this.parseFoundFinderPattern(row, rowNumber, isOddPattern);\n            if (pattern == null) {\n                forcedOffset = RSSExpandedReader.getNextSecondBar(row, this.startEnd[0]);\n            }\n            else {\n                keepFinding = false;\n            }\n        } while (keepFinding);\n        // When stacked symbol is split over multiple rows, there's no way to guess if this pair can be last or not.\n        // boolean mayBeLast = checkPairSequence(previousPairs, pattern);\n        var leftChar = this.decodeDataCharacter(row, pattern, isOddPattern, true);\n        if (!this.isEmptyPair(previousPairs) && previousPairs[previousPairs.length - 1].mustBeLast()) {\n            throw new NotFoundException_1.default();\n        }\n        var rightChar;\n        try {\n            rightChar = this.decodeDataCharacter(row, pattern, isOddPattern, false);\n        }\n        catch (e) {\n            rightChar = null;\n            console.log(e);\n        }\n        return new ExpandedPair_1.default(leftChar, rightChar, pattern, true);\n    };\n    RSSExpandedReader.prototype.isEmptyPair = function (pairs) {\n        if (pairs.length === 0) {\n            return true;\n        }\n        return false;\n    };\n    RSSExpandedReader.prototype.findNextPair = function (row, previousPairs, forcedOffset) {\n        var counters = this.getDecodeFinderCounters();\n        counters[0] = 0;\n        counters[1] = 0;\n        counters[2] = 0;\n        counters[3] = 0;\n        var width = row.getSize();\n        var rowOffset;\n        if (forcedOffset >= 0) {\n            rowOffset = forcedOffset;\n        }\n        else if (this.isEmptyPair(previousPairs)) {\n            rowOffset = 0;\n        }\n        else {\n            var lastPair = previousPairs[previousPairs.length - 1];\n            rowOffset = lastPair.getFinderPattern().getStartEnd()[1];\n        }\n        var searchingEvenPair = previousPairs.length % 2 != 0;\n        if (this.startFromEven) {\n            searchingEvenPair = !searchingEvenPair;\n        }\n        var isWhite = false;\n        while (rowOffset < width) {\n            isWhite = !row.get(rowOffset);\n            if (!isWhite) {\n                break;\n            }\n            rowOffset++;\n        }\n        var counterPosition = 0;\n        var patternStart = rowOffset;\n        for (var x = rowOffset; x < width; x++) {\n            if (row.get(x) != isWhite) {\n                counters[counterPosition]++;\n            }\n            else {\n                if (counterPosition == 3) {\n                    if (searchingEvenPair) {\n                        RSSExpandedReader.reverseCounters(counters);\n                    }\n                    if (RSSExpandedReader.isFinderPattern(counters)) {\n                        this.startEnd[0] = patternStart;\n                        this.startEnd[1] = x;\n                        return;\n                    }\n                    if (searchingEvenPair) {\n                        RSSExpandedReader.reverseCounters(counters);\n                    }\n                    patternStart += counters[0] + counters[1];\n                    counters[0] = counters[2];\n                    counters[1] = counters[3];\n                    counters[2] = 0;\n                    counters[3] = 0;\n                    counterPosition--;\n                }\n                else {\n                    counterPosition++;\n                }\n                counters[counterPosition] = 1;\n                isWhite = !isWhite;\n            }\n        }\n        throw new NotFoundException_1.default();\n    };\n    RSSExpandedReader.reverseCounters = function (counters) {\n        var length = counters.length;\n        for (var i = 0; i < length / 2; ++i) {\n            var tmp = counters[i];\n            counters[i] = counters[length - i - 1];\n            counters[length - i - 1] = tmp;\n        }\n    };\n    RSSExpandedReader.prototype.parseFoundFinderPattern = function (row, rowNumber, oddPattern) {\n        // Actually we found elements 2-5.\n        var firstCounter;\n        var start;\n        var end;\n        if (oddPattern) {\n            // If pattern number is odd, we need to locate element 1 *before* the current block.\n            var firstElementStart = this.startEnd[0] - 1;\n            // Locate element 1\n            while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n                firstElementStart--;\n            }\n            firstElementStart++;\n            firstCounter = this.startEnd[0] - firstElementStart;\n            start = firstElementStart;\n            end = this.startEnd[1];\n        }\n        else {\n            // If pattern number is even, the pattern is reversed, so we need to locate element 1 *after* the current block.\n            start = this.startEnd[0];\n            end = row.getNextUnset(this.startEnd[1] + 1);\n            firstCounter = end - this.startEnd[1];\n        }\n        // Make 'counters' hold 1-4\n        var counters = this.getDecodeFinderCounters();\n        System_1.default.arraycopy(counters, 0, counters, 1, counters.length - 1);\n        counters[0] = firstCounter;\n        var value;\n        try {\n            value = this.parseFinderValue(counters, RSSExpandedReader.FINDER_PATTERNS);\n        }\n        catch (e) {\n            return null;\n            console.log(e);\n        }\n        // return new FinderPattern(value, new int[] { start, end }, start, end, rowNumber});\n        return new FinderPattern_1.default(value, [start, end], start, end, rowNumber);\n    };\n    RSSExpandedReader.prototype.decodeDataCharacter = function (row, pattern, isOddPattern, leftChar) {\n        var counters = this.getDataCharacterCounters();\n        for (var x = 0; x < counters.length; x++) {\n            counters[x] = 0;\n        }\n        if (leftChar) {\n            RSSExpandedReader.recordPatternInReverse(row, pattern.getStartEnd()[0], counters);\n        }\n        else {\n            RSSExpandedReader.recordPattern(row, pattern.getStartEnd()[1], counters);\n            // reverse it\n            for (var i = 0, j = counters.length - 1; i < j; i++, j--) {\n                var temp = counters[i];\n                counters[i] = counters[j];\n                counters[j] = temp;\n            }\n        } // counters[] has the pixels of the module\n        var numModules = 17; // left and right data characters have all the same length\n        var elementWidth = MathUtils_1.default.sum(new Int32Array(counters)) / numModules;\n        // Sanity check: element width for pattern and the character should match\n        var expectedElementWidth = (pattern.getStartEnd()[1] - pattern.getStartEnd()[0]) / 15.0;\n        if (Math.abs(elementWidth - expectedElementWidth) / expectedElementWidth > 0.3) {\n            throw new NotFoundException_1.default();\n        }\n        var oddCounts = this.getOddCounts();\n        var evenCounts = this.getEvenCounts();\n        var oddRoundingErrors = this.getOddRoundingErrors();\n        var evenRoundingErrors = this.getEvenRoundingErrors();\n        for (var i = 0; i < counters.length; i++) {\n            var value_1 = 1.0 * counters[i] / elementWidth;\n            var count = value_1 + 0.5; // Round\n            if (count < 1) {\n                if (value_1 < 0.3) {\n                    throw new NotFoundException_1.default();\n                }\n                count = 1;\n            }\n            else if (count > 8) {\n                if (value_1 > 8.7) {\n                    throw new NotFoundException_1.default();\n                }\n                count = 8;\n            }\n            var offset = i / 2;\n            if ((i & 0x01) == 0) {\n                oddCounts[offset] = count;\n                oddRoundingErrors[offset] = value_1 - count;\n            }\n            else {\n                evenCounts[offset] = count;\n                evenRoundingErrors[offset] = value_1 - count;\n            }\n        }\n        this.adjustOddEvenCounts(numModules);\n        var weightRowNumber = 4 * pattern.getValue() + (isOddPattern ? 0 : 2) + (leftChar ? 0 : 1) - 1;\n        var oddSum = 0;\n        var oddChecksumPortion = 0;\n        for (var i = oddCounts.length - 1; i >= 0; i--) {\n            if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n                var weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i];\n                oddChecksumPortion += oddCounts[i] * weight;\n            }\n            oddSum += oddCounts[i];\n        }\n        var evenChecksumPortion = 0;\n        // int evenSum = 0;\n        for (var i = evenCounts.length - 1; i >= 0; i--) {\n            if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n                var weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i + 1];\n                evenChecksumPortion += evenCounts[i] * weight;\n            }\n            // evenSum += evenCounts[i];\n        }\n        var checksumPortion = oddChecksumPortion + evenChecksumPortion;\n        if ((oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4) {\n            throw new NotFoundException_1.default();\n        }\n        var group = (13 - oddSum) / 2;\n        var oddWidest = RSSExpandedReader.SYMBOL_WIDEST[group];\n        var evenWidest = 9 - oddWidest;\n        var vOdd = RSSUtils_1.default.getRSSvalue(oddCounts, oddWidest, true);\n        var vEven = RSSUtils_1.default.getRSSvalue(evenCounts, evenWidest, false);\n        var tEven = RSSExpandedReader.EVEN_TOTAL_SUBSET[group];\n        var gSum = RSSExpandedReader.GSUM[group];\n        var value = vOdd * tEven + vEven + gSum;\n        return new DataCharacter_1.default(value, checksumPortion);\n    };\n    RSSExpandedReader.isNotA1left = function (pattern, isOddPattern, leftChar) {\n        // A1: pattern.getValue is 0 (A), and it's an oddPattern, and it is a left char\n        return !(pattern.getValue() == 0 && isOddPattern && leftChar);\n    };\n    RSSExpandedReader.prototype.adjustOddEvenCounts = function (numModules) {\n        var oddSum = MathUtils_1.default.sum(new Int32Array(this.getOddCounts()));\n        var evenSum = MathUtils_1.default.sum(new Int32Array(this.getEvenCounts()));\n        var incrementOdd = false;\n        var decrementOdd = false;\n        if (oddSum > 13) {\n            decrementOdd = true;\n        }\n        else if (oddSum < 4) {\n            incrementOdd = true;\n        }\n        var incrementEven = false;\n        var decrementEven = false;\n        if (evenSum > 13) {\n            decrementEven = true;\n        }\n        else if (evenSum < 4) {\n            incrementEven = true;\n        }\n        var mismatch = oddSum + evenSum - numModules;\n        var oddParityBad = (oddSum & 0x01) == 1;\n        var evenParityBad = (evenSum & 0x01) == 0;\n        if (mismatch == 1) {\n            if (oddParityBad) {\n                if (evenParityBad) {\n                    throw new NotFoundException_1.default();\n                }\n                decrementOdd = true;\n            }\n            else {\n                if (!evenParityBad) {\n                    throw new NotFoundException_1.default();\n                }\n                decrementEven = true;\n            }\n        }\n        else if (mismatch == -1) {\n            if (oddParityBad) {\n                if (evenParityBad) {\n                    throw new NotFoundException_1.default();\n                }\n                incrementOdd = true;\n            }\n            else {\n                if (!evenParityBad) {\n                    throw new NotFoundException_1.default();\n                }\n                incrementEven = true;\n            }\n        }\n        else if (mismatch == 0) {\n            if (oddParityBad) {\n                if (!evenParityBad) {\n                    throw new NotFoundException_1.default();\n                }\n                // Both bad\n                if (oddSum < evenSum) {\n                    incrementOdd = true;\n                    decrementEven = true;\n                }\n                else {\n                    decrementOdd = true;\n                    incrementEven = true;\n                }\n            }\n            else {\n                if (evenParityBad) {\n                    throw new NotFoundException_1.default();\n                }\n                // Nothing to do!\n            }\n        }\n        else {\n            throw new NotFoundException_1.default();\n        }\n        if (incrementOdd) {\n            if (decrementOdd) {\n                throw new NotFoundException_1.default();\n            }\n            RSSExpandedReader.increment(this.getOddCounts(), this.getOddRoundingErrors());\n        }\n        if (decrementOdd) {\n            RSSExpandedReader.decrement(this.getOddCounts(), this.getOddRoundingErrors());\n        }\n        if (incrementEven) {\n            if (decrementEven) {\n                throw new NotFoundException_1.default();\n            }\n            RSSExpandedReader.increment(this.getEvenCounts(), this.getOddRoundingErrors());\n        }\n        if (decrementEven) {\n            RSSExpandedReader.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());\n        }\n    };\n    RSSExpandedReader.SYMBOL_WIDEST = [7, 5, 4, 3, 1];\n    RSSExpandedReader.EVEN_TOTAL_SUBSET = [4, 20, 52, 104, 204];\n    RSSExpandedReader.GSUM = [0, 348, 1388, 2948, 3988];\n    RSSExpandedReader.FINDER_PATTERNS = [\n        Int32Array.from([1, 8, 4, 1]),\n        Int32Array.from([3, 6, 4, 1]),\n        Int32Array.from([3, 4, 6, 1]),\n        Int32Array.from([3, 2, 8, 1]),\n        Int32Array.from([2, 6, 5, 1]),\n        Int32Array.from([2, 2, 9, 1]) // F\n    ];\n    RSSExpandedReader.WEIGHTS = [\n        [1, 3, 9, 27, 81, 32, 96, 77],\n        [20, 60, 180, 118, 143, 7, 21, 63],\n        [189, 145, 13, 39, 117, 140, 209, 205],\n        [193, 157, 49, 147, 19, 57, 171, 91],\n        [62, 186, 136, 197, 169, 85, 44, 132],\n        [185, 133, 188, 142, 4, 12, 36, 108],\n        [113, 128, 173, 97, 80, 29, 87, 50],\n        [150, 28, 84, 41, 123, 158, 52, 156],\n        [46, 138, 203, 187, 139, 206, 196, 166],\n        [76, 17, 51, 153, 37, 111, 122, 155],\n        [43, 129, 176, 106, 107, 110, 119, 146],\n        [16, 48, 144, 10, 30, 90, 59, 177],\n        [109, 116, 137, 200, 178, 112, 125, 164],\n        [70, 210, 208, 202, 184, 130, 179, 115],\n        [134, 191, 151, 31, 93, 68, 204, 190],\n        [148, 22, 66, 198, 172, 94, 71, 2],\n        [6, 18, 54, 162, 64, 192, 154, 40],\n        [120, 149, 25, 75, 14, 42, 126, 167],\n        [79, 26, 78, 23, 69, 207, 199, 175],\n        [103, 98, 83, 38, 114, 131, 182, 124],\n        [161, 61, 183, 127, 170, 88, 53, 159],\n        [55, 165, 73, 8, 24, 72, 5, 15],\n        [45, 135, 194, 160, 58, 174, 100, 89]\n    ];\n    RSSExpandedReader.FINDER_PAT_A = 0;\n    RSSExpandedReader.FINDER_PAT_B = 1;\n    RSSExpandedReader.FINDER_PAT_C = 2;\n    RSSExpandedReader.FINDER_PAT_D = 3;\n    RSSExpandedReader.FINDER_PAT_E = 4;\n    RSSExpandedReader.FINDER_PAT_F = 5;\n    RSSExpandedReader.FINDER_PATTERN_SEQUENCES = [\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_C],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n    ];\n    RSSExpandedReader.MAX_PAIRS = 11;\n    return RSSExpandedReader;\n}(AbstractRSSReader_1.default));\nexports.default = RSSExpandedReader;\n//# sourceMappingURL=RSSExpandedReader.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","defineProperty","BarcodeFormat_1","MathUtils_1","NotFoundException_1","Result_1","System_1","AbstractRSSReader_1","DataCharacter_1","FinderPattern_1","RSSUtils_1","BitArrayBuilder_1","AbstractExpandedDecoderComplement_1","ExpandedPair_1","ExpandedRow_1","RSSExpandedReader","_super","_this","apply","arguments","pairs","MAX_PAIRS","rows","startEnd","decodeRow","RSSExpandedReader.prototype.decodeRow","rowNumber","row","hints","startFromEven","constructResult","decodeRow2pairs","e","reset","RSSExpandedReader.prototype.reset","RSSExpandedReader.prototype.decodeRow2pairs","push","retrieveNextPair","error","default","checkChecksum","tryStackedDecode","storeRow","ps","checkRowsBoolean","RSSExpandedReader.prototype.checkRowsBoolean","reverse","checkRows","console","log","RSSExpandedReader.prototype.checkRows","collectedRows","currentRow","e_1","_a","collectedRows_1","collectedRows_1_1","getPairs","e_1_1","return","isValidSequence","rs","RSSExpandedReader.isValidSequence","_b","FINDER_PATTERN_SEQUENCES","_c","sequence","stop_1","j","getFinderPattern","getValue","e_2_1","e_2","RSSExpandedReader.prototype.storeRow","wasReversed","insertPos","prevIsSame","nextIsSame","erow","getRowNumber","isEquivalent","isPartialRow","removePartialRows","RSSExpandedReader.prototype.removePartialRows","e_4","e_5","rows_1","rows_1_1","_d","_e","pairs_1","pairs_1_1","equals","e_5_1","e_4_1","e_3_1","e_3","RSSExpandedReader.isPartialRow","e_7","e_8","rows_2","rows_2_1","r","allFound","pairs_2","pairs_2_1","found","e_8_1","e_7_1","e_6_1","e_6","getRows","RSSExpandedReader.prototype.getRows","RSSExpandedReader.constructResult","binary","buildBitArray","resultingString","createDecoder","decoder","parseInformation","firstPoints","getResultPoints","lastPoints","points","RSS_EXPANDED","RSSExpandedReader.prototype.checkChecksum","firstPair","get","checkCharacter","getLeftChar","firstCharacter","getRightChar","checksum","getChecksumPortion","size","currentPair","currentRightChar","getNextSecondBar","RSSExpandedReader.getNextSecondBar","initialPos","currentPos","getNextUnset","getNextSet","RSSExpandedReader.prototype.retrieveNextPair","previousPairs","isOddPattern","keepFinding","forcedOffset","findNextPair","pattern","parseFoundFinderPattern","leftChar","decodeDataCharacter","isEmptyPair","mustBeLast","rightChar","RSSExpandedReader.prototype.isEmptyPair","RSSExpandedReader.prototype.findNextPair","counters","getDecodeFinderCounters","width","getSize","rowOffset","lastPair","getStartEnd","searchingEvenPair","isWhite","counterPosition","patternStart","x","reverseCounters","isFinderPattern","RSSExpandedReader.reverseCounters","tmp","RSSExpandedReader.prototype.parseFoundFinderPattern","oddPattern","firstElementStart","firstCounter","end","start","arraycopy","parseFinderValue","FINDER_PATTERNS","RSSExpandedReader.prototype.decodeDataCharacter","getDataCharacterCounters","recordPatternInReverse","recordPattern","temp","elementWidth","sum","Int32Array","numModules","expectedElementWidth","Math","abs","oddCounts","getOddCounts","evenCounts","getEvenCounts","oddRoundingErrors","getOddRoundingErrors","evenRoundingErrors","getEvenRoundingErrors","value_1","count","offset","adjustOddEvenCounts","weightRowNumber","oddChecksumPortion","oddSum","isNotA1left","weight","WEIGHTS","evenChecksumPortion","checksumPortion","group","oddWidest","SYMBOL_WIDEST","evenWidest","vOdd","getRSSvalue","vEven","EVEN_TOTAL_SUBSET","tEven","GSUM","gSum","RSSExpandedReader.isNotA1left","RSSExpandedReader.prototype.adjustOddEvenCounts","evenSum","incrementOdd","decrementOdd","incrementEven","decrementEven","mismatch","oddParityBad","evenParityBad","increment","decrement","from","FINDER_PAT_A","FINDER_PAT_B","FINDER_PAT_C","FINDER_PAT_D","FINDER_PAT_E","FINDER_PAT_F"]
}
