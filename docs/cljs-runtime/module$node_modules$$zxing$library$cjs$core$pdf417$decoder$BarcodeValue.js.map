{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$BarcodeValue.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/pdf417/decoder/BarcodeValue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$BarcodeValue\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder;\n// import com.google.zxing.pdf417.PDF417Common;\nvar PDF417Common_1 = require(\"../PDF417Common\");\n// import java.util.ArrayList;\n// import java.util.Collection;\n// import java.util.HashMap;\n// import java.util.Map;\n// import java.util.Map.Entry;\n/**\n * @author Guenther Grau\n */\nvar BarcodeValue = /** @class */ (function () {\n    function BarcodeValue() {\n        this.values = new Map();\n    }\n    /**\n     * Add an occurrence of a value\n     */\n    BarcodeValue.prototype.setValue = function (value) {\n        value = Math.trunc(value);\n        var confidence = this.values.get(value);\n        if (confidence == null) {\n            confidence = 0;\n        }\n        confidence++;\n        this.values.set(value, confidence);\n    };\n    /**\n     * Determines the maximum occurrence of a set value and returns all values which were set with this occurrence.\n     * @return an array of int, containing the values with the highest occurrence, or null, if no value was set\n     */\n    BarcodeValue.prototype.getValue = function () {\n        var e_1, _a;\n        var maxConfidence = -1;\n        var result = new Array();\n        var _loop_1 = function (key, value) {\n            var entry = {\n                getKey: function () { return key; },\n                getValue: function () { return value; },\n            };\n            if (entry.getValue() > maxConfidence) {\n                maxConfidence = entry.getValue();\n                result = [];\n                result.push(entry.getKey());\n            }\n            else if (entry.getValue() === maxConfidence) {\n                result.push(entry.getKey());\n            }\n        };\n        try {\n            for (var _b = __values(this.values.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                _loop_1(key, value);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return PDF417Common_1.default.toIntArray(result);\n    };\n    BarcodeValue.prototype.getConfidence = function (value) {\n        return this.values.get(value);\n    };\n    return BarcodeValue;\n}());\nexports.default = BarcodeValue;\n//# sourceMappingURL=BarcodeValue.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","push","error","e","Object","defineProperty","PDF417Common_1","BarcodeValue","values","Map","prototype","setValue","BarcodeValue.prototype.setValue","Math","trunc","confidence","get","set","getValue","BarcodeValue.prototype.getValue","_a","maxConfidence","result","_loop_1","key","entry","getKey","_b","entries","_c","_d","e_1_1","e_1","return","default","toIntArray","getConfidence","BarcodeValue.prototype.getConfidence"]
}
