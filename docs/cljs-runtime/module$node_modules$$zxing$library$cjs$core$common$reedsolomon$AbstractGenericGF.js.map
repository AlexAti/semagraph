{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$common$reedsolomon$AbstractGenericGF.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,gFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiB7IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,2BAA6BN,OAAA,CAAQ,sEAAR,CAY7BO,OAAAA,CAAmC,QAAS,EAAG,CAC/CA,QAASA,kBAAiB,EAAG,EAK7BA,iBAAkBC,CAAAA,SAAUC,CAAAA,GAA5B,CAAkCC,QAAS,CAACC,CAAD,CAAI,CAC3C,MAAO,KAAKC,CAAAA,QAAL,CAAcD,CAAd,CADoC,CAM/CJ,kBAAkBC,CAAAA,SAAUK,CAAAA,GAA5B,CAAkCC,QAAS,CAACH,CAAD,CAAY,CACnD,GAAU,CAAV,GAAIA,CAAJ,CACI,KAAM,KAAIL,0BAA2BS,CAAAA,OAArC;AAEJ,MAAO,KAAKC,CAAAA,QAAL,CAAcL,CAAd,CAJ4C,CAWvDJ,kBAAkBU,CAAAA,aAAlB,CAAkCC,QAAS,CAACP,CAAD,CAAYQ,CAAZ,CAAuB,CAC9D,MAAOR,EAAP,CAAWQ,CADmD,CAGlE,OAAOZ,kBA1BwC,CAAZ,EA4BvCL,QAAQa,CAAAA,OAAR,CAAkBR,MA1D2H;",
"sources":["node_modules/@zxing/library/cjs/core/common/reedsolomon/AbstractGenericGF.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$common$reedsolomon$AbstractGenericGF\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IllegalArgumentException_1 = require(\"../../IllegalArgumentException\");\n/**\n * <p>This class contains utility methods for performing mathematical operations over\n * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\n *\n * <p>Throughout this package, elements of the GF are represented as an {@code int}\n * for convenience and speed (but at the cost of memory).\n * </p>\n *\n * @author Sean Owen\n * @author David Olivier\n */\nvar AbstractGenericGF = /** @class */ (function () {\n    function AbstractGenericGF() {\n    }\n    /**\n     * @return 2 to the power of a in GF(size)\n     */\n    AbstractGenericGF.prototype.exp = function (a) {\n        return this.expTable[a];\n    };\n    /**\n     * @return base 2 log of a in GF(size)\n     */\n    AbstractGenericGF.prototype.log = function (a /*int*/) {\n        if (a === 0) {\n            throw new IllegalArgumentException_1.default();\n        }\n        return this.logTable[a];\n    };\n    /**\n     * Implements both addition and subtraction -- they are the same in GF(size).\n     *\n     * @return sum/difference of a and b\n     */\n    AbstractGenericGF.addOrSubtract = function (a /*int*/, b /*int*/) {\n        return a ^ b;\n    };\n    return AbstractGenericGF;\n}());\nexports.default = AbstractGenericGF;\n//# sourceMappingURL=AbstractGenericGF.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","IllegalArgumentException_1","AbstractGenericGF","prototype","exp","AbstractGenericGF.prototype.exp","a","expTable","log","AbstractGenericGF.prototype.log","default","logTable","addOrSubtract","AbstractGenericGF.addOrSubtract","b"]
}
