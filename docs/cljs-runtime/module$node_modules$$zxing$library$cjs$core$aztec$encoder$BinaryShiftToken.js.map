{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$aztec$encoder$BinaryShiftToken.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/aztec/encoder/BinaryShiftToken.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$aztec$encoder$BinaryShiftToken\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n* Copyright 2013 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SimpleToken_1 = require(\"./SimpleToken\");\nvar BinaryShiftToken = /** @class */ (function (_super) {\n    __extends(BinaryShiftToken, _super);\n    function BinaryShiftToken(previous, binaryShiftStart, binaryShiftByteCount) {\n        var _this = _super.call(this, previous, 0, 0) || this;\n        _this.binaryShiftStart = binaryShiftStart;\n        _this.binaryShiftByteCount = binaryShiftByteCount;\n        return _this;\n    }\n    /**\n     * @Override\n     */\n    BinaryShiftToken.prototype.appendTo = function (bitArray, text) {\n        for (var i = 0; i < this.binaryShiftByteCount; i++) {\n            if (i === 0 || (i === 31 && this.binaryShiftByteCount <= 62)) {\n                // We need a header before the first character, and before\n                // character 31 when the total byte code is <= 62\n                bitArray.appendBits(31, 5); // BINARY_SHIFT\n                if (this.binaryShiftByteCount > 62) {\n                    bitArray.appendBits(this.binaryShiftByteCount - 31, 16);\n                }\n                else if (i === 0) {\n                    // 1 <= binaryShiftByteCode <= 62\n                    bitArray.appendBits(Math.min(this.binaryShiftByteCount, 31), 5);\n                }\n                else {\n                    // 32 <= binaryShiftCount <= 62 and i == 31\n                    bitArray.appendBits(this.binaryShiftByteCount - 31, 5);\n                }\n            }\n            bitArray.appendBits(text[this.binaryShiftStart + i], 8);\n        }\n    };\n    BinaryShiftToken.prototype.addBinaryShift = function (start, byteCount) {\n        // int bitCount = (byteCount * 8) + (byteCount <= 31 ? 10 : byteCount <= 62 ? 20 : 21);\n        return new BinaryShiftToken(this, start, byteCount);\n    };\n    /**\n     * @Override\n     */\n    BinaryShiftToken.prototype.toString = function () {\n        return '<' + this.binaryShiftStart + '::' + (this.binaryShiftStart + this.binaryShiftByteCount - 1) + '>';\n    };\n    return BinaryShiftToken;\n}(SimpleToken_1.default));\nexports.default = BinaryShiftToken;\n//# sourceMappingURL=BinaryShiftToken.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","BinaryShiftToken","_super","previous","binaryShiftStart","binaryShiftByteCount","_this","call","appendTo","BinaryShiftToken.prototype.appendTo","bitArray","text","i","appendBits","Math","min","addBinaryShift","BinaryShiftToken.prototype.addBinaryShift","start","byteCount","toString","BinaryShiftToken.prototype.toString","SimpleToken_1","default"]
}
