{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$ResultPoint.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,YAAcN,OAAA,CAAQ,uEAAR,CAAlB,CACIO,QAAUP,OAAA,CAAQ,wDAAR,CAOVQ,OAAAA,CAA6B,QAAS,EAAG,CACzCA,QAASA,YAAW,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACvB,IAAKD,CAAAA,CAAL,CAASA,CACT,KAAKC,CAAAA,CAAL,CAASA,CAFc,CAI3BF,WAAYG,CAAAA,SAAUC,CAAAA,IAAtB,CAA6BC,QAAS,EAAG,CACrC,MAAO,KAAKJ,CAAAA,CADyB,CAGzCD,YAAYG,CAAAA,SAAUG,CAAAA,IAAtB,CAA6BC,QAAS,EAAG,CACrC,MAAO,KAAKL,CAAAA,CADyB,CAIzCF;WAAYG,CAAAA,SAAUK,CAAAA,MAAtB,CAA+BC,QAAS,CAACC,KAAD,CAAQ,CAC5C,MAAIA,MAAJ,WAAqBV,YAArB,CAEW,IAAKC,CAAAA,CAFhB,GACqBS,KACYT,CAAAA,CAFjC,EAEsC,IAAKC,CAAAA,CAF3C,GACqBQ,KACuCR,CAAAA,CAF5D,CAIO,CAAA,CALqC,CAQhDF,YAAYG,CAAAA,SAAUQ,CAAAA,QAAtB,CAAiCC,QAAS,EAAG,CACzC,MAAO,GAAP,CAAYb,OAAQc,CAAAA,OAAQC,CAAAA,cAAhB,CAA+B,IAAKb,CAAAA,CAApC,CAAZ,CAAqDF,OAAQc,CAAAA,OAAQC,CAAAA,cAAhB,CAA+B,IAAKZ,CAAAA,CAApC,CADZ,CAI7CF,YAAYG,CAAAA,SAAUY,CAAAA,QAAtB,CAAiCC,QAAS,EAAG,CACzC,MAAO,GAAP,CAAa,IAAKf,CAAAA,CAAlB,CAAsB,GAAtB,CAA4B,IAAKC,CAAAA,CAAjC,CAAqC,GADI,CAS7CF,YAAYiB,CAAAA,iBAAZ,CAAgCC,QAAS,CAACC,QAAD,CAAW,CAEhD,IAAIC,gBAAkB,IAAKC,CAAAA,QAAL,CAAcF,QAAA,CAAS,CAAT,CAAd,CAA2BA,QAAA,CAAS,CAAT,CAA3B,CAAtB,CACIG,eAAiB,IAAKD,CAAAA,QAAL,CAAcF,QAAA,CAAS,CAAT,CAAd,CAA2BA,QAAA,CAAS,CAAT,CAA3B,CADrB,CAEII;AAAkB,IAAKF,CAAAA,QAAL,CAAcF,QAAA,CAAS,CAAT,CAAd,CAA2BA,QAAA,CAAS,CAAT,CAA3B,CAKlBG,eAAJ,EAAsBF,eAAtB,EAAyCE,cAAzC,EAA2DC,eAA3D,EACIC,cAEA,CAFSL,QAAA,CAAS,CAAT,CAET,CADAM,eACA,CADSN,QAAA,CAAS,CAAT,CACT,CAAAO,eAAA,CAASP,QAAA,CAAS,CAAT,CAHb,EAKSI,eAAJ,EAAuBD,cAAvB,EAAyCC,eAAzC,EAA4DH,eAA5D,EACDI,cAEA,CAFSL,QAAA,CAAS,CAAT,CAET,CADAM,eACA,CADSN,QAAA,CAAS,CAAT,CACT,CAAAO,eAAA,CAASP,QAAA,CAAS,CAAT,CAHR,GAMDK,cAEA,CAFSL,QAAA,CAAS,CAAT,CAET,CADAM,eACA,CADSN,QAAA,CAAS,CAAT,CACT,CAAAO,eAAA,CAASP,QAAA,CAAS,CAAT,CARR,CAcL,IAAiD,CAAjD,CAAI,IAAKQ,CAAAA,aAAL,CAAmBF,eAAnB,CAA2BD,cAA3B,CAAmCE,eAAnC,CAAJ,CAAsD,CAClD,IAAIE;AAAOH,eACXA,gBAAA,CAASC,eACTA,gBAAA,CAASE,IAHyC,CAKtDT,QAAA,CAAS,CAAT,CAAA,CAAcM,eACdN,SAAA,CAAS,CAAT,CAAA,CAAcK,cACdL,SAAA,CAAS,CAAT,CAAA,CAAcO,eAnCkC,CA0CpD1B,YAAYqB,CAAAA,QAAZ,CAAuBQ,QAAS,CAACC,QAAD,CAAWC,QAAX,CAAqB,CACjD,MAAOjC,YAAYe,CAAAA,OAAQQ,CAAAA,QAApB,CAA6BS,QAAS7B,CAAAA,CAAtC,CAAyC6B,QAAS5B,CAAAA,CAAlD,CAAqD6B,QAAS9B,CAAAA,CAA9D,CAAiE8B,QAAS7B,CAAAA,CAA1E,CAD0C,CAMrDF,YAAY2B,CAAAA,aAAZ,CAA4BK,QAAS,CAACP,MAAD,CAASD,MAAT,CAAiBE,MAAjB,CAAyB,CAC1D,IAAIO,GAAKT,MAAOvB,CAAAA,CACZiC,OAAAA,CAAKV,MAAOtB,CAAAA,CAChB,QAASwB,MAAOzB,CAAAA,CAAhB,CAAoBgC,EAApB,GAA2BR,MAAOvB,CAAAA,CAAlC,CAAsCgC,MAAtC,GAA+CR,MAAOxB,CAAAA,CAAtD,CAA0DgC,MAA1D,GAAiET,MAAOxB,CAAAA,CAAxE,CAA4EgC,EAA5E,CAH0D,CAK9D,OAAOjC,YAtFkC,CAAZ,EAwFjCN,QAAQmB,CAAAA,OAAR,CAAkBb,MAnHkG;",
"sources":["node_modules/@zxing/library/cjs/core/ResultPoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$ResultPoint\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*namespace com.google.zxing {*/\nvar MathUtils_1 = require(\"./common/detector/MathUtils\");\nvar Float_1 = require(\"./util/Float\");\n/**\n * <p>Encapsulates a point of interest in an image containing a barcode. Typically, this\n * would be the location of a finder pattern or the corner of the barcode, for example.</p>\n *\n * @author Sean Owen\n */\nvar ResultPoint = /** @class */ (function () {\n    function ResultPoint(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    ResultPoint.prototype.getX = function () {\n        return this.x;\n    };\n    ResultPoint.prototype.getY = function () {\n        return this.y;\n    };\n    /*@Override*/\n    ResultPoint.prototype.equals = function (other) {\n        if (other instanceof ResultPoint) {\n            var otherPoint = other;\n            return this.x === otherPoint.x && this.y === otherPoint.y;\n        }\n        return false;\n    };\n    /*@Override*/\n    ResultPoint.prototype.hashCode = function () {\n        return 31 * Float_1.default.floatToIntBits(this.x) + Float_1.default.floatToIntBits(this.y);\n    };\n    /*@Override*/\n    ResultPoint.prototype.toString = function () {\n        return '(' + this.x + ',' + this.y + ')';\n    };\n    /**\n     * Orders an array of three ResultPoints in an order [A,B,C] such that AB is less than AC\n     * and BC is less than AC, and the angle between BC and BA is less than 180 degrees.\n     *\n     * @param patterns array of three {@code ResultPoint} to order\n     */\n    ResultPoint.orderBestPatterns = function (patterns) {\n        // Find distances between pattern centers\n        var zeroOneDistance = this.distance(patterns[0], patterns[1]);\n        var oneTwoDistance = this.distance(patterns[1], patterns[2]);\n        var zeroTwoDistance = this.distance(patterns[0], patterns[2]);\n        var pointA;\n        var pointB;\n        var pointC;\n        // Assume one closest to other two is B; A and C will just be guesses at first\n        if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {\n            pointB = patterns[0];\n            pointA = patterns[1];\n            pointC = patterns[2];\n        }\n        else if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {\n            pointB = patterns[1];\n            pointA = patterns[0];\n            pointC = patterns[2];\n        }\n        else {\n            pointB = patterns[2];\n            pointA = patterns[0];\n            pointC = patterns[1];\n        }\n        // Use cross product to figure out whether A and C are correct or flipped.\n        // This asks whether BC x BA has a positive z component, which is the arrangement\n        // we want for A, B, C. If it's negative, then we've got it flipped around and\n        // should swap A and C.\n        if (this.crossProductZ(pointA, pointB, pointC) < 0.0) {\n            var temp = pointA;\n            pointA = pointC;\n            pointC = temp;\n        }\n        patterns[0] = pointA;\n        patterns[1] = pointB;\n        patterns[2] = pointC;\n    };\n    /**\n     * @param pattern1 first pattern\n     * @param pattern2 second pattern\n     * @return distance between two points\n     */\n    ResultPoint.distance = function (pattern1, pattern2) {\n        return MathUtils_1.default.distance(pattern1.x, pattern1.y, pattern2.x, pattern2.y);\n    };\n    /**\n     * Returns the z component of the cross product between vectors BC and BA.\n     */\n    ResultPoint.crossProductZ = function (pointA, pointB, pointC) {\n        var bX = pointB.x;\n        var bY = pointB.y;\n        return ((pointC.x - bX) * (pointA.y - bY)) - ((pointC.y - bY) * (pointA.x - bX));\n    };\n    return ResultPoint;\n}());\nexports.default = ResultPoint;\n//# sourceMappingURL=ResultPoint.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","MathUtils_1","Float_1","ResultPoint","x","y","prototype","getX","ResultPoint.prototype.getX","getY","ResultPoint.prototype.getY","equals","ResultPoint.prototype.equals","other","hashCode","ResultPoint.prototype.hashCode","default","floatToIntBits","toString","ResultPoint.prototype.toString","orderBestPatterns","ResultPoint.orderBestPatterns","patterns","zeroOneDistance","distance","oneTwoDistance","zeroTwoDistance","pointB","pointA","pointC","crossProductZ","temp","ResultPoint.distance","pattern1","pattern2","ResultPoint.crossProductZ","bX","bY"]
}
