{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$qrcode$encoder$ByteMatrix.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/qrcode/encoder/ByteMatrix.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$qrcode$encoder$ByteMatrix\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*namespace com.google.zxing.qrcode.encoder {*/\n/*import java.util.Arrays;*/\nvar Arrays_1 = require(\"../../util/Arrays\");\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\n * JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned\n * -1, 0, and 1, I'm going to use less memory and go with bytes.\n *\n * @author dswitkin@google.com (Daniel Switkin)\n */\nvar ByteMatrix = /** @class */ (function () {\n    function ByteMatrix(width /*int*/, height /*int*/) {\n        this.width = width;\n        this.height = height;\n        var bytes = new Array(height); // [height][width]\n        for (var i = 0; i !== height; i++) {\n            bytes[i] = new Uint8Array(width);\n        }\n        this.bytes = bytes;\n    }\n    ByteMatrix.prototype.getHeight = function () {\n        return this.height;\n    };\n    ByteMatrix.prototype.getWidth = function () {\n        return this.width;\n    };\n    ByteMatrix.prototype.get = function (x /*int*/, y /*int*/) {\n        return this.bytes[y][x];\n    };\n    /**\n     * @return an internal representation as bytes, in row-major order. array[y][x] represents point (x,y)\n     */\n    ByteMatrix.prototype.getArray = function () {\n        return this.bytes;\n    };\n    // TYPESCRIPTPORT: preffer to let two methods instead of override to avoid type comparison inside\n    ByteMatrix.prototype.setNumber = function (x /*int*/, y /*int*/, value /*byte|int*/) {\n        this.bytes[y][x] = value;\n    };\n    // public set(x: number /*int*/, y: number /*int*/, value: number /*int*/): void {\n    //   bytes[y][x] = (byte) value\n    // }\n    ByteMatrix.prototype.setBoolean = function (x /*int*/, y /*int*/, value) {\n        this.bytes[y][x] = /*(byte) */ (value ? 1 : 0);\n    };\n    ByteMatrix.prototype.clear = function (value /*byte*/) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this.bytes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var aByte = _c.value;\n                Arrays_1.default.fill(aByte, value);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    ByteMatrix.prototype.equals = function (o) {\n        if (!(o instanceof ByteMatrix)) {\n            return false;\n        }\n        var other = o;\n        if (this.width !== other.width) {\n            return false;\n        }\n        if (this.height !== other.height) {\n            return false;\n        }\n        for (var y = 0, height = this.height; y < height; ++y) {\n            var bytesY = this.bytes[y];\n            var otherBytesY = other.bytes[y];\n            for (var x = 0, width = this.width; x < width; ++x) {\n                if (bytesY[x] !== otherBytesY[x]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    /*@Override*/\n    ByteMatrix.prototype.toString = function () {\n        var result = new StringBuilder_1.default(); // (2 * width * height + 2)\n        for (var y = 0, height = this.height; y < height; ++y) {\n            var bytesY = this.bytes[y];\n            for (var x = 0, width = this.width; x < width; ++x) {\n                switch (bytesY[x]) {\n                    case 0:\n                        result.append(' 0');\n                        break;\n                    case 1:\n                        result.append(' 1');\n                        break;\n                    default:\n                        result.append('  ');\n                        break;\n                }\n            }\n            result.append('\\n');\n        }\n        return result.toString();\n    };\n    return ByteMatrix;\n}());\nexports.default = ByteMatrix;\n//# sourceMappingURL=ByteMatrix.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","Arrays_1","StringBuilder_1","ByteMatrix","width","height","bytes","Array","Uint8Array","prototype","getHeight","ByteMatrix.prototype.getHeight","getWidth","ByteMatrix.prototype.getWidth","get","ByteMatrix.prototype.get","x","y","getArray","ByteMatrix.prototype.getArray","setNumber","ByteMatrix.prototype.setNumber","setBoolean","ByteMatrix.prototype.setBoolean","clear","ByteMatrix.prototype.clear","_a","_b","_c","default","fill","e_1_1","e_1","error","return","equals","ByteMatrix.prototype.equals","bytesY","otherBytesY","toString","ByteMatrix.prototype.toString","result","append"]
}
