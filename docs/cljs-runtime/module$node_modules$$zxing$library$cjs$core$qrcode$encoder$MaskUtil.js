shadow$provide.module$node_modules$$zxing$library$cjs$core$qrcode$encoder$MaskUtil=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var IllegalArgumentException_1=require("module$node_modules$$zxing$library$cjs$core$IllegalArgumentException");global=function(){function MaskUtil(){}MaskUtil.applyMaskPenaltyRule1=function(matrix){return MaskUtil.applyMaskPenaltyRule1Internal(matrix,!0)+MaskUtil.applyMaskPenaltyRule1Internal(matrix,!1)};MaskUtil.applyMaskPenaltyRule2=
function(matrix){var penalty=0,array=matrix.getArray(),width=matrix.getWidth();matrix=matrix.getHeight();for(var y=0;y<matrix-1;y++)for(var arrayY=array[y],x=0;x<width-1;x++){var value=arrayY[x];value===arrayY[x+1]&&value===array[y+1][x]&&value===array[y+1][x+1]&&penalty++}return MaskUtil.N2*penalty};MaskUtil.applyMaskPenaltyRule3=function(matrix){var numPenalties=0,array=matrix.getArray(),width=matrix.getWidth();matrix=matrix.getHeight();for(var y=0;y<matrix;y++)for(var x=0;x<width;x++){var arrayY=
array[y];x+6<width&&1===arrayY[x]&&0===arrayY[x+1]&&1===arrayY[x+2]&&1===arrayY[x+3]&&1===arrayY[x+4]&&0===arrayY[x+5]&&1===arrayY[x+6]&&(MaskUtil.isWhiteHorizontal(arrayY,x-4,x)||MaskUtil.isWhiteHorizontal(arrayY,x+7,x+11))&&numPenalties++;y+6<matrix&&1===array[y][x]&&0===array[y+1][x]&&1===array[y+2][x]&&1===array[y+3][x]&&1===array[y+4][x]&&0===array[y+5][x]&&1===array[y+6][x]&&(MaskUtil.isWhiteVertical(array,x,y-4,y)||MaskUtil.isWhiteVertical(array,x,y+7,y+11))&&numPenalties++}return numPenalties*
MaskUtil.N3};MaskUtil.isWhiteHorizontal=function(rowArray,from,to){from=Math.max(from,0);for(to=Math.min(to,rowArray.length);from<to;from++)if(1===rowArray[from])return!1;return!0};MaskUtil.isWhiteVertical=function(array,col,from,to){from=Math.max(from,0);for(to=Math.min(to,array.length);from<to;from++)if(1===array[from][col])return!1;return!0};MaskUtil.applyMaskPenaltyRule4=function(matrix){for(var numDarkCells=0,array=matrix.getArray(),width=matrix.getWidth(),height=matrix.getHeight(),y=0;y<height;y++)for(var arrayY=
array[y],x=0;x<width;x++)1===arrayY[x]&&numDarkCells++;matrix=matrix.getHeight()*matrix.getWidth();return Math.floor(10*Math.abs(2*numDarkCells-matrix)/matrix)*MaskUtil.N4};MaskUtil.getDataMaskBit=function(maskPattern,x,y){switch(maskPattern){case 0:maskPattern=y+x&1;break;case 1:maskPattern=y&1;break;case 2:maskPattern=x%3;break;case 3:maskPattern=(y+x)%3;break;case 4:maskPattern=Math.floor(y/2)+Math.floor(x/3)&1;break;case 5:maskPattern=y*x;maskPattern=(maskPattern&1)+maskPattern%3;break;case 6:maskPattern=
y*x;maskPattern=(maskPattern&1)+maskPattern%3&1;break;case 7:maskPattern=y*x%3+(y+x&1)&1;break;default:throw new IllegalArgumentException_1.default("Invalid mask pattern: "+maskPattern);}return 0===maskPattern};MaskUtil.applyMaskPenaltyRule1Internal=function(matrix,isHorizontal){var penalty=0,iLimit=isHorizontal?matrix.getHeight():matrix.getWidth(),jLimit=isHorizontal?matrix.getWidth():matrix.getHeight();matrix=matrix.getArray();for(var i=0;i<iLimit;i++){for(var numSameBitCells=0,prevBit=-1,j=0;j<
jLimit;j++){var bit=isHorizontal?matrix[i][j]:matrix[j][i];bit===prevBit?numSameBitCells++:(5<=numSameBitCells&&(penalty+=MaskUtil.N1+(numSameBitCells-5)),numSameBitCells=1,prevBit=bit)}5<=numSameBitCells&&(penalty+=MaskUtil.N1+(numSameBitCells-5))}return penalty};MaskUtil.N1=3;MaskUtil.N2=3;MaskUtil.N3=40;MaskUtil.N4=10;return MaskUtil}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$qrcode$encoder$MaskUtil.js.map
