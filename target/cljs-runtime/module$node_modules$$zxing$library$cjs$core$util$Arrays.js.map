{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$util$Arrays.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/util/Arrays.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$util$Arrays\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar System_1 = require(\"./System\");\nvar IllegalArgumentException_1 = require(\"../IllegalArgumentException\");\nvar ArrayIndexOutOfBoundsException_1 = require(\"../ArrayIndexOutOfBoundsException\");\nvar Arrays = /** @class */ (function () {\n    function Arrays() {\n    }\n    /**\n     * Assigns the specified int value to each element of the specified array\n     * of ints.\n     *\n     * @param a the array to be filled\n     * @param val the value to be stored in all elements of the array\n     */\n    Arrays.fill = function (a, val) {\n        for (var i = 0, len = a.length; i < len; i++)\n            a[i] = val;\n    };\n    /**\n     * Assigns the specified int value to each element of the specified\n     * range of the specified array of ints.  The range to be filled\n     * extends from index {@code fromIndex}, inclusive, to index\n     * {@code toIndex}, exclusive.  (If {@code fromIndex==toIndex}, the\n     * range to be filled is empty.)\n     *\n     * @param a the array to be filled\n     * @param fromIndex the index of the first element (inclusive) to be\n     *        filled with the specified value\n     * @param toIndex the index of the last element (exclusive) to be\n     *        filled with the specified value\n     * @param val the value to be stored in all elements of the array\n     * @throws IllegalArgumentException if {@code fromIndex > toIndex}\n     * @throws ArrayIndexOutOfBoundsException if {@code fromIndex < 0} or\n     *         {@code toIndex > a.length}\n     */\n    Arrays.fillWithin = function (a, fromIndex, toIndex, val) {\n        Arrays.rangeCheck(a.length, fromIndex, toIndex);\n        for (var i = fromIndex; i < toIndex; i++)\n            a[i] = val;\n    };\n    /**\n     * Checks that {@code fromIndex} and {@code toIndex} are in\n     * the range and throws an exception if they aren't.\n     */\n    Arrays.rangeCheck = function (arrayLength, fromIndex, toIndex) {\n        if (fromIndex > toIndex) {\n            throw new IllegalArgumentException_1.default('fromIndex(' + fromIndex + ') > toIndex(' + toIndex + ')');\n        }\n        if (fromIndex < 0) {\n            throw new ArrayIndexOutOfBoundsException_1.default(fromIndex);\n        }\n        if (toIndex > arrayLength) {\n            throw new ArrayIndexOutOfBoundsException_1.default(toIndex);\n        }\n    };\n    Arrays.asList = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return args;\n    };\n    Arrays.create = function (rows, cols, value) {\n        var arr = Array.from({ length: rows });\n        return arr.map(function (x) { return Array.from({ length: cols }).fill(value); });\n    };\n    Arrays.createInt32Array = function (rows, cols, value) {\n        var arr = Array.from({ length: rows });\n        return arr.map(function (x) { return Int32Array.from({ length: cols }).fill(value); });\n    };\n    Arrays.equals = function (first, second) {\n        if (!first) {\n            return false;\n        }\n        if (!second) {\n            return false;\n        }\n        if (!first.length) {\n            return false;\n        }\n        if (!second.length) {\n            return false;\n        }\n        if (first.length !== second.length) {\n            return false;\n        }\n        for (var i = 0, length_1 = first.length; i < length_1; i++) {\n            if (first[i] !== second[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Arrays.hashCode = function (a) {\n        var e_1, _a;\n        if (a === null) {\n            return 0;\n        }\n        var result = 1;\n        try {\n            for (var a_1 = __values(a), a_1_1 = a_1.next(); !a_1_1.done; a_1_1 = a_1.next()) {\n                var element = a_1_1.value;\n                result = 31 * result + element;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (a_1_1 && !a_1_1.done && (_a = a_1.return)) _a.call(a_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return result;\n    };\n    Arrays.fillUint8Array = function (a, value) {\n        for (var i = 0; i !== a.length; i++) {\n            a[i] = value;\n        }\n    };\n    Arrays.copyOf = function (original, newLength) {\n        return original.slice(0, newLength);\n    };\n    Arrays.copyOfUint8Array = function (original, newLength) {\n        if (original.length <= newLength) {\n            var newArray = new Uint8Array(newLength);\n            newArray.set(original);\n            return newArray;\n        }\n        return original.slice(0, newLength);\n    };\n    Arrays.copyOfRange = function (original, from, to) {\n        var newLength = to - from;\n        var copy = new Int32Array(newLength);\n        System_1.default.arraycopy(original, from, copy, 0, newLength);\n        return copy;\n    };\n    /*\n    * Returns the index of of the element in a sorted array or (-n-1) where n is the insertion point\n    * for the new element.\n    * Parameters:\n    *     ar - A sorted array\n    *     el - An element to search for\n    *     comparator - A comparator function. The function takes two arguments: (a, b) and returns:\n    *        a negative number  if a is less than b;\n    *        0 if a is equal to b;\n    *        a positive number of a is greater than b.\n    * The array may contain duplicate elements. If there are more than one equal elements in the array,\n    * the returned value can be the index of any one of the equal elements.\n    *\n    * http://jsfiddle.net/aryzhov/pkfst550/\n    */\n    Arrays.binarySearch = function (ar, el, comparator) {\n        if (undefined === comparator) {\n            comparator = Arrays.numberComparator;\n        }\n        var m = 0;\n        var n = ar.length - 1;\n        while (m <= n) {\n            var k = (n + m) >> 1;\n            var cmp = comparator(el, ar[k]);\n            if (cmp > 0) {\n                m = k + 1;\n            }\n            else if (cmp < 0) {\n                n = k - 1;\n            }\n            else {\n                return k;\n            }\n        }\n        return -m - 1;\n    };\n    Arrays.numberComparator = function (a, b) {\n        return a - b;\n    };\n    return Arrays;\n}());\nexports.default = Arrays;\n//# sourceMappingURL=Arrays.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","System_1","IllegalArgumentException_1","ArrayIndexOutOfBoundsException_1","Arrays","fill","Arrays.fill","a","val","len","fillWithin","Arrays.fillWithin","fromIndex","toIndex","rangeCheck","Arrays.rangeCheck","arrayLength","default","asList","Arrays.asList","args","_i","arguments","create","Arrays.create","rows","cols","Array","from","arr","map","x","createInt32Array","Arrays.createInt32Array","Int32Array","equals","Arrays.equals","first","second","length_1","hashCode","Arrays.hashCode","_a","result","a_1","a_1_1","e_1_1","e_1","error","return","fillUint8Array","Arrays.fillUint8Array","copyOf","Arrays.copyOf","original","newLength","slice","copyOfUint8Array","Arrays.copyOfUint8Array","newArray","Uint8Array","set","copyOfRange","Arrays.copyOfRange","to","copy","arraycopy","binarySearch","Arrays.binarySearch","ar","el","comparator","undefined","numberComparator","n","k","cmp","Arrays.numberComparator","b"]
}
