shadow$provide.module$node_modules$$zxing$library$cjs$core$aztec$encoder$SimpleToken=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);
d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$$zxing$library$cjs$core$aztec$encoder$Token");var Integer_1=require("module$node_modules$$zxing$library$cjs$core$util$Integer");require=function(_super){function SimpleToken(previous,value,bitCount){previous=_super.call(this,previous)||this;previous.value=value;previous.bitCount=bitCount;return previous}__extends(SimpleToken,_super);
SimpleToken.prototype.appendTo=function(bitArray,text){bitArray.appendBits(this.value,this.bitCount)};SimpleToken.prototype.add=function(value,bitCount){return new SimpleToken(this,value,bitCount)};SimpleToken.prototype.addBinaryShift=function(start,byteCount){console.warn("addBinaryShift on SimpleToken, this simply returns a copy of this token");return new SimpleToken(this,start,byteCount)};SimpleToken.prototype.toString=function(){var value=this.value&(1<<this.bitCount)-1;value|=1<<this.bitCount;
return"\x3c"+Integer_1.default.toBinaryString(value|1<<this.bitCount).substring(1)+"\x3e"};return SimpleToken}(global.default);exports.default=require}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$aztec$encoder$SimpleToken.js.map
