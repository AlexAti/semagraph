{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$util$StringEncoding.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/util/StringEncoding.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$util$StringEncoding\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnsupportedOperationException_1 = require(\"../UnsupportedOperationException\");\nvar CharacterSetECI_1 = require(\"../common/CharacterSetECI\");\n/**\n * Responsible for en/decoding strings.\n */\nvar StringEncoding = /** @class */ (function () {\n    function StringEncoding() {\n    }\n    /**\n     * Decodes some Uint8Array to a string format.\n     */\n    StringEncoding.decode = function (bytes, encoding) {\n        var encodingName = this.encodingName(encoding);\n        if (this.customDecoder) {\n            return this.customDecoder(bytes, encodingName);\n        }\n        // Increases browser support.\n        if (typeof TextDecoder === 'undefined' || this.shouldDecodeOnFallback(encodingName)) {\n            return this.decodeFallback(bytes, encodingName);\n        }\n        return new TextDecoder(encodingName).decode(bytes);\n    };\n    /**\n     * Checks if the decoding method should use the fallback for decoding\n     * once Node TextDecoder doesn't support all encoding formats.\n     *\n     * @param encodingName\n     */\n    StringEncoding.shouldDecodeOnFallback = function (encodingName) {\n        return !StringEncoding.isBrowser() && encodingName === 'ISO-8859-1';\n    };\n    /**\n     * Encodes some string into a Uint8Array.\n     */\n    StringEncoding.encode = function (s, encoding) {\n        var encodingName = this.encodingName(encoding);\n        if (this.customEncoder) {\n            return this.customEncoder(s, encodingName);\n        }\n        // Increases browser support.\n        if (typeof TextEncoder === 'undefined') {\n            return this.encodeFallback(s);\n        }\n        // TextEncoder only encodes to UTF8 by default as specified by encoding.spec.whatwg.org\n        return new TextEncoder().encode(s);\n    };\n    StringEncoding.isBrowser = function () {\n        return (typeof window !== 'undefined' && {}.toString.call(window) === '[object Window]');\n    };\n    /**\n     * Returns the string value from some encoding character set.\n     */\n    StringEncoding.encodingName = function (encoding) {\n        return typeof encoding === 'string'\n            ? encoding\n            : encoding.getName();\n    };\n    /**\n     * Returns character set from some encoding character set.\n     */\n    StringEncoding.encodingCharacterSet = function (encoding) {\n        if (encoding instanceof CharacterSetECI_1.default) {\n            return encoding;\n        }\n        return CharacterSetECI_1.default.getCharacterSetECIByName(encoding);\n    };\n    /**\n     * Runs a fallback for the native decoding funcion.\n     */\n    StringEncoding.decodeFallback = function (bytes, encoding) {\n        var characterSet = this.encodingCharacterSet(encoding);\n        if (StringEncoding.isDecodeFallbackSupported(characterSet)) {\n            var s = '';\n            for (var i = 0, length_1 = bytes.length; i < length_1; i++) {\n                var h = bytes[i].toString(16);\n                if (h.length < 2) {\n                    h = '0' + h;\n                }\n                s += '%' + h;\n            }\n            return decodeURIComponent(s);\n        }\n        if (characterSet.equals(CharacterSetECI_1.default.UnicodeBigUnmarked)) {\n            return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n        }\n        throw new UnsupportedOperationException_1.default(\"Encoding \" + this.encodingName(encoding) + \" not supported by fallback.\");\n    };\n    StringEncoding.isDecodeFallbackSupported = function (characterSet) {\n        return characterSet.equals(CharacterSetECI_1.default.UTF8) ||\n            characterSet.equals(CharacterSetECI_1.default.ISO8859_1) ||\n            characterSet.equals(CharacterSetECI_1.default.ASCII);\n    };\n    /**\n     * Runs a fallback for the native encoding funcion.\n     *\n     * @see https://stackoverflow.com/a/17192845/4367683\n     */\n    StringEncoding.encodeFallback = function (s) {\n        var encodedURIstring = btoa(unescape(encodeURIComponent(s)));\n        var charList = encodedURIstring.split('');\n        var uintArray = [];\n        for (var i = 0; i < charList.length; i++) {\n            uintArray.push(charList[i].charCodeAt(0));\n        }\n        return new Uint8Array(uintArray);\n    };\n    return StringEncoding;\n}());\nexports.default = StringEncoding;\n//# sourceMappingURL=StringEncoding.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","UnsupportedOperationException_1","CharacterSetECI_1","StringEncoding","decode","StringEncoding.decode","bytes","encoding","encodingName","customDecoder","TextDecoder","shouldDecodeOnFallback","decodeFallback","StringEncoding.shouldDecodeOnFallback","isBrowser","encode","StringEncoding.encode","s","customEncoder","TextEncoder","encodeFallback","StringEncoding.isBrowser","window","toString","call","StringEncoding.encodingName","getName","encodingCharacterSet","StringEncoding.encodingCharacterSet","default","getCharacterSetECIByName","StringEncoding.decodeFallback","characterSet","isDecodeFallbackSupported","i","length_1","length","h","decodeURIComponent","equals","UnicodeBigUnmarked","String","fromCharCode","apply","Uint16Array","buffer","StringEncoding.isDecodeFallbackSupported","UTF8","ISO8859_1","ASCII","StringEncoding.encodeFallback","charList","btoa","encodedURIstring","unescape","encodeURIComponent","split","uintArray","push","charCodeAt","Uint8Array"]
}
