shadow$provide.module$node_modules$$zxing$library$cjs$core$common$detector$WhiteRectangleDetector=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var ResultPoint_1=require("module$node_modules$$zxing$library$cjs$core$ResultPoint"),MathUtils_1=require("module$node_modules$$zxing$library$cjs$core$common$detector$MathUtils"),NotFoundException_1=require("module$node_modules$$zxing$library$cjs$core$NotFoundException");global=function(){function WhiteRectangleDetector(image,
initSize,x,y){this.image=image;this.height=image.getHeight();this.width=image.getWidth();if(void 0===initSize||null===initSize)initSize=WhiteRectangleDetector.INIT_SIZE;if(void 0===x||null===x)x=image.getWidth()/2|0;if(void 0===y||null===y)y=image.getHeight()/2|0;image=initSize/2|0;this.leftInit=x-image;this.rightInit=x+image;this.upInit=y-image;this.downInit=y+image;if(0>this.upInit||0>this.leftInit||this.downInit>=this.height||this.rightInit>=this.width)throw new NotFoundException_1.default;}WhiteRectangleDetector.prototype.detect=
function(){for(var left=this.leftInit,right=this.rightInit,up=this.upInit,down=this.downInit,sizeExceeded=!1,aBlackPointFoundOnBorder=!0,atLeastOneBlackPointFoundOnBorder=!1,atLeastOneBlackPointFoundOnRight=!1,atLeastOneBlackPointFoundOnBottom=!1,atLeastOneBlackPointFoundOnLeft=!1,atLeastOneBlackPointFoundOnTop=!1,width=this.width,height=this.height;aBlackPointFoundOnBorder;){aBlackPointFoundOnBorder=!1;for(var rightBorderNotWhite=!0;(rightBorderNotWhite||!atLeastOneBlackPointFoundOnRight)&&right<
width;)(rightBorderNotWhite=this.containsBlackPoint(up,down,right,!1))?(right++,atLeastOneBlackPointFoundOnRight=aBlackPointFoundOnBorder=!0):atLeastOneBlackPointFoundOnRight||right++;if(right>=width){sizeExceeded=!0;break}for(rightBorderNotWhite=!0;(rightBorderNotWhite||!atLeastOneBlackPointFoundOnBottom)&&down<height;)(rightBorderNotWhite=this.containsBlackPoint(left,right,down,!0))?(down++,atLeastOneBlackPointFoundOnBottom=aBlackPointFoundOnBorder=!0):atLeastOneBlackPointFoundOnBottom||down++;
if(down>=height){sizeExceeded=!0;break}for(rightBorderNotWhite=!0;(rightBorderNotWhite||!atLeastOneBlackPointFoundOnLeft)&&0<=left;)(rightBorderNotWhite=this.containsBlackPoint(up,down,left,!1))?(left--,atLeastOneBlackPointFoundOnLeft=aBlackPointFoundOnBorder=!0):atLeastOneBlackPointFoundOnLeft||left--;if(0>left){sizeExceeded=!0;break}for(rightBorderNotWhite=!0;(rightBorderNotWhite||!atLeastOneBlackPointFoundOnTop)&&0<=up;)(rightBorderNotWhite=this.containsBlackPoint(left,right,up,!0))?(up--,atLeastOneBlackPointFoundOnTop=
aBlackPointFoundOnBorder=!0):atLeastOneBlackPointFoundOnTop||up--;if(0>up){sizeExceeded=!0;break}aBlackPointFoundOnBorder&&(atLeastOneBlackPointFoundOnBorder=!0)}if(!sizeExceeded&&atLeastOneBlackPointFoundOnBorder){sizeExceeded=right-left;aBlackPointFoundOnBorder=null;for(atLeastOneBlackPointFoundOnBorder=1;null===aBlackPointFoundOnBorder&&atLeastOneBlackPointFoundOnBorder<sizeExceeded;atLeastOneBlackPointFoundOnBorder++)aBlackPointFoundOnBorder=this.getBlackPointOnSegment(left,down-atLeastOneBlackPointFoundOnBorder,
left+atLeastOneBlackPointFoundOnBorder,down);if(null==aBlackPointFoundOnBorder)throw new NotFoundException_1.default;atLeastOneBlackPointFoundOnRight=null;for(atLeastOneBlackPointFoundOnBorder=1;null===atLeastOneBlackPointFoundOnRight&&atLeastOneBlackPointFoundOnBorder<sizeExceeded;atLeastOneBlackPointFoundOnBorder++)atLeastOneBlackPointFoundOnRight=this.getBlackPointOnSegment(left,up+atLeastOneBlackPointFoundOnBorder,left+atLeastOneBlackPointFoundOnBorder,up);if(null==atLeastOneBlackPointFoundOnRight)throw new NotFoundException_1.default;
left=null;for(atLeastOneBlackPointFoundOnBorder=1;null===left&&atLeastOneBlackPointFoundOnBorder<sizeExceeded;atLeastOneBlackPointFoundOnBorder++)left=this.getBlackPointOnSegment(right,up+atLeastOneBlackPointFoundOnBorder,right-atLeastOneBlackPointFoundOnBorder,up);if(null==left)throw new NotFoundException_1.default;up=null;for(atLeastOneBlackPointFoundOnBorder=1;null===up&&atLeastOneBlackPointFoundOnBorder<sizeExceeded;atLeastOneBlackPointFoundOnBorder++)up=this.getBlackPointOnSegment(right,down-
atLeastOneBlackPointFoundOnBorder,right-atLeastOneBlackPointFoundOnBorder,down);if(null==up)throw new NotFoundException_1.default;return this.centerEdges(up,aBlackPointFoundOnBorder,left,atLeastOneBlackPointFoundOnRight)}throw new NotFoundException_1.default;};WhiteRectangleDetector.prototype.getBlackPointOnSegment=function(aX,aY,bX,bY){var dist=MathUtils_1.default.round(MathUtils_1.default.distance(aX,aY,bX,bY));bX=(bX-aX)/dist;bY=(bY-aY)/dist;for(var image=this.image,i=0;i<dist;i++){var x=MathUtils_1.default.round(aX+
i*bX),y=MathUtils_1.default.round(aY+i*bY);if(image.get(x,y))return new ResultPoint_1.default(x,y)}return null};WhiteRectangleDetector.prototype.centerEdges=function(y,z,x,t){var yi=y.getX();y=y.getY();var zi=z.getX();z=z.getY();var xi=x.getX();x=x.getY();var ti=t.getX();t=t.getY();var CORR=WhiteRectangleDetector.CORR;return yi<this.width/2?[new ResultPoint_1.default(ti-CORR,t+CORR),new ResultPoint_1.default(zi+CORR,z+CORR),new ResultPoint_1.default(xi-CORR,x-CORR),new ResultPoint_1.default(yi+CORR,
y-CORR)]:[new ResultPoint_1.default(ti+CORR,t+CORR),new ResultPoint_1.default(zi+CORR,z-CORR),new ResultPoint_1.default(xi-CORR,x+CORR),new ResultPoint_1.default(yi-CORR,y-CORR)]};WhiteRectangleDetector.prototype.containsBlackPoint=function(a,b,fixed,horizontal){var image=this.image;if(horizontal)for(;a<=b;a++){if(image.get(a,fixed))return!0}else for(;a<=b;a++)if(image.get(fixed,a))return!0;return!1};WhiteRectangleDetector.INIT_SIZE=10;WhiteRectangleDetector.CORR=1;return WhiteRectangleDetector}();
exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$common$detector$WhiteRectangleDetector.js.map
