{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$ec$ErrorCorrection.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/pdf417/decoder/ec/ErrorCorrection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$ec$ErrorCorrection\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n* Copyright 2012 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder.ec;\n// import com.google.zxing.ChecksumException;\nvar ChecksumException_1 = require(\"../../../ChecksumException\");\nvar ModulusPoly_1 = require(\"./ModulusPoly\");\nvar ModulusGF_1 = require(\"./ModulusGF\");\n/**\n * <p>PDF417 error correction implementation.</p>\n *\n * <p>This <a href=\"http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction#Example\">example</a>\n * is quite useful in understanding the algorithm.</p>\n *\n * @author Sean Owen\n * @see com.google.zxing.common.reedsolomon.ReedSolomonDecoder\n */\nvar ErrorCorrection = /** @class */ (function () {\n    function ErrorCorrection() {\n        this.field = ModulusGF_1.default.PDF417_GF;\n    }\n    /**\n     * @param received received codewords\n     * @param numECCodewords number of those codewords used for EC\n     * @param erasures location of erasures\n     * @return number of errors\n     * @throws ChecksumException if errors cannot be corrected, maybe because of too many errors\n     */\n    ErrorCorrection.prototype.decode = function (received, numECCodewords, erasures) {\n        var e_1, _a;\n        var poly = new ModulusPoly_1.default(this.field, received);\n        var S = new Int32Array(numECCodewords);\n        var error = false;\n        for (var i /*int*/ = numECCodewords; i > 0; i--) {\n            var evaluation = poly.evaluateAt(this.field.exp(i));\n            S[numECCodewords - i] = evaluation;\n            if (evaluation !== 0) {\n                error = true;\n            }\n        }\n        if (!error) {\n            return 0;\n        }\n        var knownErrors = this.field.getOne();\n        if (erasures != null) {\n            try {\n                for (var erasures_1 = __values(erasures), erasures_1_1 = erasures_1.next(); !erasures_1_1.done; erasures_1_1 = erasures_1.next()) {\n                    var erasure = erasures_1_1.value;\n                    var b = this.field.exp(received.length - 1 - erasure);\n                    // Add (1 - bx) term:\n                    var term = new ModulusPoly_1.default(this.field, new Int32Array([this.field.subtract(0, b), 1]));\n                    knownErrors = knownErrors.multiply(term);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (erasures_1_1 && !erasures_1_1.done && (_a = erasures_1.return)) _a.call(erasures_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        var syndrome = new ModulusPoly_1.default(this.field, S);\n        // syndrome = syndrome.multiply(knownErrors);\n        var sigmaOmega = this.runEuclideanAlgorithm(this.field.buildMonomial(numECCodewords, 1), syndrome, numECCodewords);\n        var sigma = sigmaOmega[0];\n        var omega = sigmaOmega[1];\n        // sigma = sigma.multiply(knownErrors);\n        var errorLocations = this.findErrorLocations(sigma);\n        var errorMagnitudes = this.findErrorMagnitudes(omega, sigma, errorLocations);\n        for (var i /*int*/ = 0; i < errorLocations.length; i++) {\n            var position = received.length - 1 - this.field.log(errorLocations[i]);\n            if (position < 0) {\n                throw ChecksumException_1.default.getChecksumInstance();\n            }\n            received[position] = this.field.subtract(received[position], errorMagnitudes[i]);\n        }\n        return errorLocations.length;\n    };\n    /**\n     *\n     * @param ModulusPoly\n     * @param a\n     * @param ModulusPoly\n     * @param b\n     * @param int\n     * @param R\n     * @throws ChecksumException\n     */\n    ErrorCorrection.prototype.runEuclideanAlgorithm = function (a, b, R) {\n        // Assume a's degree is >= b's\n        if (a.getDegree() < b.getDegree()) {\n            var temp = a;\n            a = b;\n            b = temp;\n        }\n        var rLast = a;\n        var r = b;\n        var tLast = this.field.getZero();\n        var t = this.field.getOne();\n        // Run Euclidean algorithm until r's degree is less than R/2\n        while (r.getDegree() >= Math.round(R / 2)) {\n            var rLastLast = rLast;\n            var tLastLast = tLast;\n            rLast = r;\n            tLast = t;\n            // Divide rLastLast by rLast, with quotient in q and remainder in r\n            if (rLast.isZero()) {\n                // Oops, Euclidean algorithm already terminated?\n                throw ChecksumException_1.default.getChecksumInstance();\n            }\n            r = rLastLast;\n            var q = this.field.getZero();\n            var denominatorLeadingTerm = rLast.getCoefficient(rLast.getDegree());\n            var dltInverse = this.field.inverse(denominatorLeadingTerm);\n            while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n                var degreeDiff = r.getDegree() - rLast.getDegree();\n                var scale = this.field.multiply(r.getCoefficient(r.getDegree()), dltInverse);\n                q = q.add(this.field.buildMonomial(degreeDiff, scale));\n                r = r.subtract(rLast.multiplyByMonomial(degreeDiff, scale));\n            }\n            t = q.multiply(tLast).subtract(tLastLast).negative();\n        }\n        var sigmaTildeAtZero = t.getCoefficient(0);\n        if (sigmaTildeAtZero === 0) {\n            throw ChecksumException_1.default.getChecksumInstance();\n        }\n        var inverse = this.field.inverse(sigmaTildeAtZero);\n        var sigma = t.multiply(inverse);\n        var omega = r.multiply(inverse);\n        return [sigma, omega];\n    };\n    /**\n     *\n     * @param errorLocator\n     * @throws ChecksumException\n     */\n    ErrorCorrection.prototype.findErrorLocations = function (errorLocator) {\n        // This is a direct application of Chien's search\n        var numErrors = errorLocator.getDegree();\n        var result = new Int32Array(numErrors);\n        var e = 0;\n        for (var i /*int*/ = 1; i < this.field.getSize() && e < numErrors; i++) {\n            if (errorLocator.evaluateAt(i) === 0) {\n                result[e] = this.field.inverse(i);\n                e++;\n            }\n        }\n        if (e !== numErrors) {\n            throw ChecksumException_1.default.getChecksumInstance();\n        }\n        return result;\n    };\n    ErrorCorrection.prototype.findErrorMagnitudes = function (errorEvaluator, errorLocator, errorLocations) {\n        var errorLocatorDegree = errorLocator.getDegree();\n        var formalDerivativeCoefficients = new Int32Array(errorLocatorDegree);\n        for (var i /*int*/ = 1; i <= errorLocatorDegree; i++) {\n            formalDerivativeCoefficients[errorLocatorDegree - i] =\n                this.field.multiply(i, errorLocator.getCoefficient(i));\n        }\n        var formalDerivative = new ModulusPoly_1.default(this.field, formalDerivativeCoefficients);\n        // This is directly applying Forney's Formula\n        var s = errorLocations.length;\n        var result = new Int32Array(s);\n        for (var i /*int*/ = 0; i < s; i++) {\n            var xiInverse = this.field.inverse(errorLocations[i]);\n            var numerator = this.field.subtract(0, errorEvaluator.evaluateAt(xiInverse));\n            var denominator = this.field.inverse(formalDerivative.evaluateAt(xiInverse));\n            result[i] = this.field.multiply(numerator, denominator);\n        }\n        return result;\n    };\n    return ErrorCorrection;\n}());\nexports.default = ErrorCorrection;\n//# sourceMappingURL=ErrorCorrection.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","ChecksumException_1","ModulusPoly_1","ModulusGF_1","ErrorCorrection","field","default","PDF417_GF","prototype","decode","ErrorCorrection.prototype.decode","received","numECCodewords","erasures","e_1","_a","poly","S","Int32Array","error","evaluation","evaluateAt","exp","knownErrors","getOne","erasures_1","erasures_1_1","b","term","subtract","multiply","e_1_1","return","syndrome","sigmaOmega","runEuclideanAlgorithm","buildMonomial","sigma","omega","errorLocations","findErrorLocations","errorMagnitudes","findErrorMagnitudes","position","log","getChecksumInstance","ErrorCorrection.prototype.runEuclideanAlgorithm","a","R","getDegree","temp","tLast","getZero","t","r","Math","round","rLastLast","rLast","tLastLast","isZero","q","denominatorLeadingTerm","getCoefficient","dltInverse","inverse","degreeDiff","scale","add","multiplyByMonomial","negative","sigmaTildeAtZero","ErrorCorrection.prototype.findErrorLocations","errorLocator","numErrors","result","e","getSize","ErrorCorrection.prototype.findErrorMagnitudes","errorEvaluator","errorLocatorDegree","formalDerivativeCoefficients","formalDerivative","xiInverse","numerator","denominator"]
}
