shadow$provide.module$node_modules$$zxing$library$cjs$core$common$DecoderResult=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});global=function(){function DecoderResult(rawBytes,text,byteSegments,ecLevel,structuredAppendSequenceNumber,structuredAppendParity){void 0===structuredAppendSequenceNumber&&(structuredAppendSequenceNumber=-1);void 0===structuredAppendParity&&(structuredAppendParity=-1);this.rawBytes=rawBytes;this.text=text;this.byteSegments=byteSegments;
this.ecLevel=ecLevel;this.structuredAppendSequenceNumber=structuredAppendSequenceNumber;this.structuredAppendParity=structuredAppendParity;this.numBits=void 0===rawBytes||null===rawBytes?0:8*rawBytes.length}DecoderResult.prototype.getRawBytes=function(){return this.rawBytes};DecoderResult.prototype.getNumBits=function(){return this.numBits};DecoderResult.prototype.setNumBits=function(numBits){this.numBits=numBits};DecoderResult.prototype.getText=function(){return this.text};DecoderResult.prototype.getByteSegments=
function(){return this.byteSegments};DecoderResult.prototype.getECLevel=function(){return this.ecLevel};DecoderResult.prototype.getErrorsCorrected=function(){return this.errorsCorrected};DecoderResult.prototype.setErrorsCorrected=function(errorsCorrected){this.errorsCorrected=errorsCorrected};DecoderResult.prototype.getErasures=function(){return this.erasures};DecoderResult.prototype.setErasures=function(erasures){this.erasures=erasures};DecoderResult.prototype.getOther=function(){return this.other};
DecoderResult.prototype.setOther=function(other){this.other=other};DecoderResult.prototype.hasStructuredAppend=function(){return 0<=this.structuredAppendParity&&0<=this.structuredAppendSequenceNumber};DecoderResult.prototype.getStructuredAppendParity=function(){return this.structuredAppendParity};DecoderResult.prototype.getStructuredAppendSequenceNumber=function(){return this.structuredAppendSequenceNumber};return DecoderResult}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$common$DecoderResult.js.map
