{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$common$DefaultGridSampler.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/common/DefaultGridSampler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$common$DefaultGridSampler\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*namespace com.google.zxing.common {*/\nvar GridSampler_1 = require(\"./GridSampler\");\nvar BitMatrix_1 = require(\"./BitMatrix\");\nvar PerspectiveTransform_1 = require(\"./PerspectiveTransform\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\n * @author Sean Owen\n */\nvar DefaultGridSampler = /** @class */ (function (_super) {\n    __extends(DefaultGridSampler, _super);\n    function DefaultGridSampler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /*@Override*/\n    DefaultGridSampler.prototype.sampleGrid = function (image, dimensionX /*int*/, dimensionY /*int*/, p1ToX /*float*/, p1ToY /*float*/, p2ToX /*float*/, p2ToY /*float*/, p3ToX /*float*/, p3ToY /*float*/, p4ToX /*float*/, p4ToY /*float*/, p1FromX /*float*/, p1FromY /*float*/, p2FromX /*float*/, p2FromY /*float*/, p3FromX /*float*/, p3FromY /*float*/, p4FromX /*float*/, p4FromY /*float*/) {\n        var transform = PerspectiveTransform_1.default.quadrilateralToQuadrilateral(p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY);\n        return this.sampleGridWithTransform(image, dimensionX, dimensionY, transform);\n    };\n    /*@Override*/\n    DefaultGridSampler.prototype.sampleGridWithTransform = function (image, dimensionX /*int*/, dimensionY /*int*/, transform) {\n        if (dimensionX <= 0 || dimensionY <= 0) {\n            throw new NotFoundException_1.default();\n        }\n        var bits = new BitMatrix_1.default(dimensionX, dimensionY);\n        var points = new Float32Array(2 * dimensionX);\n        for (var y = 0; y < dimensionY; y++) {\n            var max = points.length;\n            var iValue = y + 0.5;\n            for (var x = 0; x < max; x += 2) {\n                points[x] = (x / 2) + 0.5;\n                points[x + 1] = iValue;\n            }\n            transform.transformPoints(points);\n            // Quick check to see if points transformed to something inside the image\n            // sufficient to check the endpoints\n            GridSampler_1.default.checkAndNudgePoints(image, points);\n            try {\n                for (var x = 0; x < max; x += 2) {\n                    if (image.get(Math.floor(points[x]), Math.floor(points[x + 1]))) {\n                        // Black(-ish) pixel\n                        bits.set(x / 2, y);\n                    }\n                }\n            }\n            catch (aioobe /*: ArrayIndexOutOfBoundsException*/) {\n                // This feels wrong, but, sometimes if the finder patterns are misidentified, the resulting\n                // transform gets \"twisted\" such that it maps a straight line of points to a set of points\n                // whose endpoints are in bounds, but others are not. There is probably some mathematical\n                // way to detect this about the transformation that I don't know yet.\n                // This results in an ugly runtime exception despite our clever checks above -- can't have\n                // that. We could check each point's coordinates but that feels duplicative. We settle for\n                // catching and wrapping ArrayIndexOutOfBoundsException.\n                throw new NotFoundException_1.default();\n            }\n        }\n        return bits;\n    };\n    return DefaultGridSampler;\n}(GridSampler_1.default));\nexports.default = DefaultGridSampler;\n//# sourceMappingURL=DefaultGridSampler.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","GridSampler_1","BitMatrix_1","PerspectiveTransform_1","NotFoundException_1","DefaultGridSampler","_super","apply","arguments","sampleGrid","DefaultGridSampler.prototype.sampleGrid","image","dimensionX","dimensionY","p1ToX","p1ToY","p2ToX","p2ToY","p3ToX","p3ToY","p4ToX","p4ToY","p1FromX","p1FromY","p2FromX","p2FromY","p3FromX","p3FromY","p4FromX","p4FromY","transform","default","quadrilateralToQuadrilateral","sampleGridWithTransform","DefaultGridSampler.prototype.sampleGridWithTransform","bits","points","Float32Array","y","max","length","iValue","x","transformPoints","checkAndNudgePoints","get","Math","floor","set","aioobe"]
}
