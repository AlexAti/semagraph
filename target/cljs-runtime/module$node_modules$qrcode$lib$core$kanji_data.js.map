{
"version":3,
"file":"module$node_modules$qrcode$lib$core$kanji_data.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAI3GC,QAASA,UAAU,CAACC,IAAD,CAAO,CACxB,IAAKC,CAAAA,IAAL,CAAYC,IAAKC,CAAAA,KACjB,KAAKH,CAAAA,IAAL,CAAYA,IAFY,CAH1B,MAAME,KAAON,OAAA,CAAQ,0CAAR,CAAb,CACMQ,MAAQR,OAAA,CAAQ,2CAAR,CAOdG,UAAUM,CAAAA,aAAV,CAA0BC,QAAuB,CAACC,MAAD,CAAS,CACxD,MAAgB,GAAhB,CAAOA,MADiD,CAI1DR,UAAUS,CAAAA,SAAUC,CAAAA,SAApB,CAAgCC,QAAmB,EAAG,CACpD,MAAO,KAAKV,CAAAA,IAAKO,CAAAA,MADmC,CAItDR,UAAUS,CAAAA,SAAUH,CAAAA,aAApB,CAAoCM,QAAuB,EAAG,CAC5D,MAAOZ,UAAUM,CAAAA,aAAV,CAAwB,IAAKL,CAAAA,IAAKO,CAAAA,MAAlC,CADqD,CAI9DR;SAAUS,CAAAA,SAAUI,CAAAA,KAApB,CAA4BC,QAAS,CAACC,SAAD,CAAY,CAC/C,IAAIC,CAKJ,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB,IAAKf,CAAAA,IAAKO,CAAAA,MAA1B,CAAkCQ,CAAA,EAAlC,CAAuC,CACrC,IAAIC,MAAQZ,KAAMa,CAAAA,MAAN,CAAa,IAAKjB,CAAAA,IAAL,CAAUe,CAAV,CAAb,CAGZ,IAAa,KAAb,EAAIC,KAAJ,EAAgC,KAAhC,EAAuBA,KAAvB,CAEEA,KAAA,EAAS,KAFX,KAKO,IAAa,KAAb,EAAIA,KAAJ,EAAgC,KAAhC,EAAuBA,KAAvB,CAELA,KAAA,EAAS,KAFJ,KAIL,MAAUE,MAAJ,CACJ,0BADI,CACyB,IAAKlB,CAAAA,IAAL,CAAUe,CAAV,CADzB,CACwC,mCADxC,CAAN,CAOFC,KAAA,CAAkC,GAAlC,EAAWA,KAAX,GAAqB,CAArB,CAA0B,GAA1B,GAA2CA,KAA3C,CAAmD,GAAnD,CAGAF,UAAUK,CAAAA,GAAV,CAAcH,KAAd,CAAqB,EAArB,CAvBqC,CANQ,CAiCjDnB,OAAOC,CAAAA,OAAP,CAAiBC,SAtD0F;",
"sources":["node_modules/qrcode/lib/core/kanji-data.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qrcode$lib$core$kanji_data\"] = function(global,require,module,exports) {\nconst Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n\n};"],
"names":["shadow$provide","global","require","module","exports","KanjiData","data","mode","Mode","KANJI","Utils","getBitsLength","KanjiData.getBitsLength","length","prototype","getLength","KanjiData.prototype.getLength","KanjiData.prototype.getBitsLength","write","KanjiData.prototype.write","bitBuffer","i","value","toSJIS","Error","put"]
}
