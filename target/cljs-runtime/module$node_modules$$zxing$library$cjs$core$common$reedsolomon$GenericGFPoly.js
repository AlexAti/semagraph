shadow$provide.module$node_modules$$zxing$library$cjs$core$common$reedsolomon$GenericGFPoly=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var AbstractGenericGF_1=require("module$node_modules$$zxing$library$cjs$core$common$reedsolomon$AbstractGenericGF"),System_1=require("module$node_modules$$zxing$library$cjs$core$util$System"),IllegalArgumentException_1=require("module$node_modules$$zxing$library$cjs$core$IllegalArgumentException");global=function(){function GenericGFPoly(field,
coefficients){if(0===coefficients.length)throw new IllegalArgumentException_1.default;this.field=field;field=coefficients.length;if(1<field&&0===coefficients[0]){for(var firstNonZero=1;firstNonZero<field&&0===coefficients[firstNonZero];)firstNonZero++;firstNonZero===field?this.coefficients=Int32Array.from([0]):(this.coefficients=new Int32Array(field-firstNonZero),System_1.default.arraycopy(coefficients,firstNonZero,this.coefficients,0,this.coefficients.length))}else this.coefficients=coefficients}
GenericGFPoly.prototype.getCoefficients=function(){return this.coefficients};GenericGFPoly.prototype.getDegree=function(){return this.coefficients.length-1};GenericGFPoly.prototype.isZero=function(){return 0===this.coefficients[0]};GenericGFPoly.prototype.getCoefficient=function(degree){return this.coefficients[this.coefficients.length-1-degree]};GenericGFPoly.prototype.evaluateAt=function(a){if(0===a)return this.getCoefficient(0);var coefficients=this.coefficients,result;if(1===a){var i=result=0;
for(a=coefficients.length;i!==a;i++)result=AbstractGenericGF_1.default.addOrSubtract(result,coefficients[i]);return result}result=coefficients[0];var size=coefficients.length,field=this.field;for(i=1;i<size;i++)result=AbstractGenericGF_1.default.addOrSubtract(field.multiply(a,result),coefficients[i]);return result};GenericGFPoly.prototype.addOrSubtract=function(other){if(!this.field.equals(other.field))throw new IllegalArgumentException_1.default("GenericGFPolys do not have same GenericGF field");
if(this.isZero())return other;if(other.isZero())return this;var smallerCoefficients=this.coefficients;other=other.coefficients;if(smallerCoefficients.length>other.length){var temp=smallerCoefficients;smallerCoefficients=other;other=temp}temp=new Int32Array(other.length);var lengthDiff=other.length-smallerCoefficients.length;System_1.default.arraycopy(other,0,temp,0,lengthDiff);for(var i=lengthDiff;i<other.length;i++)temp[i]=AbstractGenericGF_1.default.addOrSubtract(smallerCoefficients[i-lengthDiff],
other[i]);return new GenericGFPoly(this.field,temp)};GenericGFPoly.prototype.multiply=function(other){if(!this.field.equals(other.field))throw new IllegalArgumentException_1.default("GenericGFPolys do not have same GenericGF field");if(this.isZero()||other.isZero())return this.field.getZero();var aCoefficients=this.coefficients,aLength=aCoefficients.length;other=other.coefficients;for(var bLength=other.length,product=new Int32Array(aLength+bLength-1),field=this.field,i=0;i<aLength;i++)for(var aCoeff=
aCoefficients[i],j=0;j<bLength;j++)product[i+j]=AbstractGenericGF_1.default.addOrSubtract(product[i+j],field.multiply(aCoeff,other[j]));return new GenericGFPoly(field,product)};GenericGFPoly.prototype.multiplyScalar=function(scalar){if(0===scalar)return this.field.getZero();if(1===scalar)return this;for(var size=this.coefficients.length,field=this.field,product=new Int32Array(size),coefficients=this.coefficients,i=0;i<size;i++)product[i]=field.multiply(coefficients[i],scalar);return new GenericGFPoly(field,
product)};GenericGFPoly.prototype.multiplyByMonomial=function(degree,coefficient){if(0>degree)throw new IllegalArgumentException_1.default;if(0===coefficient)return this.field.getZero();var coefficients=this.coefficients,size=coefficients.length;degree=new Int32Array(size+degree);for(var field=this.field,i=0;i<size;i++)degree[i]=field.multiply(coefficients[i],coefficient);return new GenericGFPoly(field,degree)};GenericGFPoly.prototype.divide=function(other){if(!this.field.equals(other.field))throw new IllegalArgumentException_1.default("GenericGFPolys do not have same GenericGF field");
if(other.isZero())throw new IllegalArgumentException_1.default("Divide by 0");var field=this.field,quotient=field.getZero(),remainder=this,denominatorLeadingTerm=other.getCoefficient(other.getDegree());for(denominatorLeadingTerm=field.inverse(denominatorLeadingTerm);remainder.getDegree()>=other.getDegree()&&!remainder.isZero();){var degreeDifference=remainder.getDegree()-other.getDegree(),scale=field.multiply(remainder.getCoefficient(remainder.getDegree()),denominatorLeadingTerm),term=other.multiplyByMonomial(degreeDifference,
scale);degreeDifference=field.buildMonomial(degreeDifference,scale);quotient=quotient.addOrSubtract(degreeDifference);remainder=remainder.addOrSubtract(term)}return[quotient,remainder]};GenericGFPoly.prototype.toString=function(){for(var result="",degree=this.getDegree();0<=degree;degree--){var coefficient=this.getCoefficient(degree);if(0!==coefficient){0>coefficient?(result+=" - ",coefficient=-coefficient):0<result.length&&(result+=" + ");if(0===degree||1!==coefficient)coefficient=this.field.log(coefficient),
0===coefficient?result+="1":1===coefficient?result+="a":(result+="a^",result+=coefficient);0!==degree&&(1===degree?result+="x":(result+="x^",result+=degree))}}return result};return GenericGFPoly}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$common$reedsolomon$GenericGFPoly.js.map
