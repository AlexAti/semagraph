{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$oned$UPCEReader.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/oned/UPCEReader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$oned$UPCEReader\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UPCEANReader_1 = require(\"./UPCEANReader\");\nvar StringBuilder_1 = require(\"../util/StringBuilder\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n// package com.google.zxing.oned;\n// import com.google.zxing.BarcodeFormat;\n// import com.google.zxing.FormatException;\n// import com.google.zxing.NotFoundException;\n// import com.google.zxing.common.BitArray;\n/**\n * <p>Implements decoding of the UPC-E format.</p>\n * <p><a href=\"http://www.barcodeisland.com/upce.phtml\">This</a> is a great reference for\n * UPC-E information.</p>\n *\n * @author Sean Owen\n *\n * @source https://github.com/zxing/zxing/blob/3c96923276dd5785d58eb970b6ba3f80d36a9505/core/src/main/java/com/google/zxing/oned/UPCEReader.java\n *\n * @experimental\n */\nvar UPCEReader = /** @class */ (function (_super) {\n    __extends(UPCEReader, _super);\n    function UPCEReader() {\n        var _this = _super.call(this) || this;\n        _this.decodeMiddleCounters = new Int32Array(4);\n        return _this;\n    }\n    /**\n     * @throws NotFoundException\n     */\n    // @Override\n    UPCEReader.prototype.decodeMiddle = function (row, startRange, result) {\n        var e_1, _a;\n        var counters = this.decodeMiddleCounters.map(function (x) { return x; });\n        counters[0] = 0;\n        counters[1] = 0;\n        counters[2] = 0;\n        counters[3] = 0;\n        var end = row.getSize();\n        var rowOffset = startRange[1];\n        var lgPatternFound = 0;\n        for (var x = 0; x < 6 && rowOffset < end; x++) {\n            var bestMatch = UPCEReader.decodeDigit(row, counters, rowOffset, UPCEReader.L_AND_G_PATTERNS);\n            result += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n            try {\n                for (var counters_1 = (e_1 = void 0, __values(counters)), counters_1_1 = counters_1.next(); !counters_1_1.done; counters_1_1 = counters_1.next()) {\n                    var counter = counters_1_1.value;\n                    rowOffset += counter;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (counters_1_1 && !counters_1_1.done && (_a = counters_1.return)) _a.call(counters_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (bestMatch >= 10) {\n                lgPatternFound |= 1 << (5 - x);\n            }\n        }\n        UPCEReader.determineNumSysAndCheckDigit(new StringBuilder_1.default(result), lgPatternFound);\n        return rowOffset;\n    };\n    /**\n     * @throws NotFoundException\n     */\n    // @Override\n    UPCEReader.prototype.decodeEnd = function (row, endStart) {\n        return UPCEReader.findGuardPatternWithoutCounters(row, endStart, true, UPCEReader.MIDDLE_END_PATTERN);\n    };\n    /**\n     * @throws FormatException\n     */\n    // @Override\n    UPCEReader.prototype.checkChecksum = function (s) {\n        return UPCEANReader_1.default.checkChecksum(UPCEReader.convertUPCEtoUPCA(s));\n    };\n    /**\n     * @throws NotFoundException\n     */\n    UPCEReader.determineNumSysAndCheckDigit = function (resultString, lgPatternFound) {\n        for (var numSys = 0; numSys <= 1; numSys++) {\n            for (var d = 0; d < 10; d++) {\n                if (lgPatternFound === this.NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n                    resultString.insert(0, /*(char)*/ ('0' + numSys));\n                    resultString.append(/*(char)*/ ('0' + d));\n                    return;\n                }\n            }\n        }\n        throw NotFoundException_1.default.getNotFoundInstance();\n    };\n    // @Override\n    UPCEReader.prototype.getBarcodeFormat = function () {\n        return BarcodeFormat_1.default.UPC_E;\n    };\n    /**\n     * Expands a UPC-E value back into its full, equivalent UPC-A code value.\n     *\n     * @param upce UPC-E code as string of digits\n     * @return equivalent UPC-A code as string of digits\n     */\n    UPCEReader.convertUPCEtoUPCA = function (upce) {\n        // the following line is equivalent to upce.getChars(1, 7, upceChars, 0);\n        var upceChars = upce.slice(1, 7).split('').map(function (x) { return x.charCodeAt(0); });\n        var result = new StringBuilder_1.default( /*12*/);\n        result.append(upce.charAt(0));\n        var lastChar = upceChars[5];\n        switch (lastChar) {\n            case 0:\n            case 1:\n            case 2:\n                result.appendChars(upceChars, 0, 2);\n                result.append(lastChar);\n                result.append('0000');\n                result.appendChars(upceChars, 2, 3);\n                break;\n            case 3:\n                result.appendChars(upceChars, 0, 3);\n                result.append('00000');\n                result.appendChars(upceChars, 3, 2);\n                break;\n            case 4:\n                result.appendChars(upceChars, 0, 4);\n                result.append('00000');\n                result.append(upceChars[4]);\n                break;\n            default:\n                result.appendChars(upceChars, 0, 5);\n                result.append('0000');\n                result.append(lastChar);\n                break;\n        }\n        // Only append check digit in conversion if supplied\n        if (upce.length >= 8) {\n            result.append(upce.charAt(7));\n        }\n        return result.toString();\n    };\n    /**\n     * The pattern that marks the middle, and end, of a UPC-E pattern.\n     * There is no \"second half\" to a UPC-E barcode.\n     */\n    UPCEReader.MIDDLE_END_PATTERN = Int32Array.from([1, 1, 1, 1, 1, 1]);\n    // For an UPC-E barcode, the final digit is represented by the parities used\n    // to encode the middle six digits, according to the table below.\n    //\n    //                Parity of next 6 digits\n    //    Digit   0     1     2     3     4     5\n    //       0    Even   Even  Even Odd  Odd   Odd\n    //       1    Even   Even  Odd  Even Odd   Odd\n    //       2    Even   Even  Odd  Odd  Even  Odd\n    //       3    Even   Even  Odd  Odd  Odd   Even\n    //       4    Even   Odd   Even Even Odd   Odd\n    //       5    Even   Odd   Odd  Even Even  Odd\n    //       6    Even   Odd   Odd  Odd  Even  Even\n    //       7    Even   Odd   Even Odd  Even  Odd\n    //       8    Even   Odd   Even Odd  Odd   Even\n    //       9    Even   Odd   Odd  Even Odd   Even\n    //\n    // The encoding is represented by the following array, which is a bit pattern\n    // using Odd = 0 and Even = 1. For example, 5 is represented by:\n    //\n    //              Odd Even Even Odd Odd Even\n    // in binary:\n    //                0    1    1   0   0    1   == 0x19\n    //\n    /**\n     * See {@link #L_AND_G_PATTERNS}; these values similarly represent patterns of\n     * even-odd parity encodings of digits that imply both the number system (0 or 1)\n     * used, and the check digit.\n     */\n    UPCEReader.NUMSYS_AND_CHECK_DIGIT_PATTERNS = [\n        Int32Array.from([0x38, 0x34, 0x32, 0x31, 0x2C, 0x26, 0x23, 0x2A, 0x29, 0x25]),\n        Int32Array.from([0x07, 0x0B, 0x0D, 0x0E, 0x13, 0x19, 0x1C, 0x15, 0x16, 0x1]),\n    ];\n    return UPCEReader;\n}(UPCEANReader_1.default));\nexports.default = UPCEReader;\n//# sourceMappingURL=UPCEReader.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","defineProperty","UPCEANReader_1","StringBuilder_1","NotFoundException_1","BarcodeFormat_1","UPCEReader","_super","_this","decodeMiddleCounters","Int32Array","decodeMiddle","UPCEReader.prototype.decodeMiddle","row","startRange","result","e_1","_a","counters","map","x","end","getSize","rowOffset","lgPatternFound","bestMatch","decodeDigit","L_AND_G_PATTERNS","String","fromCharCode","counters_1","counters_1_1","e_1_1","error","return","determineNumSysAndCheckDigit","default","decodeEnd","UPCEReader.prototype.decodeEnd","endStart","findGuardPatternWithoutCounters","MIDDLE_END_PATTERN","checkChecksum","UPCEReader.prototype.checkChecksum","convertUPCEtoUPCA","UPCEReader.determineNumSysAndCheckDigit","resultString","numSys","NUMSYS_AND_CHECK_DIGIT_PATTERNS","insert","append","getNotFoundInstance","getBarcodeFormat","UPCEReader.prototype.getBarcodeFormat","UPC_E","UPCEReader.convertUPCEtoUPCA","upce","upceChars","slice","split","charCodeAt","charAt","lastChar","appendChars","toString","from"]
}
