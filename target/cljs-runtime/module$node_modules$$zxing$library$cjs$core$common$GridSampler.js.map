{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$common$GridSampler.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/common/GridSampler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$common$GridSampler\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\n * Implementations of this class can, given locations of finder patterns for a QR code in an\n * image, sample the right points in the image to reconstruct the QR code, accounting for\n * perspective distortion. It is abstracted since it is relatively expensive and should be allowed\n * to take advantage of platform-specific optimized implementations, like Sun's Java Advanced\n * Imaging library, but which may not be available in other environments such as J2ME, and vice\n * versa.\n *\n * The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)}\n * with an instance of a class which implements this interface.\n *\n * @author Sean Owen\n */\nvar GridSampler = /** @class */ (function () {\n    function GridSampler() {\n    }\n    /**\n     * <p>Checks a set of points that have been transformed to sample points on an image against\n     * the image's dimensions to see if the point are even within the image.</p>\n     *\n     * <p>This method will actually \"nudge\" the endpoints back onto the image if they are found to be\n     * barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder\n     * patterns in an image where the QR Code runs all the way to the image border.</p>\n     *\n     * <p>For efficiency, the method will check points from either end of the line until one is found\n     * to be within the image. Because the set of points are assumed to be linear, this is valid.</p>\n     *\n     * @param image image into which the points should map\n     * @param points actual points in x1,y1,...,xn,yn form\n     * @throws NotFoundException if an endpoint is lies outside the image boundaries\n     */\n    GridSampler.checkAndNudgePoints = function (image, points) {\n        var width = image.getWidth();\n        var height = image.getHeight();\n        // Check and nudge points from start until we see some that are OK:\n        var nudged = true;\n        for (var offset = 0; offset < points.length && nudged; offset += 2) {\n            var x = Math.floor(points[offset]);\n            var y = Math.floor(points[offset + 1]);\n            if (x < -1 || x > width || y < -1 || y > height) {\n                throw new NotFoundException_1.default();\n            }\n            nudged = false;\n            if (x === -1) {\n                points[offset] = 0.0;\n                nudged = true;\n            }\n            else if (x === width) {\n                points[offset] = width - 1;\n                nudged = true;\n            }\n            if (y === -1) {\n                points[offset + 1] = 0.0;\n                nudged = true;\n            }\n            else if (y === height) {\n                points[offset + 1] = height - 1;\n                nudged = true;\n            }\n        }\n        // Check and nudge points from end:\n        nudged = true;\n        for (var offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {\n            var x = Math.floor(points[offset]);\n            var y = Math.floor(points[offset + 1]);\n            if (x < -1 || x > width || y < -1 || y > height) {\n                throw new NotFoundException_1.default();\n            }\n            nudged = false;\n            if (x === -1) {\n                points[offset] = 0.0;\n                nudged = true;\n            }\n            else if (x === width) {\n                points[offset] = width - 1;\n                nudged = true;\n            }\n            if (y === -1) {\n                points[offset + 1] = 0.0;\n                nudged = true;\n            }\n            else if (y === height) {\n                points[offset + 1] = height - 1;\n                nudged = true;\n            }\n        }\n    };\n    return GridSampler;\n}());\nexports.default = GridSampler;\n//# sourceMappingURL=GridSampler.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","NotFoundException_1","GridSampler","checkAndNudgePoints","GridSampler.checkAndNudgePoints","image","points","width","getWidth","height","getHeight","nudged","offset","length","x","Math","floor","y","default"]
}
