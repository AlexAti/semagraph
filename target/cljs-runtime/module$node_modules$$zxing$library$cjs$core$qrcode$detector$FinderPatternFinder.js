shadow$provide.module$node_modules$$zxing$library$cjs$core$qrcode$detector$FinderPatternFinder=function(global,require,module,exports){var __values=this&&this.__values||function(o){var s="function"===typeof Symbol&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&"number"===typeof o.length)return{next:function(){o&&i>=o.length&&(o=void 0);return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");};Object.defineProperty(exports,"__esModule",
{value:!0});var DecodeHintType_1=require("module$node_modules$$zxing$library$cjs$core$DecodeHintType"),ResultPoint_1=require("module$node_modules$$zxing$library$cjs$core$ResultPoint"),FinderPattern_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$detector$FinderPattern"),FinderPatternInfo_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$detector$FinderPatternInfo"),NotFoundException_1=require("module$node_modules$$zxing$library$cjs$core$NotFoundException");global=function(){function FinderPatternFinder(image,
resultPointCallback){this.image=image;this.resultPointCallback=resultPointCallback;this.possibleCenters=[];this.crossCheckStateCount=new Int32Array(5);this.resultPointCallback=resultPointCallback}FinderPatternFinder.prototype.getImage=function(){return this.image};FinderPatternFinder.prototype.getPossibleCenters=function(){return this.possibleCenters};FinderPatternFinder.prototype.find=function(hints){var tryHarder=null!==hints&&void 0!==hints&&void 0!==hints.get(DecodeHintType_1.default.TRY_HARDER);
hints=null!==hints&&void 0!==hints&&void 0!==hints.get(DecodeHintType_1.default.PURE_BARCODE);var image=this.image,maxI=image.getHeight(),maxJ=image.getWidth(),iSkip=Math.floor(3*maxI/(4*FinderPatternFinder.MAX_MODULES));if(iSkip<FinderPatternFinder.MIN_SKIP||tryHarder)iSkip=FinderPatternFinder.MIN_SKIP;tryHarder=!1;for(var stateCount=new Int32Array(5),i=iSkip-1;i<maxI&&!tryHarder;i+=iSkip){stateCount[0]=0;stateCount[1]=0;stateCount[2]=0;stateCount[3]=0;for(var currentState=stateCount[4]=0,j=0;j<
maxJ;j++)image.get(j,i)?(1===(currentState&1)&&currentState++,stateCount[currentState]++):0===(currentState&1)?4===currentState?FinderPatternFinder.foundPatternCross(stateCount)?(currentState=this.handlePossibleCenter(stateCount,i,j,hints),!0===currentState?(iSkip=2,!0===this.hasSkipped?tryHarder=this.haveMultiplyConfirmedCenters():(currentState=this.findRowSkip(),currentState>stateCount[2]&&(i+=currentState-stateCount[2]-iSkip,j=maxJ-1)),currentState=0,stateCount[0]=0,stateCount[1]=0,stateCount[2]=
0,stateCount[3]=0,stateCount[4]=0):(stateCount[0]=stateCount[2],stateCount[1]=stateCount[3],stateCount[2]=stateCount[4],stateCount[3]=1,stateCount[4]=0,currentState=3)):(stateCount[0]=stateCount[2],stateCount[1]=stateCount[3],stateCount[2]=stateCount[4],stateCount[3]=1,stateCount[4]=0,currentState=3):stateCount[++currentState]++:stateCount[currentState]++;FinderPatternFinder.foundPatternCross(stateCount)&&(currentState=this.handlePossibleCenter(stateCount,i,maxJ,hints),!0===currentState&&(iSkip=stateCount[0],
this.hasSkipped&&(tryHarder=this.haveMultiplyConfirmedCenters())))}hints=this.selectBestPatterns();ResultPoint_1.default.orderBestPatterns(hints);return new FinderPatternInfo_1.default(hints)};FinderPatternFinder.centerFromEnd=function(stateCount,end){return end-stateCount[4]-stateCount[3]-stateCount[2]/2};FinderPatternFinder.foundPatternCross=function(stateCount){for(var totalModuleSize=0,i=0;5>i;i++){var count=stateCount[i];if(0===count)return!1;totalModuleSize+=count}if(7>totalModuleSize)return!1;
totalModuleSize/=7;i=totalModuleSize/2;return Math.abs(totalModuleSize-stateCount[0])<i&&Math.abs(totalModuleSize-stateCount[1])<i&&Math.abs(3*totalModuleSize-stateCount[2])<3*i&&Math.abs(totalModuleSize-stateCount[3])<i&&Math.abs(totalModuleSize-stateCount[4])<i};FinderPatternFinder.prototype.getCrossCheckStateCount=function(){var crossCheckStateCount=this.crossCheckStateCount;crossCheckStateCount[0]=0;crossCheckStateCount[1]=0;crossCheckStateCount[2]=0;crossCheckStateCount[3]=0;crossCheckStateCount[4]=
0;return crossCheckStateCount};FinderPatternFinder.prototype.crossCheckDiagonal=function(startI,centerJ,maxCount,originalStateCountTotal){for(var stateCount=this.getCrossCheckStateCount(),i=0,image=this.image;startI>=i&&centerJ>=i&&image.get(centerJ-i,startI-i);)stateCount[2]++,i++;if(startI<i||centerJ<i)return!1;for(;startI>=i&&centerJ>=i&&!image.get(centerJ-i,startI-i)&&stateCount[1]<=maxCount;)stateCount[1]++,i++;if(startI<i||centerJ<i||stateCount[1]>maxCount)return!1;for(;startI>=i&&centerJ>=
i&&image.get(centerJ-i,startI-i)&&stateCount[0]<=maxCount;)stateCount[0]++,i++;if(stateCount[0]>maxCount)return!1;var maxI=image.getHeight(),maxJ=image.getWidth();for(i=1;startI+i<maxI&&centerJ+i<maxJ&&image.get(centerJ+i,startI+i);)stateCount[2]++,i++;if(startI+i>=maxI||centerJ+i>=maxJ)return!1;for(;startI+i<maxI&&centerJ+i<maxJ&&!image.get(centerJ+i,startI+i)&&stateCount[3]<maxCount;)stateCount[3]++,i++;if(startI+i>=maxI||centerJ+i>=maxJ||stateCount[3]>=maxCount)return!1;for(;startI+i<maxI&&centerJ+
i<maxJ&&image.get(centerJ+i,startI+i)&&stateCount[4]<maxCount;)stateCount[4]++,i++;return stateCount[4]>=maxCount?!1:Math.abs(stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4]-originalStateCountTotal)<2*originalStateCountTotal&&FinderPatternFinder.foundPatternCross(stateCount)};FinderPatternFinder.prototype.crossCheckVertical=function(startI,centerJ,maxCount,originalStateCountTotal){for(var image=this.image,maxI=image.getHeight(),stateCount=this.getCrossCheckStateCount(),i=startI;0<=
i&&image.get(centerJ,i);)stateCount[2]++,i--;if(0>i)return NaN;for(;0<=i&&!image.get(centerJ,i)&&stateCount[1]<=maxCount;)stateCount[1]++,i--;if(0>i||stateCount[1]>maxCount)return NaN;for(;0<=i&&image.get(centerJ,i)&&stateCount[0]<=maxCount;)stateCount[0]++,i--;if(stateCount[0]>maxCount)return NaN;for(i=startI+1;i<maxI&&image.get(centerJ,i);)stateCount[2]++,i++;if(i===maxI)return NaN;for(;i<maxI&&!image.get(centerJ,i)&&stateCount[3]<maxCount;)stateCount[3]++,i++;if(i===maxI||stateCount[3]>=maxCount)return NaN;
for(;i<maxI&&image.get(centerJ,i)&&stateCount[4]<maxCount;)stateCount[4]++,i++;return stateCount[4]>=maxCount||5*Math.abs(stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4]-originalStateCountTotal)>=2*originalStateCountTotal?NaN:FinderPatternFinder.foundPatternCross(stateCount)?FinderPatternFinder.centerFromEnd(stateCount,i):NaN};FinderPatternFinder.prototype.crossCheckHorizontal=function(startJ,centerI,maxCount,originalStateCountTotal){for(var image=this.image,maxJ=image.getWidth(),
stateCount=this.getCrossCheckStateCount(),j=startJ;0<=j&&image.get(j,centerI);)stateCount[2]++,j--;if(0>j)return NaN;for(;0<=j&&!image.get(j,centerI)&&stateCount[1]<=maxCount;)stateCount[1]++,j--;if(0>j||stateCount[1]>maxCount)return NaN;for(;0<=j&&image.get(j,centerI)&&stateCount[0]<=maxCount;)stateCount[0]++,j--;if(stateCount[0]>maxCount)return NaN;for(j=startJ+1;j<maxJ&&image.get(j,centerI);)stateCount[2]++,j++;if(j===maxJ)return NaN;for(;j<maxJ&&!image.get(j,centerI)&&stateCount[3]<maxCount;)stateCount[3]++,
j++;if(j===maxJ||stateCount[3]>=maxCount)return NaN;for(;j<maxJ&&image.get(j,centerI)&&stateCount[4]<maxCount;)stateCount[4]++,j++;return stateCount[4]>=maxCount||5*Math.abs(stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4]-originalStateCountTotal)>=originalStateCountTotal?NaN:FinderPatternFinder.foundPatternCross(stateCount)?FinderPatternFinder.centerFromEnd(stateCount,j):NaN};FinderPatternFinder.prototype.handlePossibleCenter=function(stateCount,i,j,pureBarcode){var stateCountTotal=
stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4];j=FinderPatternFinder.centerFromEnd(stateCount,j);i=this.crossCheckVertical(i,Math.floor(j),stateCount[2],stateCountTotal);if(!(isNaN(i)||(j=this.crossCheckHorizontal(Math.floor(j),Math.floor(i),stateCount[2],stateCountTotal),isNaN(j)||pureBarcode&&!this.crossCheckDiagonal(Math.floor(i),Math.floor(j),stateCount[2],stateCountTotal)))){pureBarcode=stateCountTotal/7;stateCountTotal=!1;stateCount=this.possibleCenters;for(var index=
0,length_1=stateCount.length;index<length_1;index++){var center=stateCount[index];if(center.aboutEquals(pureBarcode,i,j)){stateCount[index]=center.combineEstimate(i,j,pureBarcode);stateCountTotal=!0;break}}stateCountTotal||(j=new FinderPattern_1.default(j,i,pureBarcode),stateCount.push(j),null!==this.resultPointCallback&&void 0!==this.resultPointCallback&&this.resultPointCallback.foundPossibleResultPoint(j));return!0}return!1};FinderPatternFinder.prototype.findRowSkip=function(){var _a;if(1>=this.possibleCenters.length)return 0;
var firstConfirmedCenter=null;try{for(var _b=__values(this.possibleCenters),_c=_b.next();!_c.done;_c=_b.next()){var center=_c.value;if(center.getCount()>=FinderPatternFinder.CENTER_QUORUM)if(null==firstConfirmedCenter)firstConfirmedCenter=center;else return this.hasSkipped=!0,Math.floor((Math.abs(firstConfirmedCenter.getX()-center.getX())-Math.abs(firstConfirmedCenter.getY()-center.getY()))/2)}}catch(e_1_1){var e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&_a.call(_b)}finally{if(e_1)throw e_1.error;
}}return 0};FinderPatternFinder.prototype.haveMultiplyConfirmedCenters=function(){var _a,_b,confirmedCount=0,totalModuleSize=0,max=this.possibleCenters.length;try{for(var _c=__values(this.possibleCenters),_d=_c.next();!_d.done;_d=_c.next()){var pattern=_d.value;pattern.getCount()>=FinderPatternFinder.CENTER_QUORUM&&(confirmedCount++,totalModuleSize+=pattern.getEstimatedModuleSize())}}catch(e_2_1){var e_2={error:e_2_1}}finally{try{_d&&!_d.done&&(_a=_c.return)&&_a.call(_c)}finally{if(e_2)throw e_2.error;
}}if(3>confirmedCount)return!1;e_2=totalModuleSize/max;_a=0;try{for(var _e=__values(this.possibleCenters),_f=_e.next();!_f.done;_f=_e.next())pattern=_f.value,_a+=Math.abs(pattern.getEstimatedModuleSize()-e_2)}catch(e_3_1){var e_3={error:e_3_1}}finally{try{_f&&!_f.done&&(_b=_e.return)&&_b.call(_e)}finally{if(e_3)throw e_3.error;}}return _a<=.05*totalModuleSize};FinderPatternFinder.prototype.selectBestPatterns=function(){var _a,_b,startSize=this.possibleCenters.length;if(3>startSize)throw new NotFoundException_1.default;
var possibleCenters=this.possibleCenters;if(3<startSize){var totalModuleSize=0,square=0;try{for(var _c=__values(this.possibleCenters),_d=_c.next();!_d.done;_d=_c.next()){var size=_d.value.getEstimatedModuleSize();totalModuleSize+=size;square+=size*size}}catch(e_4_1){var e_4={error:e_4_1}}finally{try{_d&&!_d.done&&(_a=_c.return)&&_a.call(_c)}finally{if(e_4)throw e_4.error;}}var average=totalModuleSize/startSize;e_4=Math.sqrt(square/startSize-average*average);possibleCenters.sort(function(center1,center2){center2=
Math.abs(center2.getEstimatedModuleSize()-average);center1=Math.abs(center1.getEstimatedModuleSize()-average);return center2<center1?-1:center2>center1?1:0});e_4=Math.max(.2*average,e_4);for(_a=0;_a<possibleCenters.length&&3<possibleCenters.length;_a++)Math.abs(possibleCenters[_a].getEstimatedModuleSize()-average)>e_4&&(possibleCenters.splice(_a,1),_a--)}if(3<possibleCenters.length){totalModuleSize=0;try{for(var possibleCenters_1=__values(possibleCenters),possibleCenters_1_1=possibleCenters_1.next();!possibleCenters_1_1.done;possibleCenters_1_1=
possibleCenters_1.next())totalModuleSize+=possibleCenters_1_1.value.getEstimatedModuleSize()}catch(e_5_1){var e_5={error:e_5_1}}finally{try{possibleCenters_1_1&&!possibleCenters_1_1.done&&(_b=possibleCenters_1.return)&&_b.call(possibleCenters_1)}finally{if(e_5)throw e_5.error;}}average=totalModuleSize/possibleCenters.length;possibleCenters.sort(function(center1,center2){return center2.getCount()===center1.getCount()?(center2=Math.abs(center2.getEstimatedModuleSize()-average),center1=Math.abs(center1.getEstimatedModuleSize()-
average),center2<center1?1:center2>center1?-1:0):center2.getCount()-center1.getCount()});possibleCenters.splice(3)}return[possibleCenters[0],possibleCenters[1],possibleCenters[2]]};FinderPatternFinder.CENTER_QUORUM=2;FinderPatternFinder.MIN_SKIP=3;FinderPatternFinder.MAX_MODULES=57;return FinderPatternFinder}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$qrcode$detector$FinderPatternFinder.js.map
