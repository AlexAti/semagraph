shadow$provide.module$node_modules$$zxing$library$cjs$core$qrcode$QRCodeReader=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var BarcodeFormat_1=require("module$node_modules$$zxing$library$cjs$core$BarcodeFormat"),BitMatrix_1=require("module$node_modules$$zxing$library$cjs$core$common$BitMatrix"),DecodeHintType_1=require("module$node_modules$$zxing$library$cjs$core$DecodeHintType"),NotFoundException_1=require("module$node_modules$$zxing$library$cjs$core$NotFoundException"),
Result_1=require("module$node_modules$$zxing$library$cjs$core$Result"),ResultMetadataType_1=require("module$node_modules$$zxing$library$cjs$core$ResultMetadataType"),Decoder_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$decoder$Decoder"),QRCodeDecoderMetaData_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$decoder$QRCodeDecoderMetaData"),Detector_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$detector$Detector");global=function(){function QRCodeReader(){this.decoder=
new Decoder_1.default}QRCodeReader.prototype.getDecoder=function(){return this.decoder};QRCodeReader.prototype.decode=function(image,hints){void 0!==hints&&null!==hints&&void 0!==hints.get(DecodeHintType_1.default.PURE_BARCODE)?(image=QRCodeReader.extractPureBits(image.getBlackMatrix()),hints=this.decoder.decodeBitMatrix(image,hints),image=QRCodeReader.NO_POINTS):(image=(new Detector_1.default(image.getBlackMatrix())).detect(hints),hints=this.decoder.decodeBitMatrix(image.getBits(),hints),image=image.getPoints());
hints.getOther()instanceof QRCodeDecoderMetaData_1.default&&hints.getOther().applyMirroredCorrection(image);image=new Result_1.default(hints.getText(),hints.getRawBytes(),void 0,image,BarcodeFormat_1.default.QR_CODE,void 0);var byteSegments=hints.getByteSegments();null!==byteSegments&&image.putMetadata(ResultMetadataType_1.default.BYTE_SEGMENTS,byteSegments);byteSegments=hints.getECLevel();null!==byteSegments&&image.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL,byteSegments);hints.hasStructuredAppend()&&
(image.putMetadata(ResultMetadataType_1.default.STRUCTURED_APPEND_SEQUENCE,hints.getStructuredAppendSequenceNumber()),image.putMetadata(ResultMetadataType_1.default.STRUCTURED_APPEND_PARITY,hints.getStructuredAppendParity()));return image};QRCodeReader.prototype.reset=function(){};QRCodeReader.extractPureBits=function(image){var leftTopBlack=image.getTopLeftOnBit(),rightBottomBlack=image.getBottomRightOnBit();if(null===leftTopBlack||null===rightBottomBlack)throw new NotFoundException_1.default;var moduleSize=
this.moduleSize(leftTopBlack,image),top=leftTopBlack[1],bottom=rightBottomBlack[1];leftTopBlack=leftTopBlack[0];var right=rightBottomBlack[0];if(leftTopBlack>=right||top>=bottom)throw new NotFoundException_1.default;if(bottom-top!==right-leftTopBlack&&(right=leftTopBlack+(bottom-top),right>=image.getWidth()))throw new NotFoundException_1.default;rightBottomBlack=Math.round((right-leftTopBlack+1)/moduleSize);var matrixHeight=Math.round((bottom-top+1)/moduleSize);if(0>=rightBottomBlack||0>=matrixHeight)throw new NotFoundException_1.default;
if(matrixHeight!==rightBottomBlack)throw new NotFoundException_1.default;var nudge=Math.floor(moduleSize/2);top+=nudge;leftTopBlack+=nudge;right=leftTopBlack+Math.floor((rightBottomBlack-1)*moduleSize)-right;if(0<right){if(right>nudge)throw new NotFoundException_1.default;leftTopBlack-=right}bottom=top+Math.floor((matrixHeight-1)*moduleSize)-bottom;if(0<bottom){if(bottom>nudge)throw new NotFoundException_1.default;top-=bottom}bottom=new BitMatrix_1.default(rightBottomBlack,matrixHeight);for(nudge=
0;nudge<matrixHeight;nudge++){right=top+Math.floor(nudge*moduleSize);for(var x=0;x<rightBottomBlack;x++)image.get(leftTopBlack+Math.floor(x*moduleSize),right)&&bottom.set(x,nudge)}return bottom};QRCodeReader.moduleSize=function(leftTopBlack,image){for(var height=image.getHeight(),width=image.getWidth(),x=leftTopBlack[0],y=leftTopBlack[1],inBlack=!0,transitions=0;x<width&&y<height;){if(inBlack!==image.get(x,y)){if(5===++transitions)break;inBlack=!inBlack}x++;y++}if(x===width||y===height)throw new NotFoundException_1.default;
return(x-leftTopBlack[0])/7};QRCodeReader.NO_POINTS=[];return QRCodeReader}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$qrcode$QRCodeReader.js.map
