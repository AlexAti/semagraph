{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$DetectionResultColumn.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/pdf417/decoder/DetectionResultColumn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$DetectionResultColumn\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder;\n// import java.util.Formatter;\nvar Formatter_1 = require(\"../../util/Formatter\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\n/**\n * @author Guenther Grau\n */\nvar DetectionResultColumn = /** @class */ (function () {\n    function DetectionResultColumn(boundingBox) {\n        this.boundingBox = new BoundingBox_1.default(boundingBox);\n        // this.codewords = new Codeword[boundingBox.getMaxY() - boundingBox.getMinY() + 1];\n        this.codewords = new Array(boundingBox.getMaxY() - boundingBox.getMinY() + 1);\n    }\n    /*final*/ DetectionResultColumn.prototype.getCodewordNearby = function (imageRow) {\n        var codeword = this.getCodeword(imageRow);\n        if (codeword != null) {\n            return codeword;\n        }\n        for (var i = 1; i < DetectionResultColumn.MAX_NEARBY_DISTANCE; i++) {\n            var nearImageRow = this.imageRowToCodewordIndex(imageRow) - i;\n            if (nearImageRow >= 0) {\n                codeword = this.codewords[nearImageRow];\n                if (codeword != null) {\n                    return codeword;\n                }\n            }\n            nearImageRow = this.imageRowToCodewordIndex(imageRow) + i;\n            if (nearImageRow < this.codewords.length) {\n                codeword = this.codewords[nearImageRow];\n                if (codeword != null) {\n                    return codeword;\n                }\n            }\n        }\n        return null;\n    };\n    /*final int*/ DetectionResultColumn.prototype.imageRowToCodewordIndex = function (imageRow) {\n        return imageRow - this.boundingBox.getMinY();\n    };\n    /*final void*/ DetectionResultColumn.prototype.setCodeword = function (imageRow, codeword) {\n        this.codewords[this.imageRowToCodewordIndex(imageRow)] = codeword;\n    };\n    /*final*/ DetectionResultColumn.prototype.getCodeword = function (imageRow) {\n        return this.codewords[this.imageRowToCodewordIndex(imageRow)];\n    };\n    /*final*/ DetectionResultColumn.prototype.getBoundingBox = function () {\n        return this.boundingBox;\n    };\n    /*final*/ DetectionResultColumn.prototype.getCodewords = function () {\n        return this.codewords;\n    };\n    // @Override\n    DetectionResultColumn.prototype.toString = function () {\n        var e_1, _a;\n        var formatter = new Formatter_1.default();\n        var row = 0;\n        try {\n            for (var _b = __values(this.codewords), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var codeword = _c.value;\n                if (codeword == null) {\n                    formatter.format('%3d:    |   %n', row++);\n                    continue;\n                }\n                formatter.format('%3d: %3d|%3d%n', row++, codeword.getRowNumber(), codeword.getValue());\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return formatter.toString();\n    };\n    DetectionResultColumn.MAX_NEARBY_DISTANCE = 5;\n    return DetectionResultColumn;\n}());\nexports.default = DetectionResultColumn;\n//# sourceMappingURL=DetectionResultColumn.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","Formatter_1","BoundingBox_1","DetectionResultColumn","boundingBox","default","codewords","Array","getMaxY","getMinY","prototype","getCodewordNearby","DetectionResultColumn.prototype.getCodewordNearby","imageRow","codeword","getCodeword","MAX_NEARBY_DISTANCE","nearImageRow","imageRowToCodewordIndex","DetectionResultColumn.prototype.imageRowToCodewordIndex","setCodeword","DetectionResultColumn.prototype.setCodeword","DetectionResultColumn.prototype.getCodeword","getBoundingBox","DetectionResultColumn.prototype.getBoundingBox","getCodewords","DetectionResultColumn.prototype.getCodewords","toString","DetectionResultColumn.prototype.toString","_a","formatter","row","_b","_c","format","getRowNumber","getValue","e_1_1","e_1","error","return"]
}
