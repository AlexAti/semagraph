{
"version":3,
"file":"module$node_modules$qrcode$lib$core$bit_buffer.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3GC,QAASA,UAAU,EAAG,CACpB,IAAKC,CAAAA,MAAL,CAAc,EACd,KAAKC,CAAAA,MAAL,CAAc,CAFM,CAKtBF,SAAUG,CAAAA,SAAV,CAAsB,CAEpBC,IAAKA,QAAS,CAACC,KAAD,CAAQ,CAEpB,MAA6D,EAA7D,IAAS,IAAKJ,CAAAA,MAAL,CADQK,IAAKC,CAAAA,KAALC,CAAWH,KAAXG,CAAmB,CAAnBA,CACR,CAAT,GAAoC,CAApC,CAAwCH,KAAxC,CAAgD,CAAhD,CAAsD,CAAtD,CAFoB,CAFF,CAOpBI,IAAKA,QAAS,CAACC,GAAD,CAAMR,MAAN,CAAc,CAC1B,IAAK,IAAIS,EAAI,CAAb,CAAgBA,CAAhB,CAAoBT,MAApB,CAA4BS,CAAA,EAA5B,CACE,IAAKC,CAAAA,MAAL,CAAiD,CAAjD,IAAcF,GAAd,GAAuBR,MAAvB,CAAgCS,CAAhC,CAAoC,CAApC,CAA0C,CAA1C,EAFwB,CAPR,CAapBE,gBAAiBA,QAAS,EAAG,CAC3B,MAAO,KAAKX,CAAAA,MADe,CAbT,CAiBpBU,OAAQA,QAAS,CAACE,GAAD,CAAM,CACrB,MAAMN,SAAWF,IAAKC,CAAAA,KAAL,CAAW,IAAKL,CAAAA,MAAhB,CAAyB,CAAzB,CACb,KAAKD,CAAAA,MAAOC,CAAAA,MAAhB,EAA0BM,QAA1B,EACE,IAAKP,CAAAA,MAAOc,CAAAA,IAAZ,CAAiB,CAAjB,CAGED;GAAJ,GACE,IAAKb,CAAAA,MAAL,CAAYO,QAAZ,CADF,EAC4B,GAD5B,GACsC,IAAKN,CAAAA,MAD3C,CACoD,CADpD,CAIA,KAAKA,CAAAA,MAAL,EAVqB,CAjBH,CA+BtBJ,OAAOC,CAAAA,OAAP,CAAiBC,SArC0F;",
"sources":["node_modules/qrcode/lib/core/bit-buffer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$qrcode$lib$core$bit_buffer\"] = function(global,require,module,exports) {\nfunction BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n\n};"],
"names":["shadow$provide","global","require","module","exports","BitBuffer","buffer","length","prototype","get","index","Math","floor","bufIndex","put","num","i","putBit","getLengthInBits","bit","push"]
}
