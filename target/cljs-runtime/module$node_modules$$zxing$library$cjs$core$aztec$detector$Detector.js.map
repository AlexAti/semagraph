{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$aztec$detector$Detector.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/aztec/detector/Detector.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$aztec$detector$Detector\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n * Copyright 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point = void 0;\nvar ResultPoint_1 = require(\"../../ResultPoint\");\nvar AztecDetectorResult_1 = require(\"../AztecDetectorResult\");\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\nvar WhiteRectangleDetector_1 = require(\"../../common/detector/WhiteRectangleDetector\");\nvar GenericGF_1 = require(\"../../common/reedsolomon/GenericGF\");\nvar ReedSolomonDecoder_1 = require(\"../../common/reedsolomon/ReedSolomonDecoder\");\nvar NotFoundException_1 = require(\"../../NotFoundException\");\nvar GridSamplerInstance_1 = require(\"../../common/GridSamplerInstance\");\nvar Integer_1 = require(\"../../util/Integer\");\nvar Point = /** @class */ (function () {\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    Point.prototype.toResultPoint = function () {\n        return new ResultPoint_1.default(this.getX(), this.getY());\n    };\n    Point.prototype.getX = function () {\n        return this.x;\n    };\n    Point.prototype.getY = function () {\n        return this.y;\n    };\n    return Point;\n}());\nexports.Point = Point;\n/**\n * Encapsulates logic that can detect an Aztec Code in an image, even if the Aztec Code\n * is rotated or skewed, or partially obscured.\n *\n * @author David Olivier\n * @author Frank Yellin\n */\nvar Detector = /** @class */ (function () {\n    function Detector(image) {\n        this.EXPECTED_CORNER_BITS = new Int32Array([\n            0xee0,\n            0x1dc,\n            0x83b,\n            0x707,\n        ]);\n        this.image = image;\n    }\n    Detector.prototype.detect = function () {\n        return this.detectMirror(false);\n    };\n    /**\n     * Detects an Aztec Code in an image.\n     *\n     * @param isMirror if true, image is a mirror-image of original\n     * @return {@link AztecDetectorResult} encapsulating results of detecting an Aztec Code\n     * @throws NotFoundException if no Aztec Code can be found\n     */\n    Detector.prototype.detectMirror = function (isMirror) {\n        // 1. Get the center of the aztec matrix\n        var pCenter = this.getMatrixCenter();\n        // 2. Get the center points of the four diagonal points just outside the bull's eye\n        //  [topRight, bottomRight, bottomLeft, topLeft]\n        var bullsEyeCorners = this.getBullsEyeCorners(pCenter);\n        if (isMirror) {\n            var temp = bullsEyeCorners[0];\n            bullsEyeCorners[0] = bullsEyeCorners[2];\n            bullsEyeCorners[2] = temp;\n        }\n        // 3. Get the size of the matrix and other parameters from the bull's eye\n        this.extractParameters(bullsEyeCorners);\n        // 4. Sample the grid\n        var bits = this.sampleGrid(this.image, bullsEyeCorners[this.shift % 4], bullsEyeCorners[(this.shift + 1) % 4], bullsEyeCorners[(this.shift + 2) % 4], bullsEyeCorners[(this.shift + 3) % 4]);\n        // 5. Get the corners of the matrix.\n        var corners = this.getMatrixCornerPoints(bullsEyeCorners);\n        return new AztecDetectorResult_1.default(bits, corners, this.compact, this.nbDataBlocks, this.nbLayers);\n    };\n    /**\n     * Extracts the number of data layers and data blocks from the layer around the bull's eye.\n     *\n     * @param bullsEyeCorners the array of bull's eye corners\n     * @throws NotFoundException in case of too many errors or invalid parameters\n     */\n    Detector.prototype.extractParameters = function (bullsEyeCorners) {\n        if (!this.isValidPoint(bullsEyeCorners[0]) || !this.isValidPoint(bullsEyeCorners[1]) ||\n            !this.isValidPoint(bullsEyeCorners[2]) || !this.isValidPoint(bullsEyeCorners[3])) {\n            throw new NotFoundException_1.default();\n        }\n        var length = 2 * this.nbCenterLayers;\n        // Get the bits around the bull's eye\n        var sides = new Int32Array([\n            this.sampleLine(bullsEyeCorners[0], bullsEyeCorners[1], length),\n            this.sampleLine(bullsEyeCorners[1], bullsEyeCorners[2], length),\n            this.sampleLine(bullsEyeCorners[2], bullsEyeCorners[3], length),\n            this.sampleLine(bullsEyeCorners[3], bullsEyeCorners[0], length) // Top\n        ]);\n        // bullsEyeCorners[shift] is the corner of the bulls'eye that has three\n        // orientation marks.\n        // sides[shift] is the row/column that goes from the corner with three\n        // orientation marks to the corner with two.\n        this.shift = this.getRotation(sides, length);\n        // Flatten the parameter bits into a single 28- or 40-bit long\n        var parameterData = 0;\n        for (var i = 0; i < 4; i++) {\n            var side = sides[(this.shift + i) % 4];\n            if (this.compact) {\n                // Each side of the form ..XXXXXXX. where Xs are parameter data\n                parameterData <<= 7;\n                parameterData += (side >> 1) & 0x7F;\n            }\n            else {\n                // Each side of the form ..XXXXX.XXXXX. where Xs are parameter data\n                parameterData <<= 10;\n                parameterData += ((side >> 2) & (0x1f << 5)) + ((side >> 1) & 0x1F);\n            }\n        }\n        // Corrects parameter data using RS.  Returns just the data portion\n        // without the error correction.\n        var correctedData = this.getCorrectedParameterData(parameterData, this.compact);\n        if (this.compact) {\n            // 8 bits:  2 bits layers and 6 bits data blocks\n            this.nbLayers = (correctedData >> 6) + 1;\n            this.nbDataBlocks = (correctedData & 0x3F) + 1;\n        }\n        else {\n            // 16 bits:  5 bits layers and 11 bits data blocks\n            this.nbLayers = (correctedData >> 11) + 1;\n            this.nbDataBlocks = (correctedData & 0x7FF) + 1;\n        }\n    };\n    Detector.prototype.getRotation = function (sides, length) {\n        // In a normal pattern, we expect to See\n        //   **    .*             D       A\n        //   *      *\n        //\n        //   .      *\n        //   ..    ..             C       B\n        //\n        // Grab the 3 bits from each of the sides the form the locator pattern and concatenate\n        // into a 12-bit integer.  Start with the bit at A\n        var cornerBits = 0;\n        sides.forEach(function (side, idx, arr) {\n            // XX......X where X's are orientation marks\n            var t = ((side >> (length - 2)) << 1) + (side & 1);\n            cornerBits = (cornerBits << 3) + t;\n        });\n        // for (var side in sides) {\n        //     // XX......X where X's are orientation marks\n        //     var t = ((side >> (length - 2)) << 1) + (side & 1);\n        //     cornerBits = (cornerBits << 3) + t;\n        // }\n        // Mov the bottom bit to the top, so that the three bits of the locator pattern at A are\n        // together.  cornerBits is now:\n        //  3 orientation bits at A || 3 orientation bits at B || ... || 3 orientation bits at D\n        cornerBits = ((cornerBits & 1) << 11) + (cornerBits >> 1);\n        // The result shift indicates which element of BullsEyeCorners[] goes into the top-left\n        // corner. Since the four rotation values have a Hamming distance of 8, we\n        // can easily tolerate two errors.\n        for (var shift = 0; shift < 4; shift++) {\n            if (Integer_1.default.bitCount(cornerBits ^ this.EXPECTED_CORNER_BITS[shift]) <= 2) {\n                return shift;\n            }\n        }\n        throw new NotFoundException_1.default();\n    };\n    /**\n     * Corrects the parameter bits using Reed-Solomon algorithm.\n     *\n     * @param parameterData parameter bits\n     * @param compact true if this is a compact Aztec code\n     * @throws NotFoundException if the array contains too many errors\n     */\n    Detector.prototype.getCorrectedParameterData = function (parameterData, compact) {\n        var numCodewords;\n        var numDataCodewords;\n        if (compact) {\n            numCodewords = 7;\n            numDataCodewords = 2;\n        }\n        else {\n            numCodewords = 10;\n            numDataCodewords = 4;\n        }\n        var numECCodewords = numCodewords - numDataCodewords;\n        var parameterWords = new Int32Array(numCodewords);\n        for (var i = numCodewords - 1; i >= 0; --i) {\n            parameterWords[i] = parameterData & 0xF;\n            parameterData >>= 4;\n        }\n        try {\n            var rsDecoder = new ReedSolomonDecoder_1.default(GenericGF_1.default.AZTEC_PARAM);\n            rsDecoder.decode(parameterWords, numECCodewords);\n        }\n        catch (ignored) {\n            throw new NotFoundException_1.default();\n        }\n        // Toss the error correction.  Just return the data as an integer\n        var result = 0;\n        for (var i = 0; i < numDataCodewords; i++) {\n            result = (result << 4) + parameterWords[i];\n        }\n        return result;\n    };\n    /**\n     * Finds the corners of a bull-eye centered on the passed point.\n     * This returns the centers of the diagonal points just outside the bull's eye\n     * Returns [topRight, bottomRight, bottomLeft, topLeft]\n     *\n     * @param pCenter Center point\n     * @return The corners of the bull-eye\n     * @throws NotFoundException If no valid bull-eye can be found\n     */\n    Detector.prototype.getBullsEyeCorners = function (pCenter) {\n        var pina = pCenter;\n        var pinb = pCenter;\n        var pinc = pCenter;\n        var pind = pCenter;\n        var color = true;\n        for (this.nbCenterLayers = 1; this.nbCenterLayers < 9; this.nbCenterLayers++) {\n            var pouta = this.getFirstDifferent(pina, color, 1, -1);\n            var poutb = this.getFirstDifferent(pinb, color, 1, 1);\n            var poutc = this.getFirstDifferent(pinc, color, -1, 1);\n            var poutd = this.getFirstDifferent(pind, color, -1, -1);\n            // d      a\n            //\n            // c      b\n            if (this.nbCenterLayers > 2) {\n                var q = (this.distancePoint(poutd, pouta) * this.nbCenterLayers) / (this.distancePoint(pind, pina) * (this.nbCenterLayers + 2));\n                if (q < 0.75 || q > 1.25 || !this.isWhiteOrBlackRectangle(pouta, poutb, poutc, poutd)) {\n                    break;\n                }\n            }\n            pina = pouta;\n            pinb = poutb;\n            pinc = poutc;\n            pind = poutd;\n            color = !color;\n        }\n        if (this.nbCenterLayers !== 5 && this.nbCenterLayers !== 7) {\n            throw new NotFoundException_1.default();\n        }\n        this.compact = this.nbCenterLayers === 5;\n        // Expand the square by .5 pixel in each direction so that we're on the border\n        // between the white square and the black square\n        var pinax = new ResultPoint_1.default(pina.getX() + 0.5, pina.getY() - 0.5);\n        var pinbx = new ResultPoint_1.default(pinb.getX() + 0.5, pinb.getY() + 0.5);\n        var pincx = new ResultPoint_1.default(pinc.getX() - 0.5, pinc.getY() + 0.5);\n        var pindx = new ResultPoint_1.default(pind.getX() - 0.5, pind.getY() - 0.5);\n        // Expand the square so that its corners are the centers of the points\n        // just outside the bull's eye.\n        return this.expandSquare([pinax, pinbx, pincx, pindx], 2 * this.nbCenterLayers - 3, 2 * this.nbCenterLayers);\n    };\n    /**\n     * Finds a candidate center point of an Aztec code from an image\n     *\n     * @return the center point\n     */\n    Detector.prototype.getMatrixCenter = function () {\n        var pointA;\n        var pointB;\n        var pointC;\n        var pointD;\n        // Get a white rectangle that can be the border of the matrix in center bull's eye or\n        try {\n            var cornerPoints = new WhiteRectangleDetector_1.default(this.image).detect();\n            pointA = cornerPoints[0];\n            pointB = cornerPoints[1];\n            pointC = cornerPoints[2];\n            pointD = cornerPoints[3];\n        }\n        catch (e) {\n            // This exception can be in case the initial rectangle is white\n            // In that case, surely in the bull's eye, we try to expand the rectangle.\n            var cx_1 = this.image.getWidth() / 2;\n            var cy_1 = this.image.getHeight() / 2;\n            pointA = this.getFirstDifferent(new Point(cx_1 + 7, cy_1 - 7), false, 1, -1).toResultPoint();\n            pointB = this.getFirstDifferent(new Point(cx_1 + 7, cy_1 + 7), false, 1, 1).toResultPoint();\n            pointC = this.getFirstDifferent(new Point(cx_1 - 7, cy_1 + 7), false, -1, 1).toResultPoint();\n            pointD = this.getFirstDifferent(new Point(cx_1 - 7, cy_1 - 7), false, -1, -1).toResultPoint();\n        }\n        // Compute the center of the rectangle\n        var cx = MathUtils_1.default.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n        var cy = MathUtils_1.default.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0);\n        // Redetermine the white rectangle starting from previously computed center.\n        // This will ensure that we end up with a white rectangle in center bull's eye\n        // in order to compute a more accurate center.\n        try {\n            var cornerPoints = new WhiteRectangleDetector_1.default(this.image, 15, cx, cy).detect();\n            pointA = cornerPoints[0];\n            pointB = cornerPoints[1];\n            pointC = cornerPoints[2];\n            pointD = cornerPoints[3];\n        }\n        catch (e) {\n            // This exception can be in case the initial rectangle is white\n            // In that case we try to expand the rectangle.\n            pointA = this.getFirstDifferent(new Point(cx + 7, cy - 7), false, 1, -1).toResultPoint();\n            pointB = this.getFirstDifferent(new Point(cx + 7, cy + 7), false, 1, 1).toResultPoint();\n            pointC = this.getFirstDifferent(new Point(cx - 7, cy + 7), false, -1, 1).toResultPoint();\n            pointD = this.getFirstDifferent(new Point(cx - 7, cy - 7), false, -1, -1).toResultPoint();\n        }\n        // Recompute the center of the rectangle\n        cx = MathUtils_1.default.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n        cy = MathUtils_1.default.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0);\n        return new Point(cx, cy);\n    };\n    /**\n     * Gets the Aztec code corners from the bull's eye corners and the parameters.\n     *\n     * @param bullsEyeCorners the array of bull's eye corners\n     * @return the array of aztec code corners\n     */\n    Detector.prototype.getMatrixCornerPoints = function (bullsEyeCorners) {\n        return this.expandSquare(bullsEyeCorners, 2 * this.nbCenterLayers, this.getDimension());\n    };\n    /**\n     * Creates a BitMatrix by sampling the provided image.\n     * topLeft, topRight, bottomRight, and bottomLeft are the centers of the squares on the\n     * diagonal just outside the bull's eye.\n     */\n    Detector.prototype.sampleGrid = function (image, topLeft, topRight, bottomRight, bottomLeft) {\n        var sampler = GridSamplerInstance_1.default.getInstance();\n        var dimension = this.getDimension();\n        var low = dimension / 2 - this.nbCenterLayers;\n        var high = dimension / 2 + this.nbCenterLayers;\n        return sampler.sampleGrid(image, dimension, dimension, low, low, // topleft\n        high, low, // topright\n        high, high, // bottomright\n        low, high, // bottomleft\n        topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n    };\n    /**\n     * Samples a line.\n     *\n     * @param p1   start point (inclusive)\n     * @param p2   end point (exclusive)\n     * @param size number of bits\n     * @return the array of bits as an int (first bit is high-order bit of result)\n     */\n    Detector.prototype.sampleLine = function (p1, p2, size) {\n        var result = 0;\n        var d = this.distanceResultPoint(p1, p2);\n        var moduleSize = d / size;\n        var px = p1.getX();\n        var py = p1.getY();\n        var dx = moduleSize * (p2.getX() - p1.getX()) / d;\n        var dy = moduleSize * (p2.getY() - p1.getY()) / d;\n        for (var i = 0; i < size; i++) {\n            if (this.image.get(MathUtils_1.default.round(px + i * dx), MathUtils_1.default.round(py + i * dy))) {\n                result |= 1 << (size - i - 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * @return true if the border of the rectangle passed in parameter is compound of white points only\n     *         or black points only\n     */\n    Detector.prototype.isWhiteOrBlackRectangle = function (p1, p2, p3, p4) {\n        var corr = 3;\n        p1 = new Point(p1.getX() - corr, p1.getY() + corr);\n        p2 = new Point(p2.getX() - corr, p2.getY() - corr);\n        p3 = new Point(p3.getX() + corr, p3.getY() - corr);\n        p4 = new Point(p4.getX() + corr, p4.getY() + corr);\n        var cInit = this.getColor(p4, p1);\n        if (cInit === 0) {\n            return false;\n        }\n        var c = this.getColor(p1, p2);\n        if (c !== cInit) {\n            return false;\n        }\n        c = this.getColor(p2, p3);\n        if (c !== cInit) {\n            return false;\n        }\n        c = this.getColor(p3, p4);\n        return c === cInit;\n    };\n    /**\n     * Gets the color of a segment\n     *\n     * @return 1 if segment more than 90% black, -1 if segment is more than 90% white, 0 else\n     */\n    Detector.prototype.getColor = function (p1, p2) {\n        var d = this.distancePoint(p1, p2);\n        var dx = (p2.getX() - p1.getX()) / d;\n        var dy = (p2.getY() - p1.getY()) / d;\n        var error = 0;\n        var px = p1.getX();\n        var py = p1.getY();\n        var colorModel = this.image.get(p1.getX(), p1.getY());\n        var iMax = Math.ceil(d);\n        for (var i = 0; i < iMax; i++) {\n            px += dx;\n            py += dy;\n            if (this.image.get(MathUtils_1.default.round(px), MathUtils_1.default.round(py)) !== colorModel) {\n                error++;\n            }\n        }\n        var errRatio = error / d;\n        if (errRatio > 0.1 && errRatio < 0.9) {\n            return 0;\n        }\n        return (errRatio <= 0.1) === colorModel ? 1 : -1;\n    };\n    /**\n     * Gets the coordinate of the first point with a different color in the given direction\n     */\n    Detector.prototype.getFirstDifferent = function (init, color, dx, dy) {\n        var x = init.getX() + dx;\n        var y = init.getY() + dy;\n        while (this.isValid(x, y) && this.image.get(x, y) === color) {\n            x += dx;\n            y += dy;\n        }\n        x -= dx;\n        y -= dy;\n        while (this.isValid(x, y) && this.image.get(x, y) === color) {\n            x += dx;\n        }\n        x -= dx;\n        while (this.isValid(x, y) && this.image.get(x, y) === color) {\n            y += dy;\n        }\n        y -= dy;\n        return new Point(x, y);\n    };\n    /**\n     * Expand the square represented by the corner points by pushing out equally in all directions\n     *\n     * @param cornerPoints the corners of the square, which has the bull's eye at its center\n     * @param oldSide the original length of the side of the square in the target bit matrix\n     * @param newSide the new length of the size of the square in the target bit matrix\n     * @return the corners of the expanded square\n     */\n    Detector.prototype.expandSquare = function (cornerPoints, oldSide, newSide) {\n        var ratio = newSide / (2.0 * oldSide);\n        var dx = cornerPoints[0].getX() - cornerPoints[2].getX();\n        var dy = cornerPoints[0].getY() - cornerPoints[2].getY();\n        var centerx = (cornerPoints[0].getX() + cornerPoints[2].getX()) / 2.0;\n        var centery = (cornerPoints[0].getY() + cornerPoints[2].getY()) / 2.0;\n        var result0 = new ResultPoint_1.default(centerx + ratio * dx, centery + ratio * dy);\n        var result2 = new ResultPoint_1.default(centerx - ratio * dx, centery - ratio * dy);\n        dx = cornerPoints[1].getX() - cornerPoints[3].getX();\n        dy = cornerPoints[1].getY() - cornerPoints[3].getY();\n        centerx = (cornerPoints[1].getX() + cornerPoints[3].getX()) / 2.0;\n        centery = (cornerPoints[1].getY() + cornerPoints[3].getY()) / 2.0;\n        var result1 = new ResultPoint_1.default(centerx + ratio * dx, centery + ratio * dy);\n        var result3 = new ResultPoint_1.default(centerx - ratio * dx, centery - ratio * dy);\n        var results = [result0, result1, result2, result3];\n        return results;\n    };\n    Detector.prototype.isValid = function (x, y) {\n        return x >= 0 && x < this.image.getWidth() && y > 0 && y < this.image.getHeight();\n    };\n    Detector.prototype.isValidPoint = function (point) {\n        var x = MathUtils_1.default.round(point.getX());\n        var y = MathUtils_1.default.round(point.getY());\n        return this.isValid(x, y);\n    };\n    Detector.prototype.distancePoint = function (a, b) {\n        return MathUtils_1.default.distance(a.getX(), a.getY(), b.getX(), b.getY());\n    };\n    Detector.prototype.distanceResultPoint = function (a, b) {\n        return MathUtils_1.default.distance(a.getX(), a.getY(), b.getX(), b.getY());\n    };\n    Detector.prototype.getDimension = function () {\n        if (this.compact) {\n            return 4 * this.nbLayers + 11;\n        }\n        if (this.nbLayers <= 4) {\n            return 4 * this.nbLayers + 15;\n        }\n        return 4 * this.nbLayers + 2 * (Integer_1.default.truncDivision((this.nbLayers - 4), 8) + 1) + 15;\n    };\n    return Detector;\n}());\nexports.default = Detector;\n//# sourceMappingURL=Detector.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Point","ResultPoint_1","AztecDetectorResult_1","MathUtils_1","WhiteRectangleDetector_1","GenericGF_1","ReedSolomonDecoder_1","NotFoundException_1","GridSamplerInstance_1","Integer_1","x","y","prototype","toResultPoint","Point.prototype.toResultPoint","default","getX","getY","Point.prototype.getX","Point.prototype.getY","Detector","image","EXPECTED_CORNER_BITS","Int32Array","detect","Detector.prototype.detect","detectMirror","Detector.prototype.detectMirror","isMirror","pCenter","getMatrixCenter","bullsEyeCorners","getBullsEyeCorners","temp","extractParameters","bits","sampleGrid","shift","corners","getMatrixCornerPoints","compact","nbDataBlocks","nbLayers","Detector.prototype.extractParameters","isValidPoint","length","nbCenterLayers","sides","sampleLine","getRotation","i","parameterData","side","correctedData","getCorrectedParameterData","Detector.prototype.getRotation","cornerBits","forEach","idx","arr","bitCount","Detector.prototype.getCorrectedParameterData","numCodewords","numDataCodewords","numECCodewords","parameterWords","decode","rsDecoder","AZTEC_PARAM","ignored","result","Detector.prototype.getBullsEyeCorners","pina","pinb","pinc","color","pouta","getFirstDifferent","poutb","poutc","poutd","pind","q","distancePoint","isWhiteOrBlackRectangle","pinax","pinbx","pincx","pindx","expandSquare","Detector.prototype.getMatrixCenter","cornerPoints","pointA","pointB","pointC","pointD","e","cx_1","getWidth","cy_1","getHeight","cx","round","cy","Detector.prototype.getMatrixCornerPoints","getDimension","Detector.prototype.sampleGrid","topLeft","topRight","bottomRight","bottomLeft","sampler","getInstance","dimension","low","high","Detector.prototype.sampleLine","p1","p2","size","d","distanceResultPoint","moduleSize","px","py","dx","dy","get","Detector.prototype.isWhiteOrBlackRectangle","p3","p4","corr","cInit","getColor","c","Detector.prototype.getColor","error","colorModel","iMax","Math","ceil","errRatio","Detector.prototype.getFirstDifferent","init","isValid","Detector.prototype.expandSquare","oldSide","newSide","ratio","centerx","centery","result0","result2","result1","result3","results","Detector.prototype.isValid","Detector.prototype.isValidPoint","point","Detector.prototype.distancePoint","a","b","distance","Detector.prototype.distanceResultPoint","Detector.prototype.getDimension","truncDivision"]
}
