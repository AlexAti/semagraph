shadow$provide.module$node_modules$$zxing$library$cjs$core$qrcode$QRCodeWriter=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var BarcodeFormat_1=require("module$node_modules$$zxing$library$cjs$core$BarcodeFormat"),EncodeHintType_1=require("module$node_modules$$zxing$library$cjs$core$EncodeHintType"),BitMatrix_1=require("module$node_modules$$zxing$library$cjs$core$common$BitMatrix"),ErrorCorrectionLevel_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$decoder$ErrorCorrectionLevel"),
Encoder_1=require("module$node_modules$$zxing$library$cjs$core$qrcode$encoder$Encoder"),IllegalArgumentException_1=require("module$node_modules$$zxing$library$cjs$core$IllegalArgumentException"),IllegalStateException_1=require("module$node_modules$$zxing$library$cjs$core$IllegalStateException");global=function(){function QRCodeWriter(){}QRCodeWriter.prototype.encode=function(contents,format,width,height,hints){if(0===contents.length)throw new IllegalArgumentException_1.default("Found empty contents");
if(format!==BarcodeFormat_1.default.QR_CODE)throw new IllegalArgumentException_1.default("Can only encode QR_CODE, but got "+format);if(0>width||0>height)throw new IllegalArgumentException_1.default("Requested dimensions are too small: "+width+"x"+height);var errorCorrectionLevel=ErrorCorrectionLevel_1.default.L;format=QRCodeWriter.QUIET_ZONE_SIZE;null!==hints&&(void 0!==hints.get(EncodeHintType_1.default.ERROR_CORRECTION)&&(errorCorrectionLevel=ErrorCorrectionLevel_1.default.fromString(hints.get(EncodeHintType_1.default.ERROR_CORRECTION).toString())),
void 0!==hints.get(EncodeHintType_1.default.MARGIN)&&(format=Number.parseInt(hints.get(EncodeHintType_1.default.MARGIN).toString(),10)));contents=Encoder_1.default.encode(contents,errorCorrectionLevel,hints);return QRCodeWriter.renderResult(contents,width,height,format)};QRCodeWriter.renderResult=function(code,width,height,quietZone){code=code.getMatrix();if(null===code)throw new IllegalStateException_1.default;var inputWidth=code.getWidth(),inputHeight=code.getHeight(),qrWidth=inputWidth+2*quietZone,
qrHeight=inputHeight+2*quietZone;width=Math.max(width,qrWidth);quietZone=Math.max(height,qrHeight);height=Math.min(Math.floor(width/qrWidth),Math.floor(quietZone/qrHeight));qrWidth=Math.floor((width-inputWidth*height)/2);qrHeight=Math.floor((quietZone-inputHeight*height)/2);width=new BitMatrix_1.default(width,quietZone);for(quietZone=0;quietZone<inputHeight;quietZone++,qrHeight+=height)for(var inputX=0,outputX=qrWidth;inputX<inputWidth;inputX++,outputX+=height)1===code.get(inputX,quietZone)&&width.setRegion(outputX,
qrHeight,height,height);return width};QRCodeWriter.QUIET_ZONE_SIZE=4;return QRCodeWriter}();exports.default=global}
//# sourceMappingURL=module$node_modules$$zxing$library$cjs$core$qrcode$QRCodeWriter.js.map
