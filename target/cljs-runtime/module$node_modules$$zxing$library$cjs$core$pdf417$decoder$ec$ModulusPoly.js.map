{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$ec$ModulusPoly.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/core/pdf417/decoder/ec/ModulusPoly.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$core$pdf417$decoder$ec$ModulusPoly\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n* Copyright 2012 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder.ec;\nvar IllegalArgumentException_1 = require(\"../../../IllegalArgumentException\");\nvar System_1 = require(\"../../../util/System\");\nvar StringBuilder_1 = require(\"../../../util/StringBuilder\");\n/**\n * @author Sean Owen\n * @see com.google.zxing.common.reedsolomon.GenericGFPoly\n */\nvar ModulusPoly = /** @class */ (function () {\n    function ModulusPoly(field, coefficients) {\n        if (coefficients.length === 0) {\n            throw new IllegalArgumentException_1.default();\n        }\n        this.field = field;\n        var coefficientsLength = /*int*/ coefficients.length;\n        if (coefficientsLength > 1 && coefficients[0] === 0) {\n            // Leading term must be non-zero for anything except the constant polynomial \"0\"\n            var firstNonZero = /*int*/ 1;\n            while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                firstNonZero++;\n            }\n            if (firstNonZero === coefficientsLength) {\n                this.coefficients = new Int32Array([0]);\n            }\n            else {\n                this.coefficients = new Int32Array(coefficientsLength - firstNonZero);\n                System_1.default.arraycopy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\n            }\n        }\n        else {\n            this.coefficients = coefficients;\n        }\n    }\n    ModulusPoly.prototype.getCoefficients = function () {\n        return this.coefficients;\n    };\n    /**\n     * @return degree of this polynomial\n     */\n    ModulusPoly.prototype.getDegree = function () {\n        return this.coefficients.length - 1;\n    };\n    /**\n     * @return true iff this polynomial is the monomial \"0\"\n     */\n    ModulusPoly.prototype.isZero = function () {\n        return this.coefficients[0] === 0;\n    };\n    /**\n     * @return coefficient of x^degree term in this polynomial\n     */\n    ModulusPoly.prototype.getCoefficient = function (degree) {\n        return this.coefficients[this.coefficients.length - 1 - degree];\n    };\n    /**\n     * @return evaluation of this polynomial at a given point\n     */\n    ModulusPoly.prototype.evaluateAt = function (a) {\n        var e_1, _a;\n        if (a === 0) {\n            // Just return the x^0 coefficient\n            return this.getCoefficient(0);\n        }\n        if (a === 1) {\n            // Just the sum of the coefficients\n            var sum = /*int*/ 0;\n            try {\n                for (var _b = __values(this.coefficients), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var coefficient = _c.value /*int*/;\n                    sum = this.field.add(sum, coefficient);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return sum;\n        }\n        var result = /*int*/ this.coefficients[0];\n        var size = /*int*/ this.coefficients.length;\n        for (var i /*int*/ = 1; i < size; i++) {\n            result = this.field.add(this.field.multiply(a, result), this.coefficients[i]);\n        }\n        return result;\n    };\n    ModulusPoly.prototype.add = function (other) {\n        if (!this.field.equals(other.field)) {\n            throw new IllegalArgumentException_1.default('ModulusPolys do not have same ModulusGF field');\n        }\n        if (this.isZero()) {\n            return other;\n        }\n        if (other.isZero()) {\n            return this;\n        }\n        var smallerCoefficients = this.coefficients;\n        var largerCoefficients = other.coefficients;\n        if (smallerCoefficients.length > largerCoefficients.length) {\n            var temp = smallerCoefficients;\n            smallerCoefficients = largerCoefficients;\n            largerCoefficients = temp;\n        }\n        var sumDiff = new Int32Array(largerCoefficients.length);\n        var lengthDiff = /*int*/ largerCoefficients.length - smallerCoefficients.length;\n        // Copy high-order terms only found in higher-degree polynomial's coefficients\n        System_1.default.arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n        for (var i /*int*/ = lengthDiff; i < largerCoefficients.length; i++) {\n            sumDiff[i] = this.field.add(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n        }\n        return new ModulusPoly(this.field, sumDiff);\n    };\n    ModulusPoly.prototype.subtract = function (other) {\n        if (!this.field.equals(other.field)) {\n            throw new IllegalArgumentException_1.default('ModulusPolys do not have same ModulusGF field');\n        }\n        if (other.isZero()) {\n            return this;\n        }\n        return this.add(other.negative());\n    };\n    ModulusPoly.prototype.multiply = function (other) {\n        if (other instanceof ModulusPoly) {\n            return this.multiplyOther(other);\n        }\n        return this.multiplyScalar(other);\n    };\n    ModulusPoly.prototype.multiplyOther = function (other) {\n        if (!this.field.equals(other.field)) {\n            throw new IllegalArgumentException_1.default('ModulusPolys do not have same ModulusGF field');\n        }\n        if (this.isZero() || other.isZero()) {\n            // return this.field.getZero();\n            return new ModulusPoly(this.field, new Int32Array([0]));\n        }\n        var aCoefficients = this.coefficients;\n        var aLength = /*int*/ aCoefficients.length;\n        var bCoefficients = other.coefficients;\n        var bLength = /*int*/ bCoefficients.length;\n        var product = new Int32Array(aLength + bLength - 1);\n        for (var i /*int*/ = 0; i < aLength; i++) {\n            var aCoeff = /*int*/ aCoefficients[i];\n            for (var j /*int*/ = 0; j < bLength; j++) {\n                product[i + j] = this.field.add(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n            }\n        }\n        return new ModulusPoly(this.field, product);\n    };\n    ModulusPoly.prototype.negative = function () {\n        var size = /*int*/ this.coefficients.length;\n        var negativeCoefficients = new Int32Array(size);\n        for (var i /*int*/ = 0; i < size; i++) {\n            negativeCoefficients[i] = this.field.subtract(0, this.coefficients[i]);\n        }\n        return new ModulusPoly(this.field, negativeCoefficients);\n    };\n    ModulusPoly.prototype.multiplyScalar = function (scalar) {\n        if (scalar === 0) {\n            return new ModulusPoly(this.field, new Int32Array([0]));\n        }\n        if (scalar === 1) {\n            return this;\n        }\n        var size = /*int*/ this.coefficients.length;\n        var product = new Int32Array(size);\n        for (var i /*int*/ = 0; i < size; i++) {\n            product[i] = this.field.multiply(this.coefficients[i], scalar);\n        }\n        return new ModulusPoly(this.field, product);\n    };\n    ModulusPoly.prototype.multiplyByMonomial = function (degree, coefficient) {\n        if (degree < 0) {\n            throw new IllegalArgumentException_1.default();\n        }\n        if (coefficient === 0) {\n            return new ModulusPoly(this.field, new Int32Array([0]));\n        }\n        var size = /*int*/ this.coefficients.length;\n        var product = new Int32Array(size + degree);\n        for (var i /*int*/ = 0; i < size; i++) {\n            product[i] = this.field.multiply(this.coefficients[i], coefficient);\n        }\n        return new ModulusPoly(this.field, product);\n    };\n    /*\n    ModulusPoly[] divide(other: ModulusPoly) {\n      if (!field.equals(other.field)) {\n        throw new IllegalArgumentException(\"ModulusPolys do not have same ModulusGF field\");\n      }\n      if (other.isZero()) {\n        throw new IllegalArgumentException(\"Divide by 0\");\n      }\n  \n      let quotient: ModulusPoly = field.getZero();\n      let remainder: ModulusPoly = this;\n  \n      let denominatorLeadingTerm: /*int/ number = other.getCoefficient(other.getDegree());\n      let inverseDenominatorLeadingTerm: /*int/ number = field.inverse(denominatorLeadingTerm);\n  \n      while (remainder.getDegree() >= other.getDegree() && !remainder.isZero()) {\n        let degreeDifference: /*int/ number = remainder.getDegree() - other.getDegree();\n        let scale: /*int/ number = field.multiply(remainder.getCoefficient(remainder.getDegree()), inverseDenominatorLeadingTerm);\n        let term: ModulusPoly = other.multiplyByMonomial(degreeDifference, scale);\n        let iterationQuotient: ModulusPoly = field.buildMonomial(degreeDifference, scale);\n        quotient = quotient.add(iterationQuotient);\n        remainder = remainder.subtract(term);\n      }\n  \n      return new ModulusPoly[] { quotient, remainder };\n    }\n    */\n    // @Override\n    ModulusPoly.prototype.toString = function () {\n        var result = new StringBuilder_1.default( /*8 * this.getDegree()*/); // dynamic string size in JS\n        for (var degree /*int*/ = this.getDegree(); degree >= 0; degree--) {\n            var coefficient = /*int*/ this.getCoefficient(degree);\n            if (coefficient !== 0) {\n                if (coefficient < 0) {\n                    result.append(' - ');\n                    coefficient = -coefficient;\n                }\n                else {\n                    if (result.length() > 0) {\n                        result.append(' + ');\n                    }\n                }\n                if (degree === 0 || coefficient !== 1) {\n                    result.append(coefficient);\n                }\n                if (degree !== 0) {\n                    if (degree === 1) {\n                        result.append('x');\n                    }\n                    else {\n                        result.append('x^');\n                        result.append(degree);\n                    }\n                }\n            }\n        }\n        return result.toString();\n    };\n    return ModulusPoly;\n}());\nexports.default = ModulusPoly;\n//# sourceMappingURL=ModulusPoly.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","IllegalArgumentException_1","System_1","StringBuilder_1","ModulusPoly","field","coefficients","default","coefficientsLength","firstNonZero","Int32Array","arraycopy","prototype","getCoefficients","ModulusPoly.prototype.getCoefficients","getDegree","ModulusPoly.prototype.getDegree","isZero","ModulusPoly.prototype.isZero","getCoefficient","ModulusPoly.prototype.getCoefficient","degree","evaluateAt","ModulusPoly.prototype.evaluateAt","a","_a","sum","_b","_c","add","e_1_1","e_1","error","return","result","size","multiply","ModulusPoly.prototype.add","other","equals","smallerCoefficients","largerCoefficients","temp","sumDiff","lengthDiff","subtract","ModulusPoly.prototype.subtract","negative","ModulusPoly.prototype.multiply","multiplyOther","multiplyScalar","ModulusPoly.prototype.multiplyOther","aCoefficients","aLength","bCoefficients","bLength","product","aCoeff","j","ModulusPoly.prototype.negative","negativeCoefficients","ModulusPoly.prototype.multiplyScalar","scalar","multiplyByMonomial","ModulusPoly.prototype.multiplyByMonomial","coefficient","toString","ModulusPoly.prototype.toString","append"]
}
