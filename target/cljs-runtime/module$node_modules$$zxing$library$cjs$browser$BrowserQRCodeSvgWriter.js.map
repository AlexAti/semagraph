{
"version":3,
"file":"module$node_modules$$zxing$library$cjs$browser$BrowserQRCodeSvgWriter.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@zxing/library/cjs/browser/BrowserQRCodeSvgWriter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$zxing$library$cjs$browser$BrowserQRCodeSvgWriter\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserQRCodeSvgWriter = void 0;\nvar EncodeHintType_1 = require(\"../core/EncodeHintType\");\nvar Encoder_1 = require(\"../core/qrcode/encoder/Encoder\");\nvar ErrorCorrectionLevel_1 = require(\"../core/qrcode/decoder/ErrorCorrectionLevel\");\nvar IllegalArgumentException_1 = require(\"../core/IllegalArgumentException\");\nvar IllegalStateException_1 = require(\"../core/IllegalStateException\");\n/**\n * @deprecated Moving to @zxing/browser\n */\nvar BrowserQRCodeSvgWriter = /** @class */ (function () {\n    function BrowserQRCodeSvgWriter() {\n    }\n    /**\n     * Writes and renders a QRCode SVG element.\n     *\n     * @param contents\n     * @param width\n     * @param height\n     * @param hints\n     */\n    BrowserQRCodeSvgWriter.prototype.write = function (contents, width, height, hints) {\n        if (hints === void 0) { hints = null; }\n        if (contents.length === 0) {\n            throw new IllegalArgumentException_1.default('Found empty contents');\n        }\n        // if (format != BarcodeFormat.QR_CODE) {\n        //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\n        // }\n        if (width < 0 || height < 0) {\n            throw new IllegalArgumentException_1.default('Requested dimensions are too small: ' + width + 'x' + height);\n        }\n        var errorCorrectionLevel = ErrorCorrectionLevel_1.default.L;\n        var quietZone = BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;\n        if (hints !== null) {\n            if (undefined !== hints.get(EncodeHintType_1.default.ERROR_CORRECTION)) {\n                errorCorrectionLevel = ErrorCorrectionLevel_1.default.fromString(hints.get(EncodeHintType_1.default.ERROR_CORRECTION).toString());\n            }\n            if (undefined !== hints.get(EncodeHintType_1.default.MARGIN)) {\n                quietZone = Number.parseInt(hints.get(EncodeHintType_1.default.MARGIN).toString(), 10);\n            }\n        }\n        var code = Encoder_1.default.encode(contents, errorCorrectionLevel, hints);\n        return this.renderResult(code, width, height, quietZone);\n    };\n    /**\n     * Renders the result and then appends it to the DOM.\n     */\n    BrowserQRCodeSvgWriter.prototype.writeToDom = function (containerElement, contents, width, height, hints) {\n        if (hints === void 0) { hints = null; }\n        if (typeof containerElement === 'string') {\n            containerElement = document.querySelector(containerElement);\n        }\n        var svgElement = this.write(contents, width, height, hints);\n        if (containerElement)\n            containerElement.appendChild(svgElement);\n    };\n    /**\n     * Note that the input matrix uses 0 == white, 1 == black.\n     * The output matrix uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n     */\n    BrowserQRCodeSvgWriter.prototype.renderResult = function (code, width /*int*/, height /*int*/, quietZone /*int*/) {\n        var input = code.getMatrix();\n        if (input === null) {\n            throw new IllegalStateException_1.default();\n        }\n        var inputWidth = input.getWidth();\n        var inputHeight = input.getHeight();\n        var qrWidth = inputWidth + (quietZone * 2);\n        var qrHeight = inputHeight + (quietZone * 2);\n        var outputWidth = Math.max(width, qrWidth);\n        var outputHeight = Math.max(height, qrHeight);\n        var multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n        // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n        // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n        // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n        // handle all the padding from 100x100 (the actual QR) up to 200x160.\n        var leftPadding = Math.floor((outputWidth - (inputWidth * multiple)) / 2);\n        var topPadding = Math.floor((outputHeight - (inputHeight * multiple)) / 2);\n        var svgElement = this.createSVGElement(outputWidth, outputHeight);\n        for (var inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n            // Write the contents of this row of the barcode\n            for (var inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                if (input.get(inputX, inputY) === 1) {\n                    var svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\n                    svgElement.appendChild(svgRectElement);\n                }\n            }\n        }\n        return svgElement;\n    };\n    /**\n     * Creates a SVG element.\n     *\n     * @param w SVG's width attribute\n     * @param h SVG's height attribute\n     */\n    BrowserQRCodeSvgWriter.prototype.createSVGElement = function (w, h) {\n        var svgElement = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'svg');\n        svgElement.setAttributeNS(null, 'height', w.toString());\n        svgElement.setAttributeNS(null, 'width', h.toString());\n        return svgElement;\n    };\n    /**\n     * Creates a SVG rect element.\n     *\n     * @param x Element's x coordinate\n     * @param y Element's y coordinate\n     * @param w Element's width attribute\n     * @param h Element's height attribute\n     */\n    BrowserQRCodeSvgWriter.prototype.createSvgRectElement = function (x, y, w, h) {\n        var rect = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'rect');\n        rect.setAttributeNS(null, 'x', x.toString());\n        rect.setAttributeNS(null, 'y', y.toString());\n        rect.setAttributeNS(null, 'height', w.toString());\n        rect.setAttributeNS(null, 'width', h.toString());\n        rect.setAttributeNS(null, 'fill', '#000000');\n        return rect;\n    };\n    BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE = 4;\n    /**\n     * SVG markup NameSpace\n     */\n    BrowserQRCodeSvgWriter.SVG_NS = 'http://www.w3.org/2000/svg';\n    return BrowserQRCodeSvgWriter;\n}());\nexports.BrowserQRCodeSvgWriter = BrowserQRCodeSvgWriter;\n//# sourceMappingURL=BrowserQRCodeSvgWriter.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","BrowserQRCodeSvgWriter","EncodeHintType_1","Encoder_1","ErrorCorrectionLevel_1","IllegalArgumentException_1","IllegalStateException_1","prototype","write","BrowserQRCodeSvgWriter.prototype.write","contents","width","height","hints","length","default","errorCorrectionLevel","L","quietZone","QUIET_ZONE_SIZE","undefined","get","ERROR_CORRECTION","fromString","toString","MARGIN","Number","parseInt","code","encode","renderResult","writeToDom","BrowserQRCodeSvgWriter.prototype.writeToDom","containerElement","document","querySelector","svgElement","appendChild","BrowserQRCodeSvgWriter.prototype.renderResult","input","getMatrix","inputWidth","getWidth","inputHeight","getHeight","qrWidth","qrHeight","outputWidth","Math","max","outputHeight","multiple","min","floor","leftPadding","topPadding","createSVGElement","inputY","outputY","inputX","outputX","svgRectElement","createSvgRectElement","BrowserQRCodeSvgWriter.prototype.createSVGElement","w","h","createElementNS","SVG_NS","setAttributeNS","BrowserQRCodeSvgWriter.prototype.createSvgRectElement","x","y","rect"]
}
